УДК 004.8
ОБЛАЧНАЯ ПЛАТФОРМА ДЛЯ РАЗРАБОТКИ И УПРАВЛЕНИЯ
ИНТЕЛЛЕКТУАЛЬНЫМИ СИСТЕМАМИ
В.В. Грибова (gribova@iacp.dvo.ru)
А.С. Клещев (kleschev@iacp.dvo.ru)
Д.А. Крылов (dmalkr@gmail.com)
Ф.М. Москаленко (philipmm@yahoo.com)
С.В. Смагин (smagin@iacp.dvo.ru)
В.А. Тимченко (rakot2k@mail.ru)
М.Б. Тютюнник (michaelhuman@gmail.com)
Е.А. Шалфеева (shalf@iacp.dvo.ru)
Учреждение Российской академии наук Институт автоматики и процессов
управления Дальневосточного отделения РАН, г. Владивосток, Россия
В данной работе описаны основные идеи, задачи, концептуальная архитектура программноинформационного комплекса, основанного на концепции облачных вычислений и
предназначенного для разработки, управления и использования интеллектуальных систем.
Проводится анализ имеющихся на рынке сред, обосновывается актуальность создания
нового комплекса, ориентированного на интеллектуальные системы.
Ключевые слова: инструментальные
технологии, облачные вычисления.
средства,
интеллектуальные
системы,
интернетВведение
Проблема разработки и широкого использования практически полезных интеллектуальных
систем в различных областях человеческой деятельности остается к настоящему времени
нерешенной, несмотря на значительные успехи, как в области искусственного интеллекта, так и
в области технологии программирования.
В работе [Грибова и др., 2010] подробно обсуждались причины, по которым
интеллектуальные системы не получили широкого практического использования, основной из
которых является несоответствие пользовательских свойств таких систем требованиям,
предъявляемым к ним: базы знаний чаще всего представлены в форме правил, которые
непонятны экспертам предметной области, они не в состоянии без инженера знаний их
создавать и сопровождать; объяснения, как правило, либо ориентированы на начинающих
специалистов, либо отображают трассировку логического вывода, что опытным экспертам не
удобно; форма диалога и представления входных/выходных данных неудобна специалистам
предметной области и не предназначена для пользователей с разным опытом работы и
требованиями к системе. В результате доверие к ним остается очень низким, использование
вызывает массу трудностей, специалисты предпочитают ими не пользоваться.
При этом создание и сопровождение интеллектуальных систем связано как со
значительными затратами труда, так и высокими требованиями к квалификации их
разработчиков/сопровождающих. Для решения проблемы увеличения продолжительности
периода эксплуатации программных средств в целом в работе [Norvig, 1997] предложена идея
замены сопровождения программных средств их управлением в процессе их разработки и
эксплуатации. Под управлением понимается решение задач сопровождения программного
средства с помощью специальных высокоуровневых механизмов управления, сводящих к
минимуму изменение его кода. В работе [Грибова и др., 2010] предложена архитектура систем
управления для одного из классов программных средств - интеллектуальных систем.
Традиционный подход к сопровождению программных средств в процессе их жизненного
цикла, при котором версия системы передается конечному пользователю, не предусматривает
управления этим программным средством, а сводится лишь к смене/обновлению его версий.
Вместе с тем активно развиваемая в настоящее время технология облачных вычислений (cloud
computing) [Концер, 2008], основная идея которой заключается в предоставлении услуг по
использованию программного средства вместо его версий, может быть применена для
управления программными средствами (и интеллектуальными системами в том числе, как
классом программных средств). Более того, только управление интеллектуальными системами
может поддерживать их в конкурентоспособном состоянии длительное время. Однако, вопервых, среды, предложенные в рамках технологии облачных вычислений, не учитывают
специфику интеллектуальных систем, в архитектуре которых, кроме решателя задач и
пользовательского интерфейса, выделяется дополнительный компонент – база знаний, а иногда
и другие информационные ресурсы; во-вторых, средства создания интеллектуальных систем и
управления ими, как правило, также являются интеллектуальными системами, содержащими
помимо баз знаний - базы данных, онтологии и метаонтологии, соответственно, их
использование также должно поддерживаться средой; в-третьих, в настоящее время технология
облачных вычислений не предлагает услуг по управлению программными средствами.
В связи с вышесказанным актуальной является разработка технологии, среды и программноинформационного комплекса на основе облачных вычислений, обеспечивающих доступ:
конечным пользователям к удаленному использованию интеллектуальных систем;
разработчикам и управляющим - к средствам создания интеллектуальных систем и управления
ими.
Целью настоящей работы является описание концепции и общей архитектуры Интернеткомплекса IACPaaS (Intelligence Application, Control and Platform as a Service),
поддерживающего единые технологические принципы разработки, использования прикладных
и инструментальных интеллектуальных систем и управления ими.
Подходы к обеспечению функционирования и сопровождения программных
систем. Обзор литературы
К настоящему времени сложились три взаимоисключающих подхода к управлению
программными средствами (далее программами).
Первый из них состоит в том, что пользователям передается версия программы и на них
возлагается управление ею в соответствии с теми возможностями, которые заложили в нее
разработчики. Как правило, это отдельные сервисные опции по настройке функциональности
программы и ее интерфейса. Смена версий программы производится, как правило, через
покупку новой версии программы в соответствии с маркетинговой политикой фирмыразработчика (например, различные игровые программы, словари, программы распознавания
текста и др.).
Второй тип управления программами, наиболее распространенный в настоящее время,
включает в себя возможности первого типа и, также, предполагает управление программой
разработчиками через смену версий посредством Интернет. В общем случае смена версий
подразумевает либо устранение ошибок предыдущей версии, либо расширение ее функций,
либо расширение базы данных, если программа ее использует (например, «Консультант Плюс»,
«Антивирус Касперского»).
Третий тип управления возможен, если пользователям открывается удаленный доступ (через
Интернет) к функциональности, который предоставляет программа. Таким образом, сама
программа находится на сервере разработчиков, и они могут осуществлять управление каждой
авторской версией программы, обеспечив необходимый мониторинг использования программы
и действий пользователей.
В настоящее время активно развивается технология, получившая название облачные
вычисления (Cloud Computing) [Облачные вычисления, 2010, Крупин, 2009]. Основная ее идея
– предоставить пользователю программные и компьютерные ресурсы как Интернет-сервисы,
Программное обеспечение как сервис
(Software as a Servece)
Платформа как сервис
(Platform as a Servece)
Инфраструктура как сервис
(Infrastructure as a Servece)
Центр обработки и хранения данных
(Data Center – Hardware, Servers, Networking)
расположив при этом все приложения и их данные, необходимые для работы, на удаленном
сервере в Интернете. Различные модели облачных вычислений представлены на Рисунке 1.
Software as a Service (SaaS) и Platform as a Service (PaaS) предоставляют программные
компоненты, остальные – аппаратное обеспечение, серверы, сети и пр. SaaS объединяет так
называемые законченные приложения, например, почтовые клиенты, текстовые и табличные
редакторы, редакторы презентаций, карты различного назначения, онлайновые платежные
системы, игры, виртуальные миры, поисковые системы, чаты и др. В отличие от SaaS,
предназначенного для конечного пользователя, PaaS предоставляет сервисы разработчикам
программного обеспечения.
Рисунок 1 - Модели облачных вычислений [Романов, 2010]
Типичными примерами сред, представленных на рынке и основанных на концепции
облачных вычислений являются: Amazon AWS, Microsoft Azure, Google App Engine, Stax,
10gen, Google Wave, Force.com и др. Эти среды предназначены для профессиональных
разработчиков программного обеспечения, поддерживают один или несколько языков
программирования и, в некоторых случаях, специализированную платформу для разработки.
Эти среды являются либо универсальными, либо ориентированы на какой-либо тип
приложений. Так, универсальная среда Google App Engine поддерживает языки
программирования Python и Java. Предлагаемая компанией среда исполнения включает полную
реализацию возможностей самого языка Python и большинство функций из стандартной
библиотеки языка. Универсальные среды Engineyard.com и Heroku.com. Engineyard, основанные
на Amazon EC2 и Amazon S3 поддерживают язык программирования Ruby, Azure Services
Platform предоставляет майкрософт-ориентированную инфраструктуру и инструменты
разработки: в ней изначально присутствует поддержка Windows .NET Framework и среды
разработки Visual Studio. Эта среда также поддерживает PHP, MySQL, Ruby, Python, Java,
Eclipse и Zend [SAAS, 2010].
Среда Force.com компании Salesforce.com ориентирована на разработку бизнес-приложений
и содержит специализированные средства для создания диаграмм, графиков, имеет простой в
использовании язык формул, похожий на работу с формулами в электронных таблицах
[Платформа Force.com, 2010].
Однако, ни одна из представленных на рынке сред, во-первых, не ориентирована на
интеллектуальные системы, т.е. не снабжена специализированной функциональностью для
поддержки разработки и сопровождения связанных с ними информационных ресурсов (баз
знаний, данных, онтологий и метаонтологий) и их использования; во-вторых, не имеет
специализированных средств управления интеллектуальными системами; в-третьих,
универсальность этих сред не обеспечивает целевую направленность в накоплении, развитии,
совершенствовании научных знаний на базе современных инфокоммуникационных
технологий.
Вместе с тем систематизация, совместное развитие, использование как непосредственно
знаний, так и систем, основанных на знаниях в науке, высокотехнологичном и инновационном
бизнесе и обучении студентов является важным фактором обеспечения научного прогресса как
в России, так и за рубежом.
Для систематизации, хранения и распространения научных продуктов новосибирскими
учеными разработан Веб-ресурс, основанный на концепции облачных вычислений
[Тарнавский, 2010] и предназначенный для следующих трех аспектов использования: как
электронная книга, как электронный справочник и как доступ к программным сервисам для
проведения компьютерного моделирования в научных исследованиях. Однако данный ресурс
не предлагает платформы для разработки Интернет-приложений для облачных вычислений, их
развития и управления ими.
Еще одним Веб-ресурсом, основанным на концепции облачных вычислений, является
Многоцелевой банк знаний, разработанный при участии авторов и являющийся прототипом
данного проекта [Клещев и др., 2006]. Он представляет собой совокупность
специализированных банков знаний, каждый из которых содержит информационные и
программные ресурсы, относящиеся к некоторой предметной области. Многоцелевой банк
знаний поддерживает единую среду для коллективного создания и развития информационных
ресурсов, а также доступ к этой информации интеллектуальным системам. Однако в нем
отсутствует единая среда для разработки программных компонентов (они разрабатываются
сторонними средствами), а запуск и выполнение интеллектуальных систем осуществляется по
технологии «толстого» клиента.
В связи с вышесказанным актуальным является разработка технологии и средств поддержки
облачных вычислений, ориентированных на создание и управление информационными
ресурсами различных уровней общности, интеллектуальными системами, инструментальными
средствами для их разработки и управления ими, использующими эти информационные
ресурсы.
Основные идеи проекта IACPaaS
Основными идеями, лежащими в основе проекта IACPaaS, являются следующие:
1. Обеспечение доступа через Интернет к функциональности интеллектуальных
систем без передачи пользователям их версий. Эта идея является одной из
основополагающих для технологии облачных вычислений - предоставление пользователям
сервисов (в данном случае интеллектуальных) вместо предоставления им непосредственно
версий программных систем для установки на их компьютерах. Преимущества данного
подхода широко обсуждаются в литературе [Калькуль, 2010, Табаков, 2010]; дополнительное
преимущество от использования данной технологии - возможность управления
интеллектуальными системами в процессе их жизненного цикла [Грибова и др., 2010], что
подразумевает изменение с помощью высокоуровневых механизмов функциональных свойств
интеллектуальных систем в соответствие с постоянно изменяющимися текущими
требованиями пользователей, условиями эксплуатации, знаниями предметной области.
2. Создание единой среды для функционирования интеллектуальных систем,
инструментальных средств для их разработки и управления ими. Многолетний опыт
авторов показал, что: во-первых, средства разработки интеллектуальных систем и управления
ими, как правило, также являются интеллектуальными системами; во-вторых, прикладные и
инструментальные интеллектуальные системы в ряде случаев используют одни и те же общие
информационные ресурсы, а значит, с точки зрения функционирования, между ними нет
различия. Поэтому прикладные и инструментальные интеллектуальные системы могут
функционировать в единой среде.
3. Поддержка контролируемого доступа к функциональным возможностям
программно-информационного комплекса и единой системы администрирования правами
на
использование
прикладных
и
инструментальных
систем.
Большинство
интеллектуальных систем предназначено для использования ограниченным кругом лиц
(например, системы медицинской диагностики – врачами, а не больными, интеллектуальные
системы в области химии – специалистами в области химии). Поэтому администраторы
программно-информационного комплекса должны иметь информацию о пользователях
интеллектуальных систем и целях использования ими этих систем. Разработка новых
интеллектуальных систем в рамках программно-информационного комплекса должна
соответствовать политике, поддерживаемой ее администраторами, что предполагает контроль
за использованием средств разработки. Очевидно, что такой контроль необходим и по
отношению к средствам управления интеллектуальными системами.
4. Поддержка идеологии накопления и развития как интеллектуальных и
инструментальных систем в целом, так и отдельных их компонентов. Контролируемый
доступ и единая система администрирования программно-информационным комплексом,
направлены на реализацию идеологии накопления и развития как непосредственно
«законченных» прикладных и инструментальных интеллектуальных систем, так и отдельных
их компонентов, на основе которых могут быть созданы новые прикладные и
инструментальные интеллектуальные системы. Такими «отдельными» компонентами, прежде
всего, являются информационные ресурсы различных уровней общности (базы знаний и
данных, онтологии и метаонтологии); агенты, являющиеся составными частями решателей
задач и выполняющие общие, не зависимые от конкретной системы вычисления над данными;
операции над информационными ресурсами, сохраняющие их целостность; шаблонные
компоненты пользовательского интерфейса, которые могут быть проблемно-зависимыми, или
не зависеть от специфики задачи, а определяться требованиями удобства использования
(юзабилити).
5. Постепенная замена средств разработки прикладных интеллектуальных систем
средствами управления ими. Основная идея, лежащая в основе управления программными
средствами, заключается в том, чтобы рассматривать их разработку как начало управления
ими, подобно тому, как сопровождение программных средств обычно рассматривается как
продолжение их разработки [Грибова и др., 2010, Norvig, 1997]. Таким образом, существующие
модели облачных вычислений дополняются еще одной - управление как сервис (Control as a
Service – CaaS).
6. Создание
условий
для
кооперативной
деятельности
пользователей
интеллектуальных
систем,
экспертов, специалистов
предметных
областей,
управляющих интеллектуальными системами, и программистов. Одним из важнейших
аспектов жизни людей являются попытки разрешения противоречия между индивидуальным и
коллективным. Такие попытки мы постоянно видим и в профессиональной деятельности. В
области вычислительной техники наиболее ярким примером является сосуществование
концепций персонального компьютера и глобальной сети Интернет. Облачные вычисления
являются еще одной попыткой разрешения этого противоречия, когда при коллективном
использовании ресурсов для каждого пользователя создается иллюзия его персонального
обслуживания. Дальнейшим развитием этой концепции является поддержка кооперативной
деятельности всех ее участников, которая может проявляться не только в создании повторно
используемых программных и информационных компонентов, но и управлении уже
находящимися в эксплуатации программными средствами на основе результатов мониторинга
процесса их использования.
Основные цели проекта IACPaaS и его концептуальная архитектура
Основными
целями
проекта
IACPaaS
является
предоставление
услуг
доступа:
специалистам различных предметных областей - к функциональности
интеллектуальных систем; разработчикам интеллектуальных систем - к средствам их
разработки (проблемно-ориентированным и проблемно-независимым); управляющим
интеллектуальными системами — к средствам управления ими.
Разработчиками и управляющими интеллектуальных систем могут выступать коллективы
для создания интеллектуальных систем в различных предметных областях и управления ими.
Основные архитектурные компоненты программного обеспечения проекта IACPaaS
приведены на Рисунке 2. Программно-информационный комплекс состоит из трех основных
подсистем - веб-сайта, виртуальной машины и фонда. Веб-сайт предназначен для всех
пользователей проекта. Через него они могут просматривать доступное им содержимое фонда;
подавать заявки на регистрацию, модификацию фонда, а также получать и реализовывать свои
полномочия. Фонд составляет содержимое, интеллектуальное наполнение проекта; для
удобства навигации он разделен на предметные области, а те, в свою очередь на разделы;
каждый раздел содержит относящиеся к нему единицы хранения: прикладные и
инструментальные средства (средства разработки и управления), агенты, информационные
ресурсы, исходные коды операций над информационными ресурсами (сохраняющими их
целостность), шаблонные компоненты интерфейса. Виртуальная машина представляет собой
набор процессоров для запуска и выполнения средств администрирования, а также для
реализации полномочий пользователей: запуска и выполнения интеллектуальных систем,
средств разработки и управления.
Веб-сайт
Виртуальная
машина
Фонд
Рисунок 2 - Концептуальная архитектура программного обеспечения проекта IACPaaS
Веб-сайт проекта IACPaaS
Веб-сайт проекта логически состоит из непосредственно веб-сайта проекта и
административной системы, которая является его функциональной подсистемой, но
проектируется в виде совокупности средств администрирования и информационных ресурсов,
хранящихся в фонде. Через веб-сайт все гости и пользователи могут просмотреть общую
информацию о проекте и новости, информацию о типах пользователей проекта, просмотреть
доступное содержимое фонда, задать вопрос администратору проекта или администратору
предметной области, а также запустить функции административной системы.
Административная система осуществляет управление ресурсами фонда посредством заявок
на модификацию фонда, обработку заявок на получение полномочий для зарегистрированных
пользователей, а также регистрацию гостей в качестве пользователей.
Существует три основных типа пользователей проекта IACPaaS (см. Рис. 3):
гость через веб-браузер может просматривать доступное ему содержимое фонда предметные области, их разделы и описания связанных с ними единиц хранения, а также может
подать заявку на регистрацию в одной из предметных областей через соответствующее
средство администрирования;
Пользователь
с полномочиями
Зарегистрированный
пользователь
Гость
Функция 
       подачи заявок 
                   на получение 
                              полномочий 
Функция
подачи заявок
на регистрацию
пользователей
Веббраузер
Веб-сайт
Предметная
область 1
Раздел 1
Описание
единицы
хранения 1
...
...
Предметная
область N
...
Список
     полномочий
              пользователя
Функция Функция
       подачи заявок реализации
                   на модифи- полномочия
                           кацию фонда 
Раздел M
Описание
единицы
хранения L
Доступное
содержимое
фонда
Вебсервер
Рисунок 3 - Типы пользователей проекта IACPaaS и их фунциональные возможности
Пользователь
прикладных
средств
Веббраузер
Разработчик и
сопровождающий кода
программных
компонентов
Управляющий
агентом
Веб-сайт
Веб-сервер
Функции
решения
прикладных
задач с
помощью
прикладных
средств
Функции
разработки,
отладки и
сопровождения
кода
Функции
формирования
структуры
агента и
управления
ею
Управляющий
информационным
ресурсом
Функции
формирования метаинформации
и информации информационного
ресурса и
управления
ею
Управляющий
шаблонным
компонентом
интерфейса
Функции
формирования и
управления
шаблонной
компонентой
интерфейса
Коллектив
управляющих Администратор
прикладным
предметной
или инстуменобласти
тальным ср-вом
Функции
формирования и
управления
прикладным
или
инстументальным
средством
Функции
администрирования
предметной
области
Администратор
проекта
IACPaaS
Функции
администрирования
проекта
IACPaaS
Рисунок 4 - Классы пользователей с полномочиями проекта IACPaaS
зарегистрированный пользователь обладает правами гостя на просмотр содержимого
фонда, на регистрацию в других предметных областях, а также может подать через
административную систему заявку на получение полномочий в тех предметных областях, в
которых он уже зарегистрирован, или заявку на модификацию фонда;
пользователь с полномочиями обладает всеми правами зарегистрированного
пользователя, а также может реализовывать полномочия из своего списка полномочий. Его
полномочия могут относиться к следующим возможным классам (см. Рисунок 4): пользователь
интеллектуальной системы, разработчик и сопровождающий кода программных компонентов,
управляющий декларативной компонентой агента, информационными ресурсами, шаблонными
компонентами интерфейса, коллектив управляющих прикладным или инструментальным
средством, администратор проекта IACPaaS и администратор предметной области.
Фонд программно-информационного комплекса проекта IACPaaS
Основными функциями фонда программно-информационного комплекса является
аккумулирование в едином информационном пространстве различных единиц хранения программных и информационных ресурсов различных типов, а также поддержка их
коллективного развития в различных предметных областях для решения задач в практической,
научной и образовательной деятельности. Единицы хранения фонда можно классифицировать
по нескольким основным типам.
По принадлежности к классу ресурса. Все единицы хранения фонда можно разделить
на два класса – информационные и программные ресурсы. Информационными ресурсами фонда
являются базы данных, базы знаний, онтологии, метаонтологии и т.п.; они могут иметь
различные уровни общности и представляются в фонде в виде семантических сетей.
Программными
ресурсами
являются
прикладные
интеллектуальные
системы,
инструментальные системы – средства разработки и управления интеллектуальных систем, а
также отдельные программные компоненты, которые используются для разработки
прикладных интеллектуальных систем – агенты, операции над информационными ресурсами и
шаблонные компоненты пользовательского интерфейса. Каждый программный ресурс, в свою
очередь, состоит из информационных и программных компонентов [Грибова и др., 2010],
причем информационные компоненты программных ресурсов являются информационными
ресурсами и хранятся в фонде как самостоятельные единицы хранения.
По принадлежности к предметной области. Ресурсы фонда могут быть проблемнозависимыми и проблемно-независимыми. Это относится как к информационным, так и
программным ресурсам. Проблемно-зависимыми являются прикладные интеллектуальные
системы, онтологии и метаонтологии предметных областей, базы знаний и данных. Проблемнонезависимыми являются инструментальные системы, предназначенные для создания
интеллектуальных систем в различных предметных областях и управления ими, а также
проблемно-независимые информационные ресурсы, например, онтологии пользовательского
интерфейса.
По текущему режиму единиц хранения. Все единицы хранения могут находиться в
одном из двух режимов – рабочем и отладочном. Решение о переносе единицы хранения из
отладочного режима в рабочий принимается администратором предметной области и
администратором проекта после прохождения всех установленных процедур отладки и
тестирования.
Приведенная классификация не является исчерпывающей, а отражает лишь основные
характеристики единиц хранения фонда.
Виртуальная машина проекта IACPaaS
Виртуальная машина проекта IACPaaS состоит из процессора информационных ресурсов,
процессора решателей задач и процессора пользовательских интерфейсов, каждый из которых
представляет собой набор функций для поддержки соответствующих компонентов
интеллектуальных систем (Рис. 5).
Процессор информационных ресурсов представляет собой набор функций обработки
информационных ресурсов, доступный разработчикам и сопровождающим программных
компонентов, хранимых в фонде. Процессор решателей задач обеспечивает запуск полномочий
пользователей и средств администрирования, их завершение, приостановку и возобновление
выполнения, осуществляет выполнение кода решателей задач, взаимодействие между его
компонентами, реализованными как совокупность агентов. Процессор пользовательского
интерфейса обеспечивает диалог с пользователем при выполнении прикладных и
инструментальных средств на основе информации из его модели и информации, полученной от
решателя задач.
Интеллектуальная система
Информационный Решатель Пользовательский
              ресурс задач интерфейс
Процессор Процессор Процессор
         информационных решателей пользовательского
                       ресурсов задач интерфейса
Виртуальная машина
Рисунок 5 - Связь процессоров виртуальной машины с компонентами интеллектуальной
системы
Обсуждение
К настоящему времени разработана прототипная версия программно-информационного
комплекса проекта IACPaaS с ограниченным набором функций, продолжается разработка его
полнофункциональной версии.
Программно-информационный
комплекс,
специально
ориентированный
на
интеллектуальные системы, необходим для решения следующих задач и проблем, стоящих как
перед разработчиками интеллектуальных систем, так и перед их пользователями.
Прежде всего, программно-информационный комплекс предназначен для решения
проблемы накопления и коллективного развития как информационных, так и программных
компонентов интеллектуальных систем. При этом информационные компоненты
рассматриваются как отдельные, имеющие самостоятельную ценность ресурсы, накопление и
развитие которых должно происходить независимо от интеллектуальных систем, их
использующих. Административный контроль и разграниченный доступ к ресурсам
программно-информационного комплекса необходим для защиты их от несанкционированного
доступа и обеспечения контроля за их целостностью и содержанием.
Предоставление доступа к интеллектуальным системам как к сервисам (пользователи имеют
доступ только к функциональности системы; сама система находится на сервере
разработчиков),
позволяет
последовательно
развивать
концепцию
управления
интеллектуальными системами, что, в конечном итоге должно значительно продлить
жизненный цикл интеллектуальной системы, обеспечить предоставление сервиса пользователю
в соответствии с его потребностями, тем самым решить проблему практического
использования интеллектуальных систем. Это, ожидается, станет возможным за счет
управления всеми компонентами интеллектуальной системы и оперативной их модификации
(будет осуществляться мониторинг всех компонентов интеллектуальной системы), а также за
счет контролируемого развития программных и информационных ресурсов.
Единая среда для создания и использования интеллектуальных систем позволит применить
все указанные выше преимущества не только к прикладным интеллектуальным системам, но и
к средствам их разработки, что является очень значимым критерием развития искусственного
интеллекта в целом.
Благодарности
Работа выполнена при финансовой поддержке РФФИ, проект "Интеллектуальные
многоагентные системы для управления распределенной обработкой онтологий, знаний и
данных” (10-07-00090-а), и ДВО РАН по Программе No15 ОЭММПУ, проект "Модели
мультиагентных систем для управления распределенной обработкой информации" (09-IОЭМПУ-02).
Библиографический список
[Грибова и др., 2010] Грибова, В.В., Клещев, А.С., Шалфеева, Е.А. Системы управления
интеллектуальными интернет-приложениями. - Владивосток: ИАПУ ДВО РАН, 2010. 31 с.
[Калькуль, 2009] Калькуль, М. Ясное небо до самого горизонта: «облачные» вычисления и безопасность
«из облака». - 2009. Режим доступа: - http://www.securelist.com/ru/analysis/204007652/Yasnoe_nebo_
do_samogo_gorizonta_oblachnye_vychisleniya_i_bezopasnost_iz_oblaka
[Клещев и др., 2006] Клещев, А.С., Орлов, В.А. Компьютерные банки знаний. Многоцелевой банк
знаний // Информационные технологии. - 2006. - No 2. - С. 2-8.
[Концер, 2008] Концер, Т. «Облачные» вычисления: всѐ как сервис // PC Week/RE. - No32 (638). - 2008. http://www.pcweek.ru/themes/detail.php?ID=112879
[Крупин, 2009] Крупин, А. Cloud Computing: высокая облачность // Компьютер Online. – 2009. Режим
доступа: http://www.computerra.ru/interactive/461761/
[Облачные вычисления, 2010] Облачные вычисления – Википедия. – 2010. Режим доступа:
http://ru.wikipedia.org/wiki/Облачные_вычисления
[Платформа Force.com, 2010] Платформа Force.com от CT Consulting с уникальной системой облачных
вычислений. 2010. Режим доступа: http://www.ctconsult.ru/products/force-platform/
[Романов, 2010] Романов, М. Основные компоненты cloud computing. Режим доступа:
http://blogs.msdn.com/jmeier/archive/2010/02/11/software-as-a-service-saas-platform-as-a-service-paas-andinfrastructure-as-a-service-iaas.aspx
[Табаков, 2010] Табаков, В.В. Облачные вычисления – технологическая инновация // Сборник
материалов Второй международной научно-практической конференции "Проблемы развития
инновационно-креативной
экономики".
2010.
Режим
доступа:
http://econference.ru/blog/conf06/227.html
[Тарнавский, 2010] Тарнавский, Г.А. Облачные вычисления: контент, инфраструктура и технологии
организации информационных потоков Центра компьютерного моделирования SciShop.ru //
Электронный научный журнал «Исследовано в России». - 2010. - Т.13. - С. 1-29. Режим доступа:http://zhurnal.ape.relarn.ru/articles/2010/001.pdf
[Norvig, 1997] Norvig, P., Cohn, D. Adaptive software // http://norvig.com/adapaper-pcai.html
[SAAS, 2010] SAAS платформы – обзор на LiveBusiness. - 2010. Режим доступа:
http://www.livebusiness.ru/tags/SAAS_platformy

оступа:
http://www.livebusiness.ru/tags/SAAS_platformy

