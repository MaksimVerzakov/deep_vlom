ВЫСШЕЕ ПРОФЕССИОНАЛЬНОЕ ОБРАЗОВанИЕ
Р. Л. Смелянский
компьютерные
сети
Учебник
В двух томах
ТОМ 2
Сети эвм
Допущено
Учебно-методическим объединением
по классическому университетскому образованию
в качестве учебника для студентов высших учебных заведений,
обучающихся по направлениям 010400 «Прикладная математика и информатика»
и 010300 «Фундаментальная информатика и информационные технологии»
УДК	004.7(075.8)
ББК	 32.973.202я73
	
С501
Р е ц е н з е н т ы:
зав. кафедрой вычислительной техники МЭИ (ТУ), д-р техн. наук, проф.
В. В. Топорков; декан факультета вычислительной математики	
и кибернетики Казанского госуниверситета, зав. кафедрой системного анализа и
информационных технологий, проф. Р. Х. Латыпов;	
зав. кафедрой теоретической информатики Ярославского государственного универ-
ситета им. П. Г. Демидова, д-р физ.-мат. наук, проф. В. А. Соколов
Смелянский Р. Л.
С501	 	 Компьютерные сети : учебник для студ. высш. учеб. заве-
дений  : в 2 т. Т. 2. Сети ЭВМ / Р. Л. Смелянский. — М. : Изда­
тельский центр «Академия», 2011. — 240 с.
ISBN 978-5-7695-7153-4
Рассмотрены эталонная модель взаимодействия открытых систем и мо-
дель ТСР/IP, протоколы IPv4 и IPv6, адресация в Интернете, протоколы АRP
и RARP, алгоритмы маршрутизации, протоколы RIP, RIPv2, OSPF, BGP,
маршрутизация в сетях МРLS, оптимизация и функционирование транспорт-
ного уровня, протоколы ТСР и UDP, основные вопросы безопасности ин-
формации в сетях ЭВМ, а также такие приложения, как DNS, SNMP, элек-
тронная почта, протокол FTP, организация и основные протоколы World Wide
Web, понятия web-сервиса и основные компоненты архитектуры SOA.
Для студентов учреждений высшего профессионального образования.
УДК 004.7(075.8)	
ББК 32.973.202я73
Оригинал-макет данного издания является собственностью Издательского
центра «Академия», и его воспроизведение любым способом без согласия
правообладателя запрещается
ISBN 978-5-7695-7153-4 (Т. 2)
ISBN 978-5-7695-7152-7
© Смелянский Р. Л., 2011
© Образовательно-издательский центр «Академия», 2011
© Оформление. Издательский центр «Академия», 2011
Оглавление
Предисловие.............................................3
Глава 1. Модель и примеры сетей
ЭВМ ..................................6
1.1. Модель сети ЭВМ..............................6
1.1.1. Общие сведения..............................6
1.1.2. Эталонная модель OSI....................7
1.1.3. Модель TCP/IP. ............................14
.
1.1.4. Выбор модели................................16
1.2. Стандартизация в сети Интернет......18
1.3. Примеры сетей ЭВМ.......................20
1.3.1. ARPANET......................................20
1.3.2. Хронология развития сети
Интернет.......................................22
1.3.3. Другие примеры сетей ЭВМ........23
1.4. Требования, предъявляемые к сов-
ременным компьютерным сетям.....24
Глава 2. Сетевой уровень...............27
2.1. Проблемы построения сетевого
уровня.............................................27
2.1.1. Общие сведения............................27
2.1.2. Ориентация на соединение..........27
2.1.3. Внутренняя организация сетевого
уровня. ..........................................28
.
2.1.4. Сравнение транспортных сред с
виртуальными каналами
и с дейтаграммами........................29
2.2. Алгоритмы маршрутизации............30
2.2.1. Общие сведения............................30
2.2.2. Свойство оптимального пути......32
2.2.3. Маршрутизация по
наикратчайшему пути..................33
2.2.4. Маршрутизация лавиной.............35
2.2.5. Маршрутизация на основе
потока............................................36
2.2.6. Маршрутизация по вектору
расстояния....................................38
2.2.7. Маршрутизация по состоянию
канала............................................ 41
2.2.8. Иерархическая маршрутизация.....46
2.2.9. Маршрутизация для мобильного
узла................................................48
2.2.10. Маршрутизация при вещании...50
2.2.11. Маршрутизация при групповой
передаче....................................... 51
2.3. Алгоритмы управления
перегрузками..................................52
2.3.1. Общие сведения............................52
2.3.2. Основные принципы управления
перегрузками. ...............................54
.
2.3.3. Методы, предотвращающие
перегрузки.....................................55
2.3.4. Формирование трафика...............56
2.3.5. Спецификация потока.................60
2.3.6. Управление перегрузками в сетях
с виртуальными каналами. .......... 61
.
2.3.7. Подавляющие пакеты...................62
2.3.8. Сброс нагрузки.............................63
2.3.9. Управление перегрузками при
групповой передаче......................65
2.4. Межсетевое взаимодействие. .........67
.
2.4.1. Общие сведения............................67
2.4.2. Чем различаются сети..................68
2.4.3. Сопряжение виртуальных
каналов..........................................69
2.4.4. Межсетевое взаимодействие
без соединений.............................69
2.4.5. Туннелирование. ..........................70
.
2.4.6. Межсетевая маршрутизация........ 71
2.4.7. Фрагментация............................... 71
2.5. Сетевой уровень в Интернете. .......73
.
2.5.1. Общие сведения............................73
2.5.2. IP-протокол..................................74
2.5.3. IP-адресация.................................76
2.5.4. Подсети.........................................77
2.5.5. Протоколы управления
межсетевым взаимодействием.....78
2.5.6. Внутренний протокол маршрути-
зации шлюзов — OSPF...............82
2.5.7. Протокол пограничных шлюзов
BGP...............................................86
2.5.8. Групповая адресация
в Интернете. .................................88
.
2.5.9. Бесклассовая маршрутизация
внутри домена...............................89
2.5.10. Протокол IPv6.............................90
2.6. Введение в архитектуру MPLS.......97
2.6.1. Общие сведения............................97
2.6.2. Принцип коммутации..................98
2.6.3. Элементы архитектуры.............. 101
2.6.4. Построение коммутируемого
маршрута..................................... 103
Глава 3. Транспортный уровень.. 105
3.1. Сервис............................................ 105
3.1.1. Сервис для верхних уровней...... 105
3.1.2. Качество сервиса........................106
3.1.3. Примитивы транспортного
уровня. ........................................ 107
.
3.2. Элементы транспортного
протокола...................................... 110
239
3.2.1. Общие сведения.......................... 110
3.2.2. Адресация................................... 110
3.2.3. Установление соединения.......... 112
3.2.4. Разрыв соединения..................... 115
3.2.5. Управление потоком
и буферизация.............................117
3.2.6. Мультиплексирование............... 120
3.2.7. Восстановление после
сбоев............................................ 120
3.3. Транспортные протоколы
в Интернете.................................. 121
3.3.1. Общие сведения.......................... 121
3.3.2. Модель сервиса TCP.................. 122
3.3.3. Протокол TCP............................ 123
3.3.4. Заголовок сегмента в TCP......... 124
3.3.5. Управление соединениями
в TCP........................................... 125
3.3.6. Стратегия передачи в TCP......... 129
3.3.7. Управление перегрузками
в TCP........................................... 130
3.3.8. Управление таймером в TCP..... 132
3.3.9. Протокол UDP........................... 134
3.3.10. TCP и UDP в беспроводных
коммуникациях. ......................... 135
.
3.4. Вопросы производительности
сети................................................ 136
3.4.1. Проблемы производительности
в сетях.......................................... 136
3.4.2. Измерение производительности
в сети........................................... 137
3.4.3. Правила, улучшающие
производительность................... 139
3.4.4. Быстрая обработка TPDU-сег-
ментов......................................... 141
3.4.5. Протоколы для гигабитных
сетей............................................ 143
Глава 4. Уровень приложений...... 147
4.1. Сетевая безопасность.................... 147
4.1.1. Общие сведения.......................... 147
4.1.2. Обычное шифрование ............... 149
4.1.3. Алгоритмы с секретными
ключами...................................... 153
4.1.4. Алгоритмы с открытыми
ключами ..................................... 158
4.1.5. Протоколы установления
подлинности .............................. 160
4.1.6. Электронная цифровая
подпись....................................... 168
4.1.7. Межсетевые экраны.................... 171
4.1.8. Системы обнаруженияи
предотвращения атак................. 176
4.1.9. Виртуальные частные сети......... 180
4.2. Примеры протоколов уровня
приложений.................................. 184
4.2.1. Доменная система имен —
DNS............................................. 184
4.2.2. Протокол управления
сетью — SNMP........................... 193
4.2.3. Электронная почта..................... 199
4.2.4. Протокол передачи файлов —
FTP.............................................. 212
4.2.5. Всемирная паутина. ................... 216
.
Список литературы..............................234
Учебное издание
Смелянский Руслан Леонидович
компьютерные сети
Том 2
Сети ЭВМ
Учебник
Редактор В. Н. Махова. Технический редактор Е. Ф. Коржуева
Компьютерная верстка: Л. А. Смирнова. Корректоры Н.Л.Котелина,
Т. В. Кузьмина
Изд. No 101115442. Подписано в печать 27.10.2010. Формат 60×90/16.
Гарнитура «Ньютон». Бумага офсетная. Печать офсетная. Усл. печ. л. 15,0.
Тираж 2 000 экз. Заказ No
Издательский центр «Академия». www.academia-moscow.ru
125252, Москва, ул. Зорге, д. 15, корп. 1, пом. 26б.
Адрес для корреспонденции: 129085, Москва, пр-т Мира, 101В, стр. 1, а/я 48.
Тел./факс: (495) 648-0507, 616-0029.
Санитарно-эпидемиологическое заключение No 77.99.60.953.Д.007831.07.09 от 06.07.2009.
Отпечатано с электронных носителей, предоставленных издательством,
в ОАО «Саратовский полиграфкомбинат». www.sarpk.ru
410004, г. Саратов, ул. Чернышевского, 59.
Предисловие
Данный учебник написан на основе материалов лекций по курсу
«Компьютерные сети», который читается на факультете «Вычисли-
тельная математика и кибернетика» (ВМиК) Московского государ-
ственного университета им. М. В. Ломоносова.
Учебник, прежде всего, предназначен для подготовки специали-
стов и бакалавров по направлениям «Прикладная математика и ин-
форматика» и «Фундаментальная информатика и информационные
технологии», а также он может быть использован для подготовки
специалистов и бакалавров по направлению «Информатика и вы-
числительная техника».
Основной целью курса «Компьютерные сети» т. 2 «Сети ЭВМ»
является приобретение студентами знаний и навыков в следующих
областях:
•• теоретические основы архитектурной и системотехнической ор-
ганизации вычислительных сетей, построение сетевых протоколов;
•• основы Интернет-технологий;
•• методы и средства обеспечения информационной безопасности
компьютерных сетей;
•• конфигурирование локальных сетей, реализация сетевых про-
токолов с помощью программных средств.
В учебнике не рассматриваются сетевые операционные системы,
поскольку, во-первых, сегодня само понятие сетевой операционной
системы выглядит странно, так как любая современная операционная
система предполагает наличие функциональности для поддержки
сетевого взаимодействия, во-вторых, на эту тему уже достаточно
много издано, а в-третьих, на факультете ВМиК курсу «Компьютер-
ные сети» предшествуют курсы «Операционные системы», «Базы
данных» и »Программирование на языке Java».
На факультете ВМиК МГУ при изучении курса «Компьютерные сети»
используется практикум, включающий в себя пять лабораторных зада-
ний. Организация изучения курса на факультете ВМиК также предусма-
тривает систему промежуточного контроля знаний студентов.
Для этой цели было разработано около 1 200 контрольных вопро-
сов и задач. (Автор готов поделиться презентационными материала-
ми, а также материалами для практических упражнений и промежу-
точного контроля с желающими, для чего достаточно обратиться по
адресу smel@CS. MSU. SU.)
3
По окончании изучения второй части рассматриваемого курса
студенты должны иметь представление о современных системах
международной и отечественной стандартизации, стандартах по-
строения компьютерных сетей, направлениях развития сетей должны
знать:
•• эталонную модель взаимодействия открытых систем, основы
сетевых стеков OSI и TCP/IP, схему организации и основные прин-
ципы функционирования современных сетей, методы и алгоритмы
работы сетевых протоколов для локальных, городских и региональ-
ных сетей;
•• принципы организации и функционирования сетевого уровня,
протоколы IPv4 и IPv6, адресацию в Интернете, алгоритмы ARP и
RARP маршрутизации RIP, RIPv2, OSPF, иерархическую маршру-
тизацию и протокол BGP, маршрутизацию в сетях MPLS;
•• методы оптимизации функционирования транспортного уровня
и настройки протоколов TCP и UDP;
•• основные вопросы безопасности информации в сетях ЭВМ и
методы их решения (включая алгоритмы и методы шифрования дан-
ных в сетях), вопросы аутентификации в сетях (включая организа-
цию электронно-цифровой подписи), системы обнаружения атак,
технологию VPN;
•• основы функционирования прикладных протоколов в Интер-
нете (таких как DNS, SNMP), организацию и основные протоколы
функционирования электронной почты, протокол FTP, организацию
и основные протоколы функционирования World Wide Web, поня-
тия web-сервиса и основные компоненты архитектуры SOA .
Изучение данного курса предполагает наличие определенного
объема знаний, т. е. студент должен знать архитектуру современных
вычислительных систем, организацию и функционирование опера-
ционной системы Unix и ее файловой системы, организацию и функ-
ционирование систем управления базами данных, элементы теории
массового обслуживания (теории очередей), основы дискретной ма-
тематики в части теории графов и сетей, а также основы теории ав-
томатов.
Также студент должен иметь практический опыт программирова-
ния (желательно знать язык Java) и уметь строить математические
модели с использованием указанных ранее разделов математики.
Несколько слов необходимо сказать об истории создания данного
курса. В мае 1995 г. перед автором была поставлена задача создать за
лето курс по компьютерным сетям. Ясно, что за такой срок написать
курс невозможно, поэтому я посвятил эти два месяца изучению со-
ответствующей литературы, которую в то время можно было найти
на книжных полках. Надо сказать, что выбор был не так уж и велик.
Воспользовавшись командировкой в США, я провел несколько дней
в книжных магазинах Сан-Франциско, выбирая учебник, который
можно было бы взять за основу курса. Просмотрев немало книг, я
4
остановил свой выбор на книге Тененбаума (Tanenbaum A. S. Com-
puter Networks, 2-nd edition, Prentice Hall, 1988) по следующим сооб-
ражениям:
•• широта охвата материала;
•• сбалансированность глубины и общности подачи материала;
•• наличие ясной и доступной логики изложения;
•• обилие ссылок на первоисточники;
•• хороший язык изложения;
•• возможность получения электронных версий рисунков, что было
немаловажно при подготовке презентаций для лекций.
Однако темпы развития сетевых технологий и глубины их про-
никновения в общество столь велики, что материал курса постоянно
приходилось дополнять, включать в него новые технологии, новые
сетевые средства, протоколы. Каждый год курс дополнялся и изме-
нялся. Изменялась при этом и организация изучаемого материала.
Так, например, к концу 1990-х гг. стало ясно, что системы передачи
данных представляют собой самостоятельную часть сетей, предна-
значенную для формирования канала для сетевого уровня. При этом
в них и возникает задача маршрутизации, но уровень ее сложности
существенно ниже, чем на сетевом уровне. Используемые в этих
системах решения ближе к вопросам телефонии и коммутации, чем
к сложным алгоритмам маршрутизации с многокритериальной опти-
мизацией, которые используются на сетевом уровне, и к сложным
алгоритмам управления транспортными соединениями на транспорт-
ном уровне. Совершенствуя курс, автор также постарался учесть
тенденцию разделения процессов построения и оптимизации марш-
рута и коммутации потоков данных на сетевом уровне, нашедшую
отражение в концепции MPLS-сетей. Эта тенденция вызвана все
возрастающими размерами компьютерной сети и ростом вычисли-
тельных затрат на процессы маршрутизации.
Наконец, осталось самое приятное — поблагодарить всех тех, кто
помогал автору, критиковал материал, способствуя улучшению курса.
Прежде всего, хотелось бы поблагодарить студентов третьего потока
факультета ВМиК, которые слушали курс в 1995 — 2008 гг. и своими
замечаниями, критикой способствовали его улучшению. Автор также
очень признателен Д. Гамаюнову, помогавшему работать с рукописью
и предоставившему часть материалов по вопросам сетевой безопас-
ности, А. Петухову, предоставившему материалы по Web-тех­ ологиям,
н
Д. Козлову и М. Забежайло — за обсуждение и конструктив­ ые пред-
н
ложения отдельных частей курса, Н. Трусову и Е. Капинус —
за работу по подготовке рукописи. Особенно хотел бы отметить до-
брожелательность Ю. В. Коровина, без поддержки которого эта
книга вряд ли появилась бы.
Москва
август 2010	
Р. Л. Смелянский
Гл а в а 1
Модель и примеры сетей ЭВМ
1.1. Модель сети ЭВМ
1.1.1. Общие сведения
Организация сети ЭВМ (см. т. 1 данного учебника) представляет
собой совокупность системы передачи данных (СПД), транспортной
среды и абонентских машин (рис. 1.1). Напомним, что А-машины —
это абонентские машины, на которых работают сетевые приложения,
а R-машины — это маршрутизаторы, отвечающие за доставку сообще-
ний между А-машинами. Система передачи данных и R-машины
образуют транспортную среду (ТС) сети ЭВМ. Шлюзы G — это
устройства, обеспечивающие сопряжение двух разных транспортных
сред, а В — устройство, обеспечивающее сопряжение разных СПД.
Рис. 1.1. Организация компьютерной сети
6
Система передачи данных — это совокупность каналов передачи
данных и коммутирующих элементов.
В т. 1 данного учебника в качестве модели СПД были выбраны
первые три уровня модели OSI с определенными оговоркам по функ-
циям сетевого уровня, связанными с особенностями маршрутизации
в СПД. В частности, обращалось внимание на то, что сетевой уровень
в СПД сугубо внутренний. Сетевые уровни А-машин и R-машин с
сетевым уровнем в СПД не взаимодействуют.
Теперь мы рассмотрим ряд существующих моделей и на их основе
построим модель функционирования современной сети ЭВМ.
1.1.2. Эталонная модель OSI
Напомним, что модель взаимодействия открытых систем — OSI
(Open Systems Interconnection), представленная на рис. 1.2, была
разработана для определения международных стандартов компью­
терных сетей. Эта модель описывает, как должна быть организована
Рис. 1.2. Модель взаимодействия открытых систем
7
система, открытая для взаимодействия с другими системами. Модель
OSI имеет уровневую организацию, т. е. она включает в себя семь
уровней: физический, канальный, сетевой, транспортный, сессии,
представления и прикладной. Функции физического уровня и уровня
канала данных подробно рассмотрены в т. 1 данного учебника, так же,
как и функции сетевого уровня, применительно к системам СПД.
Ключевыми в этой модели являются понятия сервиса, интерфей-
са и протокола. Под сервисом понимают услуги, которые нижерас­
положенный уровень оказывает по запросам вышерасположенного.
В этой модели нижерасположенный уровень свои услуги может предо­
ставлять только вышерасположенному уровню. Интерфейс опреде-
ляет формирование и передачу запроса на услугу.
Активные элементы уровня, т. е. элементы, которые могут сами
совершать действия, в отличие от элементов, над которыми совер-
шают действия, называются активностями. Активности могут быть
программными и аппаратными. Активности одного и того же уровня
на разных машинах называются равнозначными, или одноименными.
Активности уровня n + 1 являются пользователями сервиса, созда-
ваемого активностями уровня n, которые, в свою очередь, называют-
ся поставщиками сервиса. Сервис может быть разного качества.
Например, с установлением соединения и без установления соеди-
нения, с подтверждением получения переданных данных и без под-
тверждения. Правила и соглашения по установлению соединения,
его поддержанию и обмену данными по нему между активностями,
расположенными на одинаковом уровне на разных машинах, назы-
вается протоколом.
Доступ к сервису в модели OSI осуществляется через так назы-
ваемые точки доступа к сервису — SAP (Service Access Points),
каждая из которых имеет уникальный адрес. Например, телефонная
розетка на стене — это точка доступа к сервису автоматической теле-
фонной станции (АТС). Каждой такой розетке сопоставлен опреде-
ленный номер — номер телефона.
Взаимодействие между двумя соседними уровнями в этой модели
можно описать следующим образом: активность на уровне n + 1 пере-
дает интерфейсную единицу данных — IDU (Interface Data Unit)
активности на уровне n через SAP (рис. 1.3). IDU состоит из сервис-
ной единицы данных — SDU (Service Data Unit) — и управляющей
информации. SDU передается далее по сети равнозначной сущности,
а затем — на уровень n + 1. Управляющая информация необходима
нижерасположенному уровню, чтобы правильно передать SDU, но
она не является частью передаваемых данных.
Чтобы передать SDU по сети нижерасположенному уровню, может
потребоваться разбить ее на части (рис. 1.4). При этом каждая часть
снабжается заголовком и концевиком и передается как самостоятель-
ная единица данных протокола — PDU (Protocol Data Unit ). Заголо-
вок в PDU используется протоколом при передаче. В нем указывает-
8
Рис. 1.3. Взаимосвязь уровней Сети через интерфейс:
SAP — точка доступа к сервису; IDU — интерфейсная единица данных; SDU — сер-
висная единица данных; PDU — единица данных протокола; ICI — контрольная ин-
формация интерфейса
ся, какой PDU содержит управляющую информацию, а какой — дан-
ные, порядковый номер PDU и т. д.
Формально сервис можно описать в терминах примитивных опе-
раций, или примитивов, с помощью которых пользователь или
какая-либо активность получает доступ к сервису. С помощью этих
примитивов активность вышерасположенного уровня сообщает ак-
тивности нижерасположенного уровня, что необходимо сделать,
чтобы вышерасположенная активность получила необходимую услу-
гу (сервис). В свою очередь, нижерасположенная активность может
использовать эти примитивы, чтобы сообщить вышерасположенной
активности о выполненном действии.
Рис. 1.4. Пример организации потока информации при виртуальном вза­
имодействии на 5-м уровне Сети:
М — сообщения; Нi — заголовок i-го уровня; Тi — концевик i-го уровня
9
Т а б л и ц а 1.1
Классы примитивов сервиса
Класс примитивов
Значение
Request (Запрос) Запрос определенных действий
Indication (Индикация) Информирование о каком-либо событии
Response (Ответ) Ответ на полученный ранее запрос
Confirm (Подтверждение) Подтверждение ответа на сделанный ранее
                                                                       запрос
Примитивы можно подразделить на четыре класса, показанные в
табл. 1.1. Эти классы подробно рассмотрены в подразд. 2.3.4. т. 1
данного учебника.
Сетевой уровень
Основная проблема, решаемая на сетевом уровне, — это выбор
оптимального маршрута для пакета от отправителя к получателю. Для
решения этой проблемы требуется решить две задачи: вычислить
оптимальный маршрут и реализовать этот маршрут, т. е. обеспечить
следование пакета именно по рассчитанному маршруту. При этом
маршрут может быть определен заранее и прописан в таблице в каж-
дом узле коммутации, которая не изменяется. Маршрут может быть
определен в момент установления соединения, и тогда все пакеты,
направляемые по данному соединению, будут следовать этим марш-
рутом. Наконец, маршрут может строиться динамически по ходу
передачи в зависимости от загрузки сети и ее текущей конфигурации.
Критерии для определения оптимальности маршрута могут быть
разными в зависимости от конкретной ситуации.
По понятным причинам в сети ЭВМ не может быть единого цен-
тра расчета маршрута, поэтому может оказаться, что в транспортной
среде циркулирует слишком много пакетов, использующих одни и те
же маршруты либо их фрагменты, что будет приводить к перегрузкам
каналов СПД, а следовательно, и к потере пакетов. Эта проблема
также решается на сетевом уровне. Причем эту проблему, называемую
перегрузкой в сети, не следует путать с проблемой управления по-
током, заключающейся в том, чтобы отправитель не «заваливал»
пакетами получателя. Различие и методы решения этих проблем под-
робно рассмотрим далее.
Как уже говорилось, некоторые виды сетевого сервиса предпо-
лагают, что каждый пакет движется по своему отдельному маршруту.
Это означает, что достигать сетевого уровня получателя они будут в
разное время. При этом никто не гарантирует, что ранее отправлен-
ный пакет придет раньше отправленного позднее. Следовательно, на
10
сетевом уровне необходимо уметь восстанавливать исходную после-
довательность пакетов.
Пакеты при передаче могут теряться и дублироваться (причины
этого рассмотрим далее). Сетевой уровень должен уметь бороться с
подобными явлениями и исправлять возникающие нарушения.
Как видно из рис. 1.2, сетевой уровень является границей транс-
портной среды. Поскольку за использование транспортной среды,
как правило, предполагается оплата, то на этом уровне присутствуют
функции учета числа байтов (или символов), которые послал и по-
лучил абонент сети. Причем, если абоненты расположены в разных
странах, где действуют различные тарифы, необходимо должным об-
разом скорректировать цену услуги.
Если пакет адресован в другую сеть, т. е. в другую транспортную
среду, то при его передаче требуется предпринять надлежащие меры
для учета различия форматов пакетов в разных транспортных средах,
различия способов адресации, допустимых размеров пакетов и т. д.
Все эти проблемы решаются шлюзом (см. устройство G на рис. 1.1)
на сетевом уровне.
Транспортный уровень
Основная функция транспортного уровня — принять данные с
вышерасположенного уровня сессии, разделить их, если требуется,
на более мелкие единицы — сегменты, передать на сетевой уровень
и позаботиться, чтобы все они дошли в целости до адресата. Все
это необходимо сделать эффективно и так, чтобы вышераспо­
ложенный уровень не зависел от того, как именно это было сделано.
В нормальных условиях транспортный уровень должен создавать
специальное сетевое соединение для каждого транспортного
соединения по запросу уровня сессии. Если для транспортного
соединения требуется высокая скорость передачи, то транспортный
уровень может потребовать у сетевого уровня создания нескольких
сетевых соединений, между которыми транспортный уровень будет
распределять передаваемые данные. И наоборот, если требуется
обеспечить недорогое транспортное соединение, то транспортный
уровень может использовать одно и то же соединение на сетевом
уровне для нескольких транспортных соединений. В любом случае
такое мультиплексирование должно быть незаметным на уровне
сессии.
Сетевой уровень определяет, какой тип сервиса предоставить
вышерасположенным уровням и пользователям сети. Наиболее часто
используемым сервисом является канал типа «точка — точка», без
ошибок обеспечивающий доставку сообщений или байтов в той
последовательности, в какой они были отправлены. Другим видом
сервиса является доставка отдельных сообщений без гарантии
сохранения их последовательности или, например, рассылка одного
11
сообщения многим в режиме вещания. В каждом конкретном случае
сервис определяют при установке транспортного соединения.
Транспортным называется уровень, обеспечивающий соединение
типа точка — точка. Активности транспортного уровня на машине
отправителя общаются с равнозначными активностями транспортного
уровня на машине получателя. При этом машина-отправитель и
машина-получатель не обязаны быть соседними (см. рис. 1.2). Этого
нельзя сказать про активности на нижерасположенных уровнях, ко-
торые общаются с равнозначными активностями на соседних
машинах. В этом заключается одно из основных отличий уровней
1 ... 3 от уровней 4 ... 7. Последние обеспечивают соединение типа
точка — точка, что хорошо видно из рис. 1.2.
Внимательно сравнив рис. 1.2 с рис. 1.2 из т. 1 данного учебника,
увидим, что если А-машины с R-машинами взаимодействуют на
физическом, канальном, сетевом и других уровнях, то с СПД они
взаимодействуют только на физическом и канальном уровнях. Сете-
вой уровень СПД сугубо внутренний.
Многие А-машины мультипрограммные, поэтому транспортный
уровень для одной такой машины должен поддерживать несколько
транспортных соединений. Чтобы определить, к какому соединению
относится тот или иной пакет, в его заголовке (см. H4 на рис. 1.4)
помещается необходимая информация.
Транспортный уровень также отвечает за установление и разрыв
транспортного соединения в сети. Это предполагает наличие
механизма именования, т. е. процесс на одной машине должен уметь
указать, с кем в сети ему следует обменяться информацией. Транспорт­
ный уровень также должен предотвращать «захлебывание» получателя
при обращении с «очень быстро говорящим» отправителем. Механизм
такого предотвращения, называемый управлением потоком, имеет-
ся и на других уровнях. Однако, как мы увидим далее, управление
потоком между А-машинами в сети отличается от управления потоком
между R-машинами (маршрутизаторами).
Уровень сессии
В модели ISO уровень сессии позволяет пользователям А-машин
(напомним, что пользователем может быть программа) устанавливать
между собой сессии. Сессия позволяет передавать данные, как это
может делать транспортный уровень, а кроме того, этот уровень име-
ет более сложный сервис, полезный в некоторых приложениях. На-
пример, на уровне сессии можно осуществлять вход в удаленную
систему, передавать файл между двумя приложениями и т. д.
Одним из видов услуг на этом уровне является управление диа-
логом. Потоки данных здесь могут быть разрешены одновременно в
обоих направлениях либо поочередно в одном направлении. Сервис
на уровне сессии будет управлять направлением передачи.
12
Другой вид сервиса на уровне сессии — управление маркером. Для
некоторых протоколов недопустимо выполнение одной и той же
операции на обоих концах соединения одновременно. В этом случае
уровень сессии выделяет активной стороне маркер, и операцию может
выполнять только тот, кто владеет маркером.
Также примером сервиса на уровне сессии является синхрониза-
ция. Пусть требуется передать файл, время пересылки которого со-
ставит два часа, между машинами, время наработки на отказ у кото-
рых — один час. Ясно, что «в лоб» передачу такого файла средствами
транспортного уровня не решить. Уровень сессии позволяет расстав-
лять контрольные точки. В случае отказа одной из машин передача
возобновится с последней контрольной точки.
Уровень представления
В модели ISO уровень представления обеспечивает решение часто
возникающих проблем, связанных с представлением данных при
передаче. В основном это проблемы семантики и синтаксиса пере-
даваемой информации. Данный уровень имеет дело с информацией,
а не с потоком битов.
Типичным примером услуги на этом уровне является унифициро-
ванная кодировка данных. Дело в том, что на разных машинах ис-
пользуются разные способы кодировки символов, например ASCII,
Unicode и другие, а также разные способы представления целых:
в прямом, обратном или дополнительном коде. Нумерация битов в
байте на разных машинах одной и той же сети тоже может быть раз-
ная, т. е. слева направо или справа налево, и т. д.
Пользователи, как правило, используют структуры данных, а не
случайный набор байтов. Чтобы машины с разными кодировкой и
представлением данных могли взаимодействовать, передаваемые
структуры данных определяются специальным абстрактным спосо-
бом, не зависящим от кодировки, используемой при передаче. Уро-
вень представления работает со структурами данных в абстрактной
форме, преобразует это представление во внутреннее представление
для конкретной машины и из внутреннего машинного представления
в стандартное представление для передачи по сети.
Уровень приложений
Уровень приложений обеспечивает работу часто используемых
приложений, например передачу файлов.
Разные операционные системы используют разные механизмы
именования, представления текстовых строк и т. д. Для передачи
файлов между разными системами необходимо преодолевать подоб-
ные различия. Чтобы пользователям не приходилось каждый раз
заново бороться с этими трудностями на уровне приложений имеет-
ся приложение FTP.
13
На уровне приложений находятся также такие часто используемые
приложения, как электронная почта, удаленная загрузка программ,
удаленный просмотр информации и т. д.
1.1.3. Модель TCP/IP
Рассмотрим другую эталонную модель, прототипом для которой
послужил прародитель Интернета — сеть ARPA. Далее будет приве-
дена история создания этой сети, а сейчас лишь отметим, что она
была создана в результате, научно-исследовательских работ, прове-
денных по инициативе Министерства обороны США. Позднее к
этому проекту подключились сотни университетов и государственных
учреждений США.
С самого начала эта сеть задумывалась как объединение несколь-
ких разных сетей.
Одной из основных целей этого проекта была разработка унифи-
цированных способов соединения сетей для создания систем пере-
дачи данных, обладающих высокой живучестью. Под живучестью
понимается способность системы сохранять в приемлемых пределах
качество и объемы предоставляемого сервиса при выходе из строя ее
компонентов. Так появилась модель TCP/IP, получившая название
по именам двух основных протоколов: протокола управления пере-
дачей — TCP (Transmission Control Protocol) и межсетевого протоко-
ла — IP (Internet Protocol).
Другой целью проекта ARPA было создание протоколов, не за-
висящих от характеристик конкретных А-машин, маршрутизаторов,
шлюзов и т. п. Кроме того, связь должна была поддерживаться, даже
если отдельные компоненты сети стали выходить из строя во время
соединения. Другими словами, связь в этой сети должна поддержи-
ваться до тех пор, пока источник информации и получатель инфор-
мации работоспособны. Архитектура сети АRPA не должна была
ограничивать приложения, начиная от простой передачи файлов до
передачи речи и изображения в реальном времени.
Межсетевой уровень
В силу приведенных требований выбор организации транспортной
среды был очевиден: сеть с коммутацией пакетов с межсетевым уров-
нем без соединений. Такой уровень, называемый межсетевым, яв-
ляется основой всей архитектуры сети. Его назначение — обеспечить
доставку пакетов, движущихся в сети независимо друг от друга, даже
если получатель принадлежит другой сети. Причем пакеты могут по-
ступать к получателю не в том порядке, в котором они были посланы.
Упорядочить их в надлежащем порядке — задача вышерасположен-
ного уровня.
14
Межсетевой уровень определяет межсетевой протокол IP и формат
пакета. Обратим внимание, что ни протокол, ни формат пакета не
являются официальными международными стандартами в отличие
от протоколов эталонной модели OSI, в которой большинство про-
токолов имеют статус международных стандартов.
Итак, назначением межсетевого уровня в модели TCP/IP являет-
ся доставка IP-пакета по назначению и по оптимальному маршруту.
Критерии оптимизации маршрута могут быть самые разные: напри-
мер, самый короткий маршрут или самый быстрый, или самый де-
шевый, или такой, который не проходит через определенные сети,
расположенные на недружественных территориях, и т. д. Это как раз
то, за что отвечает сетевой уровень в OSI-модели.
Под межсетевым уровнем в TCP/IP-модели «великая пустота». Эта
модель никак не регламентирует организацию и функционирование
СПД, равно как и связь с ней. Она также ничего не говорит о том,
что в СПД происходит, кроме того, что хост-машина* (в данном слу-
чае А-машина или R-машина) должна быть связана с сетью через
некоторый протокол. Никаких ограничений на этот протокол, а так-
же рекомендаций в этой модели нет.
Транспортный уровень
Над межсетевым уровнем в модели ТСР/IP расположен транс-
портный уровень. Как и в OSI-модели, задача этого уровня — обе-
спечить связь типа точка — точка между двумя равнозначными актив-
ностями. В рамках модели TCP/IP было разработано два транспорт-
ных протокола. Первый протокол — TCP (Transmission Control
Protocol), т. е. надежный протокол с соединением, который получает
поток байтов, фрагментирует его на отдельные сообщения и пере-
дает их на межсетевой уровень. На машине-получателе равнозначная
активность TCP-протокола собирает эти сообщения в поток байтов.
TCP-протокол также обеспечивает управление потоком.
Второй протокол — UDP (User Datagram Protocol), т. е. ненадеж-
ный протокол без соединения для тех приложений, которые исполь-
зуют свои механизмы фрагментации и управления потоком. Этот
протокол часто используется для передачи коротких сообщений в
клиент-серверных приложениях, а также там, где скорость передачи
важнее ее аккуратности. Напомним, что ненадежным называется
протокол без уведомления о получении кадра, фрейма, пакета,
сообщения и т. п.
Уровень приложений
В модели TCP/IP нет уровней сессии и представления, поскольку
необходимость в них была неочевидна для ее создателей. В настоящее
* Хостом обычно называют машину в сети, у которой есть IP-адрес
15
Рис. 1.5. Соответствие эталонных моделей OSI и ТСР/IР
время разработчик сложного приложения берет реализацию функций
этих уровней на себя.
Уровень приложений располагается сразу над транспортным. Этот
уровень сначала включал в себя следующие приложения: передача
файлов — FTP, электронная почта — SMTP. Позднее к ним добавились
служба имен домена — DNS (Domain Name Service), отображающая
логические имена А-машин на их сетевые адреса, протокол для рабо-
ты с гипертекстовыми документами во Всемирной паутине — HTTP и
некоторые другие.
На рис. 1.5 показано соответствие уровней двух рассмотренных
эталонных моделей.
1.1.4. Выбор модели
Теперь необходимо выбрать модель, которую мы будем использо-
вать для дальнейшего изучения сетей ЭВМ. Сразу оговоримся, что
разнообразие моделей сетей не исчерпывается уже рассмотренными.
Например, имеется модель SNA (System Network Architecture) от ком-
пании IBM и модель DNA (Digital Network Architecture) от компании
DEC. Все указанные модели имеют много общего. Например, модель
SNA была положена в основу модели OSI. Однако наиболее популяр-
ны модели OSI и TCP/IP.
Модели TCP/IP и OSI имеют много общего. Обе эти модели имеют
уровневую организацию и поддерживают понятие стека протоколов.
Назначение их уровней примерно одинаковое. Все уровни этих мо-
делей от транспортного и ниже используют протоколы для поддержки
взаимодействия типа точка—точка, не зависящего от организации
СПД, а все уровни выше транспортного ориентированы на приложе­
ния.
16
Наибольшее значение модели OSI методологическое: в ней явно
определены и четко выделены понятия сервиса, интерфейса, протоко-
ла, уровня. Это разделение строго проведено сверху донизу. Сервис
определяет, что делает уровень, но ничего не говорит о том, как он это
делает. Интерфейс уровня определяет для вышераспо­ оженного уровня
л
доступ к сервису. Протокол определяет реализацию сервиса.
Здесь можно провести аналогию с объектно-ориентированным
программированием. У каждого объекта имеется набор методов —
сервис, который определяет те операции, которые этот объект может
выполнять. Иными словами, сервис — это семантика методов. Каж-
дый метод имеет интерфейс: набор параметров, имя и т. п. Реализация
методов скрыта в объекте (протоколе) и невидима пользователю.
В модели TCP/IP нет столь же четкого выделения этих понятий.
В ней понятие протокола оторвано от остальных частей, и в ней нет
единой, хорошо продуманной, концепции построения. Этот факт
является следствием того, как создавались эти модели.
Модель TCP/IP создавалась post factum, т. е. после реализации
основных протоколов, а модель OSI — до начала их реализации,
поэтому понятие протокола в ней абсолютно не зависит от остальных
частей модели. Например, изначально протоколы канального уровня
в модели OSI создавались для соединений типа точка—точка. Позднее,
когда появились каналы с множественным доступом, на этот уровень
были добавлены соответствующие протоколы. Никаких других из-
менений не последовало.
Модель TCP/IP была создана, когда стек TCP/IP уже существовал,
поэтому:
•• в этой модели нет четкого разграничения понятий сервиса,
интерфейса и протокола;
•• эта модель годится только для описания стека TCP/IP;
•• уровень хост—сеть в ней по существу уровнем не является, это
больше интерфейс;
•• в этой модели отсутствуют уровни, соответствующие СПД.
Модели OSI и TCP/IP имеют разное число уровней. Обе они име-
ют уровень приложений, транспортный уровень и сетевой уровень.
Все остальные уровни в них разные. Модель OSI поддерживает на
сетевом уровне и сервис с соединением, и сервис без соединения. На
транспортном уровне этой модели поддерживается сервис только с
соединением. В модели TCP/IP наоборот: сетевой уровень обеспе-
чивает сервис без соединения, а транспортный — и с соединением,
и без соединения.
По существу модель OSI доказала свою эффективность как мето­
до­ огический инструмент и стала популярной, чего нельзя сказать о
л
ее протоколах, а с TCP/IP все наоборот: модели по существу нет, а
протоколы получили широкое распространение.
В данном курсе мы будем использовать понятия и организацию
модели OSI, а изучать протоколы сетевого, транспортного и при-
17
Рис. 1.6. Структура и организация гибридной модели, выбранной для даль-
нейшего изучения сетей ЭВМ
кладного уровней, следуя модели TCP/IP. Протоколы физического и
канального уровней уже рассматривались в т. 1 данного учебника.
Гибридная модель, выбранная для дальнейшего изучения сети
ЭВМ, представлена на рис. 1.6. Эта модель состоит из следующих
пяти уровней: физического, канала данных, сетевого, транспортного
и прикладного. При изучении будем использовать понятия уровня,
сервиса, интерфейса, протокола, следуя модели OSI, откуда мы возь-
мем распределение сервисов и функций между уровнями, а набор
протоколов и типовых приложений возьмем из модели TCP/IP.
1.2. Стандартизация в сети Интернет
В т. 1 данного учебника была подробно рассмотрена организация
международной стандартизации. Поскольку одним из основных ком-
понентов выбранной нами модели сети является TCP/IP, на которой
основывается Интернет, то необходимо рассмотреть, кто есть кто в
мире стандартизации Интернета.
Процесс стандартизации для сети Интернет с самого ее зарожде-
ния был хорошо организован. Этот процесс начался в 1969 г. с мо-
мента начала стандартизации протоколов сети ARPANET и всегда
имел значительную финансовую поддержку как по линии государ-
ственного бюджета США, так и благодаря спонсированию этой дея-
тельности промышленностью и бизнесом. В частности, такие ком-
пании как, например, APNIC, ARIN, Cisco Systems, IBM, Microsoft,
18
Ripe NCC ежегодно выделяют по 100 тыс. долл. для поддержки раз-
вития системы стандартов сети Интернет.
За процесс стандартизации информационных технологий в Ин-
тернете отвечают организации ISOC, IAB, IETF, IRTF, IESG [18],
которые структурно взаимосвязаны следующим образом: на верхнем
уровне иерархии в рассматриваемой организационной структуре рас-
полагается ISOC, а ниже расположены IAB, IETF, IRTF и IESG,
отвечающие за отдельные направления работ.
ISOC (Internet Society — интернет-сообщество, www. isoc.
org) — ассоциация экспертов, отвечающая за разработку стандартов
технологий сети Интернет. В рассматриваемой организационной
структуре ISOC располагается на верхнем уровне иерархии. Это не-
коммерческая неправительственная международная профессиональ-
ная организация, членами которой являются 175 организаций и
около 9000 физических лиц из более чем 170 стран мира.
Работа ISOC сосредоточена на решении следующих основных задач:
•• организация процесса стандартизации технологий сети Интернет;
•• формирование внешней политики интернет-сообщества;
•• поддержка инфраструктуры (организационно-административное
управление деятельностью, управление финансами, защита прав ин-
теллектуальной собственности и др.);
•• образование и обучение, в том числе организация ежегодных
семи­ аров по обучению интернет-технологиям (Network Training
н
Works­ ops — NTW), организация системы учебных центров (Sust­ in­
h
a
ab­ e Internet Training Centers — SITCs) и др.;
l
•• поддержка членства в ISOC как для организаций, так и для пер-
сональных членов.
IAB (Internet Architecture Board — Совет по архитектуре сети Ин-
тернет) — группа технических советников в составе ISOC, отвечающая
за развитие архитектуры сети Интернет, управление разработкой и
сопровождение стандартов протоколов и сервисов в Интернете и,
прежде всего, спецификаций стека протоколов TCP/IP. Данный совет
несет ответственность за управление редактированием и публикаци-
ей спецификаций RFC (Request for Comments), осуществляемое из-
дательским органом RFC Editor (http://www. rfc-editor. org), а также за
управление присваиванием номеров спецификациям RFC.
Результаты стандартизации в сети Интернет публикуются в виде
RFC-документов. Эти документы являются доступными на файловых
серверах Интернета для всех специалистов, что обеспечивает откры-
тость процессу стандартизации. Каждой вновь разработанной специ-
фикации или редакции уже существующего RFC-документа присваи-
вается очередной свободный номер RFC-документа. Предыдущие
версии пересмотренного документа остаются в каталогах системы
стандартов с прежними номерами, но помечаются как изменявшиеся.
IAB выполняет представительские функции ISOC при взаимодей-
ствии с другими организациями. Деятельность IAB поддерживается
19
напрямую и косвенно как правительством США, так и промышлен-
ностью.
IETF (Internet Engineering Task Force — рабочая группа по про-
ектированию Интернет-технологий, www. ietf. org) по существу явля-
ется большим международным открытым сообществом разработчи-
ков, операторов, изготовителей и исследователей в области сетевых
технологий, занимающихся вопросами развития архитектуры сети
Интернет и способов ее использования. IETF открыта для всех, кто
интересуется интернет-технологиями. Основная сфера деятельности
IETF состоит собственно в разработке стандартов сети Интернет, а
также в их эффективной реализации и тестировании.
IRTF (Internet Research Task Force — исследовательская группа
интернет-технологий, www. irtf. org) — подразделение IAB, которое
выполняет долгосрочные исследовательские программы, связанные
с вопросами развития архитектуры, базовых протоколов и сетевых
приложений сети Интернет. Руководящие органы IRTF назначаются
IAB.
IESG (Internet Engineering Steering Group — группа технического
управления сети Интернет, www. ietf. org) отвечает за техническое
управление процессом стандартизации интернет-технологий, осу-
ществляет экспертизу проектов спецификаций, разрабатываемых
IETF, несет ответственность за принятие интернет-стандартов и их
дальнейшее продвижение.
Более подробно вопросы стандартизации в сети Интернет изло-
жены в [17].
1.3. Примеры сетей ЭВМ
1.3.1. ARPANET
В начале 1960-х гг. Министерство обороны США поставило задачу
создания командных пунктов и пунктов управления связью, которые
были бы способны сохранить работоспособность при ядерной войне.
Обычные телефонные линии были ненадежны: поражение АТС
района означало потерю связи со всеми абонентами этого района.
Для решения этой задачи Министерство обороны США обратилось
к своему агентству перспективных разработок — ARPA (Advanced
Research Project Agency, иногда DARPA), не имеющему лабораторий,
научных сотрудников и т. п. Это бюрократическая организация с
самостоятельным бюджетом, из которого она выделяет гранты
университетам и компаниям, если их идеи кажутся им интерес­ ыми.
н
В 1962 г. исследования ARPA по вопросам военного применения
компьютерных технологий возглавил доктор Ликлайдер, который
предложил для этих целей использовать взаимодействие имеющихся
государственных компьютеров, а также способствовал привлечению
20
к этим работам частного сектора и университетских ученых. В этом
же году появился отчет, выполненный П. Бараном в корпорации
RAND по заказу военно-воздушных сил [70], в котором исследовались
различные модели коммуникационных систем и оценивалась их жи-
вучесть. В отчете предлагалась децентрализованная система управле-
ния и связи, которая могла бы функционировать при выходе из строя
какой-то ее части. Одна из рекомендаций автора касалась построения
системы передачи цифровых данных между большим числом поль-
зователей.
Вскоре основным направлением проводимых агентством иссле-
дований стали компьютерные сети. Главная идея состояла в по-
строении сети из равноправных узлов, каждый из которых должен
был иметь собственные блоки приема, обработки и формирования
сообщений, обеспечивающие высокую живучесть сети даже при вы-
ходе из строя множества узлов. Первые эксперименты по объедине-
нию удаленных узлов были проведены уже в 1965 г., когда были сое-
динены компьютеры TX-2 Массачусетского технологического инсти-
тута (MIT Lincoln Lab) и Q-32 корпорации SDC (System Development
Corporation) в Санта-Монике. Правда, обмена пакетами между ними
в это время еще не проводилось, обмен осуществлялся посимвольно.
В 1967 г. на симпозиуме ACM (Association for Computer Machinery)
был представлен план создания национальной сети с коммутацией
пакетов. Вскоре после симпозиума Робертс опубликовал план по-
строения такой сети — ARPANET (Advanced Research Projects Agency
NETwork), и уже в 1969 г. Министерство обороны США утвердило
этот проект. Первым узлом новой сети стал университет штата Ка-
лифорния в Лос Анжелесе (UCLA) — Центр испытаний сети, а вско-
ре к нему присоединились Стэнфордский исследовательский инсти-
тут (SRI), университет штата Калифорнии в Санта-Барбара (UCSB)
и университет штата Юта. На узлах этой сети использовались IMP
(Interface Message Processor) — машины, разработанные корпорацией
Bolt Bаranec & Newman, Inc (BBN). Так были осуществлены первые
передачи знаков из одних машин в другие.
Согласно плану Робертса каждая подсеть должна была содержать
как минимум один IMP-компьютер, соединенный линиями связи с
двумя другими такими компьютерами в других подсетях. В подсети
должен был использоваться дейтаграммный способ передачи данных.
Программное обеспечение состояло из следующих протоколов:
IMP — хост, IMP — IMP, IMP-отправитель — IMP-получатель (рис.
1.7).
Позднее для подключения терминалов к сети был создан вариант
IMP, названный TIP (Terminal Interface Processor). Затем к одному
IMP стали подключать несколько хост-машин, и одна хост-машина
получила возможность соединяться с несколькими IMP. После этого
начались эксперименты со спутниковой связью и радиосвязью. На-
пример, был поставлен следующий эксперимент: грузовик с обо­
21
Рис. 1.7. Организация сети APRANET
рудованием двигался по дорогам южной Калифорнии, пытаясь
связаться с машинами, находящимися в исследовательском институте
Стэнфорда (SRI), которые через спутниковый канал передавали
сообщения в Лондон.
В результате проведенных экспериментов стало ясно, что име­
ющие­ я протоколы плохо пригодны для межсетевой связи, поэтому
с
после выполнения дополнительных работ в 1974 г. появился стек
протоколов TCP/IP. Контракты на реализацию этих протоколов ARPA
передало в университет Беркли, где шли работы над операционной
системой UNIX. Версия UNIX BSD 4.3 с реализацией TCP/IP, сокетов
и другого сетевого программного обеспечения стала быстро рас­
пространяться.
К 1982 г. ARPANET уже насчитывала более 200 IMP-машин.
1.3.2. Хронология развития сети Интернет
1982 г. — рождение современного Интернета. TCP/IP стал офи-
циальным протоколом в ARPANET.
1984 г. — число хостов в ARPANET превысило тысячу.
1986 г. — Национальный фонд науки США (The National Science
Foumdation) создал сеть NSFNET, открывшую доступ через Интернет
к суперкомпьютерным центрам. После этого число сетей, подклю-
ченных к ARPANET, стало расти очень быстро. Во второй половине
1980-х гг. этот конгломерат сетей стали рассматривать как сеть сетей,
а позднее как Интернет. В значительной степени рост сети Интернет
происходил за счет подключения таких сетей, как SPAN — сеть кос-
мической физики NASA, HEP — сеть физики высоких энергий,
BITNET — сеть машин класса mainframe фирмы IBM, EARN — ев-
ропейская сеть научно-исследовательских организаций.
1989 г. — рождение идеи Всемирной паутины (World Wide Web —
www), инициатор — британский ученый Тим Бернерс-Ли.
22

