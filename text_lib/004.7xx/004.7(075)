Министерство образования и науки Российской Федерации
ГОУ ВПО «Тамбовский государственный технический университет»
Н.А. КОЛЬТЮКОВ, О.А. БЕЛОУСОВ
СЕТЕВЫЕ ТЕХНОЛОГИИ
Рекомендовано Учебно-методическим объединением по образованию
в области радиотехники, электроники, биомедицинской техники
и автоматизации в качестве учебного пособия для студентов,
обучающихся по направлениям 210200 – Проектирование и технология электронных средств и 210300 –
Радиотехника
Тамбов
Издательство ТГТУ
2009
УДК 004.7(075)
ББК з841я73
К625
Рецензенты:
Доктор технических наук, профессор ТГТУ
П.С. Беляев
Кандидат технических наук, доцент
начальник кафедры «Радиосвязь (авиационная)» ТВВАИУРЭ(ВИ),
Ю.И. Лёвочкин
Кольтюков, Н.А.
Сетевые технологии : учебное пособие / Н.А. Коль-
тюков, О.А. Белоусов. – Тамбов : Изд-во Тамб. гос. техн.
ун-та, 2009. – 100 с. – 100 экз. – ISBN 978-5-8265-0843-5.
К625
Представлены основные сведения о маршрутизации,
базовых протоколах маршрутизации и коммутации, а
также перспективные интегрированные протоколы ком-
мутации четвёртого уровня, стандарты IEEE 802.1Q и
IEEE 802.1P. Рассмотрены приоритеты и классы обслу-
живания в сетях, протоколы реального времени RTP и
RSVP, вопросы безопасности корпоративных сетей.
Предназначено для студентов, бакалавров и магист-
ров, обучающихся по направлениям 210200 – Проектиро-
вание и технология РЭС и 210300 – Радиотехника.
УДК 004.7(075)
ББК з841я73
ISBN
0843-5
978-5-8265- © ГОУ ВПО «Тамбовский государ-
ственный
технический
университет»
(ТГТУ), 2009
Учебное издание
КОЛЬТЮКОВ Николай Александрович,
БЕЛОУСОВ Олег Андреевич
СЕТЕВЫЕ ТЕХНОЛОГИИ
Учебное пособие
Редактор Т.М. Глинкина
Инженер по компьютерному макетированию Т.Ю. Зотова
Подписано в печать 22.09.2009
Формат 60 × 84/16. 5,81 усл. печ. л. Тираж 100 экз. Заказ No 376
Издательско-полиграфический центр
Тамбовского государственного технического университета
392000, Тамбов, Советская, 106, к. 14
ВВЕДЕНИЕ
Сетевые технологии представляют собой одно из направлений развития систем обработки данных,
которое возникло в связи с необходимостью объединения территориально рассредоточенных вычисли-
тельных средств в единую систему. Сетевые технологии обеспечивают пользователю широкий набор ус-
луг и позволяют создавать целый ряд различных по назначению автоматизированных систем распреде-
лённой обработки информации.
Наиболее значимыми технологиями обработки передаваемых данных (пакетов) являются коммута-
ция и маршрутизация. До недавнего времени эти два понятия имели абсолютно разные значения – как
по технологии обработки пакетов, так и по уровням модели OSI, на которых работают оба эти метода
управления данными в сети, – и не могло быть и речи, чтобы объединить эти понятия. Сегодня развитие
сетевых технологий идёт быстрыми темпами. Всё возрастающий объём передаваемой информации, фи-
зический рост сетей и межсетевого трафика подстегивают производителей к выпуску всё более мощных
и «умных» устройств, использующих новые (совсем новые или комбинации традиционных) методы пе-
редачи и сортировки данных, а также коммутации и маршрутизации, и методы их комбинирования для
оптимизации межсетевого трафика и увеличения производительности.
Глава 1. УРОВНИ МОДЕЛИ OSI
1.1. УРОВНИ МОДЕЛИ АРХИТЕКТУРЫ ОТКРЫТЫХ СИСТЕМ
В настоящее время общепринятой является семиуровневая модель архитектуры открытых систем
(Open System Interconnection, OSI). В этой модели рассматриваются [1]:
1. Физический уровень (управление физическим каналом).
2. Канальный уровень (управление информационным каналом).
3. Сетевой уровень (управление сетью).
4. Транспортный уровень (управление передачей).
5. Сеансовый уровень (управление сеансом).
6. Представительный уровень (управление представлением).
7. Прикладной уровень (управление сервисом).
Какие же задачи решаются на различных уровнях протоколов открытых систем? Рассмотрим этот
вопрос несколько подробнее.
Прикладной уровень. В модели OSI прикладная программа, которой нужно выполнить конкрет-
ную задачу (например, обновить базу данных на компьютере В), посылает конкретные данные в виде
дейтаграммы на прикладной уровень. Одна из основных «обязанностей» этого уровня – определить, как
следует обрабатывать запрос прикладной программы, иными словами – какой вид должен принять дан-
ный запрос. Если в запросе прикладной программы определён, например, дистанционный ввод заданий,
то это потребует работы нескольких программ, которые будут собирать информацию, организовывать
её, обрабатывать и посылать по соответствующему адресу. Ещё одна важная функция прикладного
уровня – электронная почта.
Виды сервиса прикладного уровня. Прикладной уровень содержит несколько так называемых
общих элементов прикладного сервиса (ACSE – Application Common Service Elements) и специальных
элементов прикладного сервиса (SASE – Specific Application Service Elements). Сервисы ACSE предостав-
ляются прикладным процессам во всех системах. Они включают, например, требование определённых
параметров качества сервиса.
Допустим, необходимо установить связь через модем по глобальной сети между рабочей станцией
локальной сети в Лос-Анджелесе и мэйнфреймом в Бостоне. Поскольку качество телефонной линии
иногда оказывается неудовлетворительным, прикладной процесс, работающий в ЛВС, может запросить
такое качество сервиса, которое предусматривает подтверждение приёма и распознавания информации.
Если провести аналогию с почтой, то указанное действие равносильно требованию, чтобы доставка
вашей посылки подтверждалась квитанцией.
Специальные элементы прикладного сервиса (SASE) обеспечивают сервис для конкретных при-
кладных программ, таких как программы пересылки файлов и эмуляции терминалов. Если, например,
прикладной программе необходимо переслать файлы, то обязательно будет использован протокол пере-
дачи, доступа и управления файлами (FTAM – File Transfer, Access and Management), являющийся од-
ним из ключевых протоколов прикладного уровня.
Давайте на минутку заглянем в будущее, когда локальные сети и мэйнфреймы станут работать с
OSI-совместимым программным обеспечением. Поскольку FTAM работает как виртуальный банк фай-
лов и имеет собственную службу каталогов, то программы смогут получать доступ к базам данных, не
имея информации о фактическом местонахождении файла. Поскольку FTAM поддерживает широкое
разнообразие различных типов структур, включая последовательную, упорядоченную иерархическую и
общую иерархическую, то информация из базы данных, расположенной на удалённом Unisys-
компьютере, будет использоваться для обновления другой базы данных, работающей в локальной сети в
другом городе. Данные из первой базы, в свою очередь, будут обновляться на основе информации, взя-
той из третьей базы данных, размещённой на IBM-мэйнфрейме.
Ещё одна важная составляющая SASE прикладного уровня – сервис виртуального терминала (VT –
Virtual Terminal). VT – это сложный сервис, который освобождает компьютер от необходимости посы-
лать соответствующие сигналы для обращения ко всем терминалам, подключённым ко второму компь-
ютеру. Первый компьютер может использовать набор параметров виртуального терминала, а решение
вопросов конкретизации конфигурации терминалов можно предоставить второму компьютеру.
На разных этапах разработки находятся ещё несколько SASE: обработка транзакций (trunks actions),
электронный обмен данными (EDI – Electronic Data Interchange), передача и обработка заданий (JTM –
Job Transfer and Manipulation). Разработка стандарта OSI на EDI, в частности, очень важна для пользова-
телей ЛВС. Например, на рабочей станции ЛВС можно составить заказ на покупку и передать эту ин-
формацию по сети непосредственно изготовителю или продавцу, где данные будут автоматически вне-
сены в счёт-фактуру. Можно проверять и автоматически корректировать инвентаризационные ведомо-
сти, можно заключать договора на поставку товаров – и всё это без бумаг и волокиты.
Функции управления сетями на прикладном уровне. По мере усложнения информационных се-
тей вопрос административного управления ими приобретает всё большее значение. Поскольку сейчас
любые системы передачи информации позволяют обрабатывать и передавать также и речевые данные, а
локальные сети всё теснее связываются с глобальными сетями и мэйнфреймами, то всё очевиднее необ-
ходимость в разработке эффективного метода организации этой информации и управления ею. Фирма
IBM в качестве решения предложила свои системы NetView и NetView/PC, a Hewlett-Packard вышла на
рынок с пакетом прикладных программ OpenView.
На сегодняшний день проблема заключается в том, что при наличии нескольких решений нет меж-
дународного стандарта по управлению сетями. Для прикладного уровня модели OSI существует не-
сколько спецификаций информационно-управляющих протоколов, которые претендуют на то, чтобы в
будущем стать международными стандартами. Вопросы, касающиеся разработки международных стан-
дартов по управлению сетями, будут рассмотрены позже.
Уровень представления данных. Уровень представления данных отвечает за физическое отобра-
жение (представление) информации. Так, в полях базы данных информация должна быть представлена
в виде букв и цифр, а зачастую – и графических изображений. Обрабатывать же эти данные нужно, на-
пример, как числа с плавающей запятой.
Уровень представления данных обеспечивает возможность передачи данных с гарантией, что при-
кладные процессы, осуществляющие обмен информацией, смогут преодолеть любые синтаксические
различия. Для того чтобы обмен имел место, эти два процесса должны использовать общее представле-
ние данных или язык.
Важность уровня представления данных заключается в том, что в основу его работы положена еди-
ная для всех уровней модели OSI система обозначений для описания абстрактного синтаксиса – ASN.1.
Эта система служит для описания структуры файлов. На прикладном уровне система ASN.1 применяет-
ся и для выполнения всех операций пересылки файлов, и при работе с виртуальным терминалом. Ис-
пользование этой системы позволяет также решить одну из важнейших проблем, возникающих при
управлении крупными сетями, – проблему шифрования данных. Шифрование данных с помощью
ASN.1 можно выполнять на уровне представления данных; разработка стандарта OSI для этого уровня
окажет значительное влияние на обеспечение межмашинной связи.
Сеансовый уровень. Представьте себе опытного администратора, отвечающего за подготовку и со-
гласование всех деталей предстоящей важной встречи двух высокопоставленных руководителей. Если
он действует правильно, встреча проходит чётко и организованно. Аналогично и работа сеансового
уровня обеспечивает проведение сеанса и в конечном итоге обмен информацией между двумя приклад-
ными процессами.
Сеансовый уровень отвечает за такие серьезные вопросы, как режим передачи и установка точек
синхронизации. Иными словами, на этом уровне определяется, какой будет передача между двумя при-
кладными процессами: полудуплексной (процессы будут передавать и принимать данные по очереди)
или дуплексной (процессы будут передавать и принимать данные одновременно). В полудуплексном
режиме сеансовый уровень выдаёт тому процессу, который первым начинает передачу, маркер данных.
Когда второму процессу приходит время отвечать, маркер данных передаётся ему. Сеансовый уровень,
таким образом, разрешает передачу только той стороне, которая обладает маркером данных.
Синхронизирующие точки представляют собой точки внутри «диалога», в которых сеансовый уро-
вень проверяет наличие фактического обмена.
Ещё одна функция сеансового уровня модели OSI заключается в решении вопроса о восстановле-
нии связи в случае её нарушения. Например, логично было бы ставить точки синхронизации между
страницами текста и в случае нарушения связи начинать передачу с последней синхронизирующей точ-
ки. Таким образом, для восстановления сеанса не нужно будет начинать всё сначала и повторять пере-
дачу текста, который уже принят правильно.
Сеансовый уровень, кроме того, отвечает за детали, связанные с упорядоченным («плавным») за-
вершением соединения в конце сеанса. Могут возникнуть и ситуации, когда требуется безусловное
(«резкое») завершение. Это необходимо в тех случаях, когда одна из сторон прекращает обмен и отка-
зывается с этого момента принимать данные.
Сеансовый уровень обрабатывает не все запросы на соединения. Он может выдать примитив отказа
от соединения, если определит, что соединение приведёт к перегрузке сети или что затребованный при-
кладной процесс отсутствует.
Транспортный уровень. Транспортный уровень имеет большое значение для пользователей ком-
пьютерных сетей, поскольку именно он определяет качество сервиса, которое необходимо обеспечить по-
средством сетевого уровня. Для того чтобы лучше понять функции транспортного уровня, представим его
как аналогию набора специальных услуг, которые местное почтовое отделение предоставляет клиентам за
дополнительную плату. Например, заплатив некоторую сумму, клиент может получить квитанцию о том,
что письмо доставлено по указанному им адресу. Можно заказать срочную доставку, если клиент желает,
чтобы его посылка пришла, к примеру, в Бостон на следующий день. Плату за эти дополнительные высо-
кокачественные услуги почтовое ведомство США взимает с клиентов деньгами, а для пользователя сети,
работающего с OSI-coвместимыми аппаратными и программными средствами, эта плата выражается в
дополнительных битах, необходимых для предоставления информации о статусе возможных дополни-
тельных услуг.
На транспортном уровне предусмотрено три типа сетевого сервиса. Сервис типа А предоставляет
сетевые соединения с приемлемым для пользователей количеством необнаруживаемых ошибок и при-
емлемой частотой сообщений об обнаруженных ошибках. Сервис типа В отличается приемлемым коли-
чеством необнаруживаемых ошибок, но неприемлемой частотой сообщений об обнаруженных ошибках.
Наконец, сервис типа С предоставляет сетевые соединения с количеством необнаруженных ошибок, не
приемлемым для сеансового уровня.
Возникает вопрос: а для чего вообще нужны классы сервиса с неприемлемым количеством ошибок?
Ответ состоит в том, что для установки многих сетевых соединений необходимы дополнительные про-
токолы, обеспечивающие обнаружение и устранение ошибок на достаточном для нормальной работы
уровне, и на транспортном уровне такой сервис просто не нужен.
Транспортный уровень, тем не менее, предоставляет программистам возможность писать програм-
мы для прикладного уровня в самых различных сетях, не обращая внимания на то, надёжна ли передача
по этим сетям или нет. Некоторые называют три верхних уровня модели OSI «пользователями транс-
портного уровня», а четыре нижних – «поставщиками транспортного уровня».
Существует пять классов сервиса транспортного протокола (табл. 1.1).
Класс 0, известный как телекс, представляет собой сервис с самым низким качеством. В этом классе
сервиса предусматривается, что управление потоком данных осуществляет сетевой уровень (под транс-
портным уровнем). Транспортный уровень разрывает соединение, когда аналогичную операцию выпол-
няет сетевой уровень. Сервис класса 1 был разработан CCITT для стандарта Х.25 на сети с коммутацией
пакетов. Он обеспечивает передачу срочных данных, однако управление потоком все равно осуществ-
ляется на сетевом уровне.
Класс 2 – это модифицированный класс 0. Уровень сервиса этого класса базируется на предположе-
нии о том, что сеть обладает высокой надёжностью. Предлагаемое качество сервиса предусматривает
возможность мультиплексирования множества транспортных соединений из одного сетевого соедине-
ния. Класс 2 обеспечивает необходимую сборку мультиплексированных пакетов данных, прибывающих
неупорядоченными.
1.1. Пять классов сервиса транспортного протокола
Класс
Наименование
Тип
0 Простой А
1 Устранение основных ошибок В
2 Мультиплексирование А
3 Обнаружение ошибок и мультиплекси- В
                                рование 
4 Обнаружение и устранение ошибок С
Класс 3 обеспечивает виды сервиса, предлагаемые уровнями 1 и 2, а в случае обнаружения ошибки
предоставляет возможность ресинхронизации для переустановления соединения.
Класс 4 предполагает, что сетевому уровню присуща надёжность, поэтому он предлагает обнару-
жение и устранение ошибок.
Сетевой уровень. На сетевом уровне осуществляется сетевая маршрутизация. Этот уровень – ключ
к пониманию того, как функционируют шлюзы к мэйнфреймам IBM и другим компьютерным системам.
Протоколы верхних уровней модели OSI выдают запросы на передачу пакетов из одной компьютерной
системы в другую, а задача сетевого уровня состоит в практической реализации механизма этой переда-
чи.
Сетевой уровень является основой стандарта CCITT Х.25 на глобальные сети. Позже мы изучим
структуру пакета Х.25, включая назначение и структуру полей управляющей информации.
На сетевом уровне реализован ряд ключевых видов сервиса для транспортного уровня, который в
модели OSI расположен непосредственно над сетевым. Сетевой уровень уведомляет транспортный уро-
вень об обнаружении неисправимых ошибок, помогая ему поддерживать качество сервиса и избегать
перегрузки сети путём прекращения, если это необходимо, передачи пакетов.
Поскольку в процессе обмена информацией между двумя сетями физические соединения время от
времени могут изменяться, сетевой уровень поддерживает виртуальные каналы и обеспечивает пра-
вильную сборку пакетов, прибывающих в неправильной последовательности. Работа этого уровня осу-
ществляется с помощью таблиц маршрутизации, которые служат для определения пути продвижения
того или иного пакета. Во многих случаях сообщение, состоящее из нескольких пакетов, идёт по не-
скольким путям. Сетевой уровень предоставляет соответствующую «отгрузочную» информацию, необ-
ходимую для этих пакетов (например, общее число пакетов в сообщении и порядковый номер каждого
из них).
С передачей данных в сетях связана одна очень неприятная проблема: такие характеристики, как
длина поля адреса, размер пакета и даже промежуток времени, в течение которого пакету разрешается
перемещаться по сети и по истечении которого пакет считается потерянным и выдаётся запрос на пакет-
дубликат, в каждой сети различны. По этой причине управляющая информация, включаемая в пакеты
на сетевом уровне, должна быть достаточной для предотвращения возможных недоразумений и обеспе-
чения успешной доставки и сборки пакетов.
Как уже упоминалось выше, транспортный и сетевой уровни в значительной степени дублируют
друг друга, особенно в плане функций управления потоком данных и контроля ошибок. Главная причи-
на подобного дублирования заключается в том, что существует два варианта связи – с установлением
соединения (connection-orientied) и без установления соединения (connectionless). Эти варианты связи
базируются на разных предположениях относительно надёжности сети.
Сеть с установлением соединения работает почти так же, как и обычная телефонная система. После
установления соединения происходит поэтапный обмен информацией, причем в данном случае «собе-
седники» не обязаны завершать каждое заявление своим именем, именем вызываемого партнёра и его
адресом, поскольку предполагается, что связь надёжна и противоположная сторона получает сообщение
без искажений.
В надёжной сети с установлением соединения адрес пункта назначения необходим лишь при уста-
новлении соединения, а в самих пакетах он не нужен. В подобной сети сетевой уровень принимает на
себя ответственность за контроль ошибок и управление потоком данных. Кроме того, в его функции
входит сборка пакетов.
Сетевой сервис без установления соединения, наоборот, предполагает, что контроль ошибок и
управление потоком данных осуществляются на транспортном уровне. Адрес пункта назначения необ-
ходимо указывать в каждом пакете, а соблюдение очерёдности пакетов не гарантируется. Основная
идея такого сервиса состоит в том, что важнейшим показателем является скорость передачи и пользова-
тели должны полагаться на собственные программы контроля ошибок и управления потоком данных, а
не на встроенные стандартные средства модели OSI.
Как это всегда бывает, когда члены комитета обсуждают сложный вопрос, был найден компромисс,
который не удовлетворил ни одну из сторон. Он состоит в том, что возможности и сервиса с соединени-
ем, и сервиса без соединения встроены в оба уровня: сетевой и транспортный. Конечный пользователь
может выбрать соответствующие стандартные значения для управляющих полей этих уровней и ис-
пользовать тот метод, который ему больше по душе. Недостаток этого компромисса состоит в излишней
избыточности, предусмотренной в обоих уровнях, что означает значительное количество дополнитель-
ных информационных битов. При передаче информации в таком формате по линиям дальней связи это
приводит к дополнительным накладным расходам, поскольку процесс передачи занимает больше вре-
мени.
Канальный уровень. Канальный уровень можно сравнить со складом и погрузочно-разгрузочным
цехом крупного производственного предприятия. Обязанность канального уровня – брать пакеты, по-
ступающие с сетевого уровня, и готовить их к передаче (отгрузке), укладывая в кадры (коробки) соот-
ветствующего размера. В процессе перемещения информации вверх по уровням модели OSI канальный
уровень должен принимать информацию в виде потока битов, поступающих с физического уровня, и
производить её обработку. Этот уровень обязан определять, где начинается и где заканчивается переда-
ваемый блок, а также обнаруживать ошибки передачи. Если обнаружена ошибка, канальный уровень
должен инициировать соответствующие действия по восстановлению потерянных, искажённых и даже
дублированных данных.
Между компьютерными системами может одновременно существовать несколько независимо рабо-
тающих каналов передачи данных. Канальный уровень обязан обеспечить отсутствие перекрытия этих
каналов и предотвратить возможное искажение данных. Канальный уровень инициализирует канал с
соответствующим уровнем на компьютере, с которым будет обмениваться данными. Он должен обеспе-
чить синхронизацию обеих машин и использование в них одинаковых схем кодирования и декодирова-
ния.
Поскольку управление потоком и контроль ошибок также входят в функции канального уровня, то
он отслеживает получаемые кадры и ведёт статистические записи. По завершении передачи информа-
ции пользователем канальный уровень проверяет, все ли данные приняты правильно, а затем закрывает
канал.
Контроль ошибок на канальном уровне. Для выполнения этой функции на канальном уровне
применяется метод автоматического запроса повторной передачи (ARQ – Automatic Repeat Request). В
зависимости от типа протокола, который работает на канальном уровне, для контроля ошибок исполь-
зуется одна из трёх разновидностей этого метода. ARQ с остановкой и ожиданием – это метод, при ко-
тором компьютер передаёт кадр информации, а затем ожидает получение кода подтверждения приёма
(АСК – acknowledgment), который показывает, что кадр принят правильно. Если выявлена ошибка, то
принимающая станция передаст код неподтверждения приёма (NAK – negative acknowledgment) и пере-
дающая станция повторяет передачу.
При использовании метода непрерывного ARQ с возвратом на N станция принимает несколько кад-
ров (в зависимости от используемого протокола), а затем отвечает выдачей АСК или NAK с указанием
кадра, который содержит ошибку. Если станция передала один за другим семь кадров и в четвёртом
кадре выявлена ошибка, то передающая станция ответит на NAK повторной передачей кадров с 4-го по
7-й.
Метод непрерывного ARQ с избирательным повторением представляет собой модификацию пре-
дыдущего варианта ARQ. Принимающая станция записывает все получаемые кадры по порядку в спе-
циальный буфер, а затем отвечает, что такой-то кадр (скажем, номер 4) содержит ошибку. Сохраняя все
остальные кадры в буфере, принимающая станция передаёт NAK. Передающая станция повторно пере-
даёт только кадр, содержавший ошибку (т.е. номер 4). Принимающая станция вновь собирает пакеты в
нужном порядке (с 1-го по 7-й) и обрабатывает информацию.
Основные протоколы канального уровня. Канальный уровень содержит ряд протоколов, которые
разработаны комитетом IEEE 802. Для того чтобы понять, как работает этот уровень – ключевой в мо-
дели OSI, – нужно иметь некоторое представление о деятельности упомянутого комитета. Протоколы
IEEE канального уровня будут рассмотрены позже.
Физический уровень. Физический уровень модели OSI наименее противоречивый, поскольку
включает международные стандарты на аппаратуру, уже вошедшие в обиход. По сути дела, единствен-
ная реальная проблема на этом уровне заключается в том, как ISO собирается учитывать вновь разраба-
тываемые стандарты на аппаратуру. Методы передачи данных становятся всё более скоростными, появ-
ляются новые интерфейсы с дополнительными функциями контроля ошибок. В связи с этим возникает
вопрос: будут ли добавлены к модели OSI новые стандарты или же физический уровень останется без
изменений? Суд ещё не вынес свой вердикт, поэтому предсказать реакцию ISO сейчас не представляет-
ся возможным.
Для физического уровня определён очень подробный список рекомендованных к употреблению со-
единителей. Здесь упомянуты, к примеру, 25-контактные разъёмы для интерфейсов RS-232C, 34-
контактные разъёмы для широкополосных модемов спецификации V.35 CCITT и 15-контактные разъё-
мы для интерфейсов общедоступных сетей передачи данных, определённых в рекомендациях CCITT
Х.20, Х.21, Х.22 и т.д. Кроме того, регламентируются допустимые электрические характеристики, в ча-
стности
RS-232C, RS-449, RS-410 и V.35 CCITT.
Физический уровень может обеспечивать как асинхронную (последовательную) передачу, которая
используется для многих персональных компьютеров и в некоторых недорогих ЛВС, так и синхронный
режим, который применяется для некоторых мэйнфреймов и мини-компьютеров.
Поскольку подкомитеты ISO и IEEE последние несколько лет работают в тесном контакте, не уди-
вительно, что во многих стандартах на ЛВС используются определения, предложенные на физическом
уровне модели OSI. На базе физического уровня различные подкомитеты IEEE разрабатывают подроб-
ные описания реального физического оборудования, которое передаёт сетевую информацию в виде
электрических сигналов: требования к применяемым кабельным системам, разъёмам и соединителям.
На физическом уровне модели OSI определяются такие важнейшие компоненты сети, как тип коак-
сиального кабеля для одноканальной передачи при скорости 10 Мбит/с. Сюда включено принятое в
стандарте IEEE 802.3 определение более тонкого коаксиального кабеля cheapenet. К физическому уров-
ню будет добавлено и включённое в стандарт IEEE 802.3 определение одноканальной передачи данных
по кабелю на витых парах со скоростью 10 Мбит/с.
К средствам, определённым на физическом уровне, также относятся волоконно-оптические кабели
и витые пары, применяемые в самых различных ЛВС. В некоторых сетях, например стандарта Token
Ring Network фирмы IBM, используются неэкранированные витые пары, а в сетях других типов – экра-
нированные. Упомянутым подкомитетом, кроме того, были разработаны спецификации различных ти-
пов коаксиальных кабелей для широкополосных ЛВС различных типов.
На физическом уровне модели OSI должна быть определена и схема кодирования, которой компьютер
пользуется для представления двоичных значений с целью их передачи по каналу связи. В стандарте
Ethernet, как и во многих других локальных сетях, используется манчестерское кодирование.
В манчестерском кодировании отрицательное напряжение в течение первой половины такта передачи с пе-
реходом на положительное напряжение во втором полутакте означает единицу, а положительное напряже-
ние с переходом на отрицательное – нуль. Таким образом, в каждом такте передачи имеется переход с от-
рицательного на положительное напряжение, или наоборот.
Итак, физический уровень отвечает за тип физической среды, тип передачи, метод кодирования и
скорость передачи данных для различных типов локальных сетей. К его функциям, кроме того, относят-
ся установление физического соединения между двумя коммуникационными устройствами, формиро-
вание сигнала и обеспечение синхронизации этих устройств. Тактовые генераторы обоих устройств
должны работать синхронно, иначе передаваемая информация не будет расшифрована и прочитана.
В табл. 1.2 представлено описание четырёх нижних уровней модели OSI. Особо следует отметить избы-
точность, предусмотренную в модели OSI для связи с установлением соединения и связи без установления
соединения.
1.2. Четыре нижних уровня модели BOC/MOC
Транспортный Определение транспортного сервиса.
уровень
Транспортный протокол с установлением
соединения
Сетевой Сетевой сервис без установления соедине-
       уровень ния
Канальный Управление логическим каналом. Неакви-
         уровень тируемый сервис без установления соеди-
                                                         нения. Сервис с установлением соединения.
                                                                                           Квитируемый сервис без установления со-
                                                                                                                            единения
Физический CSMA/CD.
          уровень Коаксиаль-
                                 ный кабель
                                         для однока-
                                                 нальной пе-
                                                         редачи. Ко-
                                                                аксиальный
                                                                         кабель для
                                                                                 широкопо-
                                                                                        лосной пе-
                                                                                               редачи. Не-
                                                                                                      экраниро-
                                                                                                             ванная витая
                                                                                                                       пара (10
                                                                                                                          Мбит/с) 10
                                                                                                                              Ваsе-Т
                                                                                                                                 (10 Мбит/с)
Маркерная
шина. Коак-
сиальный
кабель для
широкопо-
лосной пе-
редачи
Маркерное
кольцо. Эк-
ранированная
витая пара.
Волоконно-
оптический
кабель
1.2. ТРАДИЦИОННАЯ КОММУТАЦИЯ
Что же такое коммутатор? Согласно определению IDC, «коммутатор – это устройство, конструктив-
но выполненное в виде концентратора и действующее как высокоскоростной многопортовый мост;
встроенный механизм коммутации позволяет осуществлять сегментирование локальной сети и выде-
лять полосу пропускания конечным станциям в сети» [2].
Другими словами, коммутаторы 2-го уровня являются по сути обычными очень быстрыми много-
портовыми мостами на основе стандарта IEEE 802.1d.
Концепция работы коммутатора 2-го уровня очень проста. Рассмотрим в качестве примера функ-
ционирование узла А (рис. 1.1).
Любой кадр, отправленный узлом А и имеющий адрес получателя в узле на сегменте Бета (напри-
мер, Q), приходит в порт 1 коммутатора 2-го уровня и выходит из порта 2, чтобы быть полученным уз-
лом Q. Этот процесс называется ретрансляцией (forwarding). Говорят, что кадр ретранслирован, если он
получен одним портом коммутатора 2-го уровня и передан через другой.
Кадр, переданный узлом А и имеющий адрес получателя, который соответствует узлу В, естествен-
но, приходит и на узел В, и на коммутатор 2-го уровня. Тем не менее коммутатор 2-го уровня знает, что
узлы А и В находятся в одном сегменте, поэтому кадр не ретранслируется. Данный процесс называется
фильтрацией (filtering). Говорят, что кадр отфильтрован, если он получен одним портом коммутатора и не
ретранслирован другим.
Обратите внимание, что мы используем термин «кадр», а не «пакет». Коммутатор – это устройство
уровня 2, которое оперирует кадрами, а не пакетами как повторитель. Коммутатор работает с кадрами и
понимает адреса MAC. Повторитель работает только с пакетами, в которых содержатся кадры. Порт
коммутатора, как и узла, является обычным сетевым интерфейсом со средствами MAC. Фактически
коммутатор представляет собой узел, обладающий несколькими сетевыми интерфейсами.
Рис. 1.1. Схема сети с трёхпортовым мостом
В литературе и технических описаниях коммутаторов и некоторых сетевых устройств часто гово-
рят, что они работают (коммутируют или маршрутизируют трафик) на полной скорости канала (wire
speed). Что это значит? Предположим, в ходе тестирования выяснилось, что устройство маршрутизиру-
ет 20 потоков Ethernet на полной скорости канала. Следовательно, оно маршрутизирует пакеты с такой
же скоростью, с какой они поступали по 20 каналам Ethernet. При размере пакета 64 байт мы получаем
скорость маршрутизации около 297 тыс. пакетов в секунду.
Важно подчеркнуть, что если маршрутизатор работает на скорости канала, то бессмысленно гово-
рить о том, что он работает медленно.
В этом случае производительность маршрутизации определяется не скоростью работы устройства, а
пропускной способностью каналов связи.
Для ретрансляции кадров из одного сегмента ЛВС в другой коммутатор может использовать сле-
дующие способы коммутации:
• Cut-Through (сквозная коммутация);
• Interim Cut-Through (модифицированная сквозная коммутация);
• Store-and-Forward (накопление и ретрансляция или промежуточная буферизация);
• гибридная коммутация.
Каждый из этих способов имеет свои преимущества и недостатки.
Технология коммутации 2-го уровня обеспечивает высокую производительность, позволяет строить
достаточно сложные сети, являющиеся широковещательными доменами (областями).
1.3. КЛАССИЧЕСКАЯ МАРШРУТИЗАЦИЯ
Главное различие между маршрутизатором и коммутатором 2-го уровня состоит не в производитель-
ности, а в способе принятия решения о ретрансляции. Маршрутизаторы используют для этой цели заго-
ловок протокола, а не кадра. Как мы уже говорили ранее, разные сетевые технологии работают на различ-
ных уровнях модели OSI. Повторители являются устройствами уровня 1, мосты и коммутаторы – устрой-
ствами уровня 2, а маршрутизаторы – устройствами уровня 3.
Повторители работают с пакетами и не зависят от содержимого поля данных пакета, в котором за-
ключён кадр. Мосты и коммутаторы работают с кадрами и не зависят от содержимого поля данных кад-
ра, в котором обычно (но не всегда) заключена дейтаграмма. Маршрутизаторы работают с дейтаграм-
мами, которые иногда называются пакетами данных, или сообщениями. Работа маршрутизаторов обыч-
но не зависит от содержимого поля данных дейтаграммы, но тем не менее некоторые интеллектуальные
маршрутизаторы должны разобраться в его содержимом, прежде чем принять весьма важное решение о
ретрансляции или фильтрации.
При традиционной технологии каждый пакет обрабатывается маршрутизатором индивидуально,
при этом устройство выполняет чётко определённую последовательность операций, к тому же такие
операции, как просмотр таблицы маршрутов, формирование нового MAC-адреса, уменьшение поля TTL
и т.д., являются обязательными. Некоторые маршрутизаторы обладают дополнительными функциями,
например фильтрацией. Выполнение основных и дополнительных операций отнимает много времени. В
результате многие сетевые администраторы больших распределённых сетей со значительной нагрузкой
довольно неохотно активизируют дополнительные функции обработки пакетов на маршрутизаторах.
Традиционную схему обработки пакетов иллюстрирует рис. 1.2.
Каждый пакет обрабатывается независимо от других. Большое количество доступных функций об-
работки повышает общую функциональность изделия, но снижает его производительность.
И коммутаторы, и мосты, и маршрутизаторы соединены с сетью обычным сетевым интерфейсом.
Тем не менее маршрутизатор работает не так, как коммутатор. Каждый узел, нуждающийся в передаче
данных по маршрутизованной сети, должен участвовать в процессе, отправляя необходимые дейта-
граммы непосредственно маршрутизатору. Коммутатор же получает все кадры сети вне зависимости от
их назначения, а ретранслирует только кадры, предназначенные другим сегментам.
При отправке дейтаграммы узел помещает в поле отправителя собственный сетевой адрес, а в поле
получателя – сетевой адрес получателя. Прежде чем передать дейтаграмму, узел должен установить,
может ли он отправить её непосредственно получателю или же её нужно переслать маршрутизатору.
Узел может отправить дейтаграмму непосредственно получателю без использования маршрутизатора,
если его собственный номер сети совпадает с номером сети получателя. В случае Ethernet это означает,
что оба узла находятся в одной широковещательной области. Узел просто заполняет МАС-адрес кадра
сетевым адресом получателя. Если же номера сетей отправителя и получателя не совпадают, то пере-
дающий узел должен поместить дейтаграмму в кадр, адресованный маршрутизатору, после чего мар-
шрутизатор возьмёт на себя заботу о доставке дейтаграммы получателю.
Рис. 1.2. Традиционная схема обработки пакетов в маршрутизаторах
Большое преимущество маршрутизаторов перед коммутаторами и мостами состоит в том, что мар-
шрутизированная сеть хорошо масштабируется. Под масштабируемостью в данном случае понимается
способность маршрутизованной сети быть достаточно большой и сложной и в то же время работать
должным образом, обеспечивать нужную производительность и оставаться управляемой. Сеть с комму-
таторами (мостами) в отличие от неё масштабируется плохо.
Маршрутизованные сети могут быть исключительно сложными, намного сложнее сетей с мостами.
Колоссальной маршрутизованной сетью, которая соединяет миллионы компьютеров всего мира, явля-
ется Internet. Такие сети хорошо масштабируются именно благодаря наличию маршрутизаторов. Сети с
коммутаторами (или мостами) не масштабируются при достижении определённого размера по следую-
щим причинам:
• широковещательные кадры занимают слишком большую часть полосы пропускания;
• сеть всегда должна оставаться остовным деревом.
Коммутаторы и мосты хорошо подходят для сегментирования отдельных областей коллизий. В сети
с коммутаторами однопунктовые кадры распространяются только по тем сегментам, которые необхо-
димы для доставки кадра от отправителя к получателю. А в сети с мостами широковещательный кадр,
переданный одним узлом, должен быть получен всеми узлами. Когда размер сети с мостами возрастает,
то всё большая часть общего сетевого трафика становится широковещательной, оставляя всё меньше
места для кадров, несущих полезную информацию. Другими словами, чем больше широковещательных
кадров, тем меньше показатель использования сети. Тем самым устанавливается практический предел
размеру сети с мостами или переключателями.
Сеть с коммутаторами должна также оставаться остовным деревом. Это означает, что один комму-
татор должен быть первичным, или корневым, мостом (root bridge). Если корневой мост выходит из
строя, то оставшиеся должны восстановить остовное дерево. В больших сетях с мостами это отнимает
много времени и часто становится причиной катастрофы, поскольку сеть с мостами не может иметь ак-
тивных избыточных связей. Трудно представить, что Internet зависит от единственного устройства!
Так как маршрутизаторы не пропускают широковещательных кадров и поддерживают множествен-
ные активные связи, то именно с их помощью можно решить указанные проблемы. Подобно тому, как
мосты и переключатели используются для объединения нескольких областей коллизий, маршрутизато-
ры применяются для объединения широковещательных областей. На рис. 1.3 показано пять BD
(broadcast domain – широковещательная область, ЛВС), соединённых тремя маршрутизаторами.
Рис. 1.3. Маршрутизаторы и ЛВС
Слово FAST обозначает связь Fast Ethernet, а слово SLOW – связь Ethernet. Связи, обозначенные
словом WAN, работают ещё медленнее.
Любой узел маршрутизованной сети может взаимодействовать с любым другим, однако широкове-
щательные кадры никогда не покидают той ЛВС, где они возникли, и не используют полосы пропуска-
ния других локальных сетей. В отличие от ЛВС с коммутаторами (мостами), маршрутизованные сети
поддерживают множественные активные пути между сегментами. Маршрутизаторы осуществляют это,
всегда пересылая дейтаграмму по наилучшему пути. Определение наилучшего пути дать очень сложно.
Некоторые пути могут быть, например, быстрыми, а следовательно, предпочтительными. Тем не менее
если один из таких быстрых путей перегружен, то маршрутизатор может выбрать для дейтаграммы аль-
тернативный путь. Маршрутизаторы, запоминая топологию маршрутов, решают и проблему петель, от
которой страдают сети с коммутаторами и мостами. Один из самых существенных недостатков класси-
ческой маршрутизации – её чрезвычайно низкая производительность, что делает её малопригодной для
современных высокоскоростных сетей.
1.4. ПРОТОКОЛЫ МАРШРУТИЗАЦИИ
В пересылаемых по сетям пакетах данных содержится большой объём информации; увы, она ниче-
го не говорит о том, каким образом данный пакет должен найти свой путь в хитросплетении маршрути-
заторов, коммутаторов и других устройств в корпоративной глобальной сети. Пакету каким-то образом
следует указать путь к цели. Протоколы маршрутизации помогают пакетам найти не только верную, но
и самую короткую дорогу к станции назначения. Это экономит и время, и деньги.
Планируя глобальную сеть, связывающую пользователей, серверы и мэйнфреймы, администратору
приходится решать множество серьёзных проблем, одной из которых является проблема выбора прото-
кола маршрутизации. В настоящее время существует несколько протоколов, обеспечивающих эффек-
тивную передачу данных. Администратору сети придётся выбрать тот протокол, который наилучшим
образом соответствует потребностям его компании; главнейшим критерием выбора является размер се-
ти.
Протоколы маршрутизации определяют топологию сети и сохраняют информацию о ней в таблице
маршрутизации. Если маршрутизатор не применяет протокол маршрутизации, он хранит статические
маршруты или использует отдельный протокол на каждом интерфейсе. Обычно маршрутизаторы рабо-
тают с одним протоколом маршрутизации [2].
Таблица маршрутизации, иногда называемая базой данных маршрутизации, – это набор маршрутов,
используемых маршрутизатором в данный момент. Строки таблицы маршрутизации содержат по край-
ней мере следующую информацию:
• действительный адрес или множество действительных адресов в сети;
• информацию, вычисленную протоколом маршрутизации или необходимую ему;
• информацию, необходимую для того, чтобы переслать сообщение на один маршрутизатор ближе
к получателю.
Информация о маршрутизации содержит метрику, т.е. меру времени или расстояния, и несколько
отметок о времени. Информация о пересылке включает в себя данные о выходном интерфейсе и адрес
следующей системы по пути. Обычно маршрутизаторы хранят данные о нескольких возможных следую-
щих транзитных маршрутизаторах в одной строке таблицы.
Протоколы маршрутизации выполняют две важнейшие функции.
Во-первых, с их помощью определяется оптимальный путь передачи пакета по сети. Обычно изби-
рается путь, обеспечивающий минимальное время доставки при максимальной надёжности. Как правило,
это путь с минимальным числом транзитных узлов; передача данных в обход загруженных участков (с
целью избежания заторов) – исключение из этого правила.
Протокол маршрутизации предполагает постоянный сбор информации о состоянии маршрутов и
обновление таблиц маршрутизации при изменении топологии сети вследствие отказов или перегрузок.
Таким образом, таблицы маршрутизации всегда содержат точную информацию о топологии сети.
Во-вторых, функцией протоколов маршрутизации является передача пакетов по сети. Получая оче-
редной пакет, маршрутизатор считывает адрес назначения из заголовка пакета и определяет, в каком
направлении (через какой узел) следует осуществить дальнейшую передачу пакета. Для принятия тако-
го решения используется информация из таблицы маршрутизации.
Протокол маршрутизации может работать только тогда, когда формат пакетов соответствует одно-
му из маршрутизируемых протоколов (routable protocol) – не путать с протоколами маршрутизации
(routing protocols). Примеры маршрутизируемых протоколов – IP, IPX, Xerox Network System. Маршру-
тизируемые протоколы задают формат пакетов, в которые данные упаковываются для передачи по сети,
а протоколы маршрутизации обеспечивают передачу этих пакетов, определяя путь их следования по ад-
ресам назначения, приведённым в полях заголовка.
Планируя сеть, следует использовать только один стандартный маршрутизируемый протокол. Не-
которые маршрутизаторы могут работать с несколькими протоколами, однако применение разных про-
токолов в одной и той же сети снижает её производительность и усложняет работу администраторов
сети.
Например, такие протоколы, как NetBEUI или LAT, являются немаршрутизируемыми и не способ-
ны обеспечивать функции сетевого уровня. Конечно, данные в формате NetBEUI или LAT можно пере-
сылать по глобальной сети, но для этого надо либо инкапсулировать их с использованием маршрутизи-
руемого протокола (например, IP), либо организовать мост между маршрутизаторами. В последнем
случае дорогостоящие ресурсы маршрутизатора применяются для организации мостового соединения,
что снижает общую производительность сети. По-видимому, наилучшим выходом из положения оказы-
вается IP-инкапсулирование, однако время передачи данных возрастает – на сей раз из-за увеличения
накладных расходов. Следовательно, лучше всего вообще отказаться от использования немаршрутизи-
руемых протоколов.
Протоколы, используемые при создании таблицы маршрутизации, можно разделить на три катего-
рии:
• протоколы длины вектора расстояния;
• протоколы состояния канала;
• протоколы политики маршрутизации.
Классификация протоколов маршрутизации показана на рис. 1.4.
Протоколы длины вектора – простейший и наиболее распространённый тип протоколов маршрути-
зации. Большинство используемых сегодня протоколов этого типа ведёт свое начало от протокола
Routing Information Protocol компании Xerox (иногда они даже так и называются). Протоколы данного
класса включают IP RIP, IPX RIP, протокол управления таблицей маршрутизации AppleTalk RTMP и
Cisco Interior Gateway Routing Protocol.
Рис. 1.4. Классификация протоколов маршрутизации
Своё название этот тип протоколов получил от способа обмена информацией. Периодически каж-
дый маршрутизатор копирует адреса получателей и метрику из своей таблицы маршрутизации и поме-
щает эту информацию в рассылаемые соседям сообщения об обновлении. Соседние маршрутизаторы
сверяют полученные данные со своими собственными таблицами маршрутизации и вносят необходи-
мые изменения.
Этот алгоритм прост и, как кажется на первый взгляд, надёжен. К сожалению, он работает наилуч-
шим образом в небольших сетях при (желательно полном) отсутствии избыточности. Крупные сети не
могут обойтись без периодического обмена сообщениями для описания сети, однако большинство из
них избыточны. По этой причине в сложных сетях возникают проблемы при выходе линий связи из
строя, так как несуществующие маршруты могут оставаться в таблице маршрутизации в течение дли-
тельного периода времени. Трафик, направленный по такому маршруту, не достигнет своего адресата.
Эвристически данная проблема решаема, но ни одно из таких решений не является детерминистским.
Подобные проблемы могут быть решены усовершенствованным алгоритмом, который называется
алгоритмом диффузионного обновления (DUAL). При этом маршрутизаторы используют алгоритм дли-
ны вектора для составления карты путей между ними и DUAL для широковещательного объявления об
обслуживаемых ими локальных сетях. Информация об изменениях в топологии также рассылается по
всей сети. Примером такого усовершенствованного протокола может служить Cisco Enhanced IGRP.
Вторую категорию протоколов обслуживания среды составляют протоколы состояния канала. Впер-
вые предложенные в 1970 г. в статье Эдсгера Дейкстры, протоколы состояния канала сложнее, чем про-
токолы длины вектора. Взамен они предлагают детерминистское решение типичных для их предшест-
венников проблем. Вместо рассылки соседям содержимого своих таблиц маршрутизации каждый мар-
шрутизатор осуществляет широковещательную рассылку списка маршрутизаторов, с которыми он име-
ет непосредственную связь, и напрямую подключённых к нему локальных сетей. Эта информация о со-
стоянии канала рассылается в специальных объявлениях. За исключением широковещания периодиче-
ских сообщений о своём присутствии в сети, маршрутизатор рассылает объявления о состоянии каналов
только в случае изменения информации о них или по истечении заданного периода времени.
Недостатком таких протоколов состояния каналов, как OSPF, IS-IS и NLSP, является их сложность
и высокие требования к памяти. Они трудны в реализации и нуждаются в значительном объёме памяти
для хранения объявлений о состоянии каналов. При всем своём превосходстве над ранними протокола-
ми длины вектора их реальное преимущество перед DUAL далеко не очевидно.
К третьей категории протоколов по обслуживанию среды относятся протоколы правил маршрутиза-
ции. Если протоколы маршрутизации на базе алгоритмов длины вектора и состояния канала решают зада-
чу наиболее эффективной доставки сообщения получателю, то задача маршрутизации – наиболее эффек-
тивная доставка сообщения получателю по разрешённым путям. Такие протоколы, как BGP (Border
Gateway Protocol) или IDRP (Interdomain Routing Protocol), позволяют операторам Internet получать ин-
формацию о маршрутизации от соседних операторов на основе контрактов или других нетехнических
критериев. Алгоритмы, используемые для политики маршрутизации, опираются на алгоритмы длины век-
тора, но информация о метрике и пути базируется на списке операторов магистрали.
Одно из следствий применения протоколов такого рода заключается в том, что пути сообщения и
ответа на него через Internet, вообще говоря, различны. В корпоративных же сетях Intranet, не исполь-
зующих политику маршрутизации, эти пути, как правило, совпадают.
Рассмотрим более подробно наиболее популярные протоколы маршрутизации: протокол маршрут-
ной информации (Routing Information Protocol, RIP), протокол предпочтения кратчайшего пути (Open
Shortest Path First, OSPF), «транзитная система – транзитная система» (Intermediate System-to-
Intermediate System, IS-IS). У каждого из перечисленных протоколов свои достоинства, однако админи-
стратору сети придётся выбрать из них какой-нибудь один – тот, что более всего подходит для нужд его
сети.
1.5. ПРОТОКОЛ МАРШРУТИЗАЦИИ RIP
Протокол RIP очень популярен среди тех, кто имеет отношение к Internet. Это протокол с использо-
ванием алгоритма длины вектора, где маршрут определяется исходя из расстояния (числа транзитных уз-
лов) на пути следования данных до точки назначения. RIP известен довольно давно – впервые он появил-
ся в 1982 г. как часть набора протоколов TCP/IP в версии UNIX, предложенной Berkley Software
Distribution. В настоящее время RIP служит основой для многих других протоколов маршрутизации, на-
пример для протокола маршрутизации AppleTalk. Другие компании (Novell и Banyan, кстати говоря, в
их числе) также разработали протоколы на основе RIP. По существу, компании Microsoft удалось рас-
ширить возможности Windows NT для работы в глобальных сетях именно за счёт поддержки маршрути-
зации пакетов на основе RIP.
В маршрутизаторе, работающем с RIP, вся информация хранится в виде таблицы маршрутизации,
содержащей следующие поля:
• пункт назначения (в нём перечислены все конечные, в смысле адреса, локальные сети);
• следующий транзитный узел (определяет, на какой порт должен быть переслан пакет для от-
правки на следующий маршрутизатор);
• расстояние (число транзитных узлов, необходимых для того, чтобы достичь пункта назначения).
Таблица маршрутизации RIP содержит информацию о наилучшем пути к месту назначения. После
получения новых данных от другого узла старая информация стирается и на её место записывается но-
вая.
Выбор оптимального маршрута в RIP обеспечивается рассылкой соответствующих сообщений при
изменении топологии сети. Например, если маршрутизатор выявляет отказ в одном из каналов связи, он
вносит изменения в свою таблицу маршрутизации, а затем рассылает копии новой таблицы всем своим
соседям. Соседи соответственно вносят изменения в свои таблицы и рассылают их копии своим соседям
и т.д. В результате через короткое время необходимая информация достигает всех маршрутизаторов.
В соответствии с протоколом RIP каждый маршрутизатор автоматически посылает (примерно раз в
30 секунд) своим соседям пакет типа «ответ» со своей таблицей маршрутизации. Для передачи больших
таблиц маршрутизации требуется несколько пакетов. Помимо этого в протоколе RIP предусмотрено,
чтобы каждый маршрутизатор следил за тем, сколько времени прошло с момента получения последнего
ответа; если ответ от кого-нибудь из соседей не поступает в течение длительного времени (обычно 90
секунд), соответствующий путь удаляется из таблицы маршрутизации данного устройства, а все соседи
извещаются об этом событии.
В протоколе RIP предусмотрен ряд мер, призванных повысить стабильность работы протокола.
Среди них: лимит числа промежуточных узлов (hop-count limit), временный отказ от приёма информа-
ции (hold-down) и расщепление горизонта (split horizon). Лимит на число промежуточных узлов позво-
ляет предотвратить зацикливание пакета при пересылке. Данный лимит в RIP равен 15, откуда следует,
что этот протокол годится только для не слишком больших сетей. (Во второй версии протокола RIP это
ограничение снято, и количество промежуточных узлов может достигать 255.)
Основным недостатком RIP является не слишком высокая функциональность: он не годится для
больших сетей и не может эффективно определять альтернативные маршруты.
1.6. ПРОТОКОЛ МАРШРУТИЗАЦИИ OSPF
Для замены RIP Группа инженерной поддержки (IETF) разработала протокол OSPF; предполагает-
ся, что новый протокол обеспечит лучшую поддержку TCP/IP. Протокол OSPF, основанный на алго-
ритме предпочтения кратчайшего пути, был разработан Болтом, Беранеком и Ньюменом (Кембридж,
шт. Массачусетс) для сети ARPANet в 1978 г. Благодаря своей функциональности OSPF быстро приоб-
ретает черты отраслевого стандарта. Данный протокол обеспечивает поддержку нужд крупных вычис-
лительных сетей: обслуживание запросов на специальные услуги, работу с несколькими протоколами
сетевого уровня, а также аутентификацию. OSPF способен осуществлять эффективную маршрутизацию
пакетов с учётом изменений топологии сети, соответствующим образом меняя путь прохождения сете-
вого трафика. Кроме того, накладные расходы на пересылку данных об изменении топологии в OSPF
меньше: рассылке подлежит не таблица маршрутизации в целом, а только информация об изменениях.
OSPF иногда называют протоколом на основе распределённых баз данных, хотя правильнее его назы-
вать протоколом маршрутизации на основе данных о состоянии каналов связи (link state routing
protocol). Термин «link state routing protocol» означает, что в OSPF поддерживается топологическая база
данных, где хранится информация о состоянии каналов связи в автономной сети. Данная информация
используется для вычисления кратчайшего пути передачи пакета.
В настоящее время многие компании выпускают маршрутизаторы, поддерживающие OSPF.
Протокол OSPF предусматривает, что новый маршрутизатор, начав работу в сети, рассылает «при-
ветствия» всем своим соседям. Такие же сообщения периодически рассылают все маршрутизаторы,
подтверждая тем самым свою работоспособность. В итоге новый маршрутизатор очень быстро «знако-
мится» со всеми своими соседями.
OSPF работает с запросами верхнего уровня [Type of Service (ToS) или Quality of Service (QoS)], со-
держащимися в заголовке пакетов IP. Вычисление кратчайшего пути в OSPF осуществляется на основе
информации, содержащейся в ToS. Всего насчитывается восемь комбинаций битов ToS, описывающих
все возможные сочетания уровней задержки, пропускной способности и надёжности связи. OSPF в со-
стоянии подобрать путь таким образом, чтобы удовлетворить любую из этих восьми комбинаций. На-
пример, если в ToS указано, что данный пакет должен быть передан с малой задержкой, высокой пропу-
скной способностью и малой надёжностью, то OSPF-маршрутизатор подберёт путь передачи, как мож-
но лучше отвечающий всем этим требованиям. OSPF – открытый стандарт, его описание приводится в
документе RFC 1427.
1.7. КОММУТАЦИЯ ТРЕТЬЕГО УРОВНЯ
В настоящее время под термином «коммуникация» понимают иногда совершенно разные техноло-
гии и устройства, большинство которых появились на рынке совсем недавно. Возникновение этого тер-
мина вполне объяснимо. Для многих коммутация switching ассоциируется с высокой производительно-
стью и относительно низкой ценой, т.е. с характеристиками, свойственными традиционным коммутато-
рам, работающим на уровне 2, канальном. На уровне 3, сетевом, работают традиционные маршрутиза-
торы, которые выполняют функции, необходимые для эффективной работы сколько-нибудь крупных
сетей.
Однако сочетание слов «коммутация» (switching) и «уровень 3» (layer 3) является не совсем удачным.
По-видимому, термин обязан своим появлением сотрудникам отделов маркетинга фирм-
производителей, но никак не техническим специалистам. Поэтому относиться к нему надо как к терми-
ну, описывающему некое множество технологий и устройств, объединённых скорее общей целью, чем
принципами работы.
Тогда, в конце 1980-х, сети строились таким образом, что рабочие станции пользователей и обслу-
живающие их серверы находились в одной подсети (сегменте). В этих условиях большая часть трафика
передавалась внутри подсетей и лишь малая его часть – между подсетями. Так и возникло хорошо из-
вестное «правило 80/20», т.е. 80 % трафика локализовано внутри подсетей и только 20 % пересекает их
границу. С этими 20 % спокойно справлялись маршрутизаторы, связывающие подсети между собой.
Со временем значение ЛВС для успешной деятельности предприятий росло, а следовательно, увели-
чивался и объём передаваемого по ним трафика. Возникла необходимость в повышении производитель-
ности сетей. Одним из способов достижения этого стала их микросегментация. Она позволяла уменьшить
число пользователей на один сегмент и снизить объём широковещательного трафика, а значит, повысить
производительность сети.
Первоначально для микросегментации использовались маршрутизаторы, которые, вообще говоря, не
очень приспособлены для этой цели. Решения на их основе были достаточно дорогостоящими и отлича-
лись большой временной задержкой и невысокой пропускной способностью. Более подходящими устрой-
ствами для микросегментации сетей стали коммутаторы. Благодаря относительно низкой стоимости, вы-
сокой производительности и простоте в использовании они быстро завоевали популярность.
Таким образом, сети стали строить на базе коммутаторов и маршрутизаторов. Первые обеспечивали
высокоскоростную пересылку трафика между сегментами, входящими в одну подсеть, а вторые переда-
вали данные между подсетями, ограничивали распространение широковещательного трафика, решали
задачи безопасности и т.д.
Однако централизация серверов, внедрение технологий интрасетей, широкое применение приложе-
ний мультимедиа и т.п. не только существенно повышают объём трафика в сетях, но и изменяют карти-
ну его распространения. С внедрением интрасетей о «правиле 80/20» можно забыть, так как картина
распространения трафика становится абсолютно непредсказуемой: 80/20, 20/80, 50/50, ... Всё это предъ-
являет новые требования к средствам межсетевого взаимодействия, причём традиционные маршрутиза-
торы зачастую уже не отвечают этим требованиям. Необходимо существенно ускорить пересылку тра-
фика между подсетями (на 3-м уровне) и снизить задержку при такой пересылке. Кроме того, при ис-
пользовании центрального маршрутизатора значительно увеличивается нагрузка на сетевую магист-
раль, поскольку весь трафик между подсетями должен передаваться через маршрутизатор, а следова-
тельно, проходить через магистраль. Отсюда вытекает ещё одно требование: сделать маршрутизацию
распределённой, чтобы в процессе маршрутизации участвовали устройства (коммутаторы), находящие-
ся ближе к рабочим станциям.
Производители сетевого оборудования быстро среагировали на новые требования и разработали со-
ответствующие технологии и продукты, очень часто объединяемые общим термином.
Уровень 3 – это сокращённое обозначение сетевого уровня в эталонной модели взаимодействия от-
крытых систем (OSI). На этом уровне маршрутизаторы выполняют свои функции исходя из адресной
информации, используемой в таких сетевых протоколах, как IP и IPX.
Коммутаторы действуют на 2-м уровне (канальном), передавая пакеты на базе физической адреса-
ции, применяемой в среде передачи данных сети. Вводя в свои изделия определённую информацию о 3-
м уровне, изготовители коммутаторов создают коммутаторы уровня 3.
На первый взгляд всё выглядит так, будто каждый изготовитель подходит к этому техническому
принципу по-разному. Но если обратиться к составным элементам любой конкретной конструкции, где
реализуется этот принцип, выявятся три метода: маршрутизирующая коммутация, коммутация потоков
и коммутирующая маршрутизация (табл. 1.2).
Архитек- Описание Достоинства Недостатки
       тура 
1.2. Сопоставление архитектур третьего уровня
Расчёт маршрута выполняется на 3- Хорошо знакомые Возможна потеря
                           м уровне аппаратными или про- функции; совмести- некоторых функ-
                                                   граммными средствами в зависи- мость с имеющейся ций маршрутиза-
                                                                             мости от вида реализации, а паке- сетевой аппаратурой ции. Маршрути-
                                                                                                       ты обрабатываются аппаратными зация аппаратны-
                                                                                                                                  средствами коммутации ми средствами
                                                                                                                                                      2-го уровня. При пересылке ин- может затруднить
                                                                                                                                                                            формации о маршрутизации мар- модернизацию
                                                                                                                                                                                                     шрутизаторы работают по стан- 
                                                                                                                                                                                                                              дартным протоколам маршрутиза- 
                                                                                                                                                                                                                                                         ции 
Наилучшее при-
менение
Комплекс зданий
кампуса и маги-
страль ISP
Коммутация
потоков
До обнаружения потока расчёт После обнаружения Архитектура – Магистраль ISP и
                         маршрута потоков линия дан- индивидуальные региональная
                                 и обработка пакетов производятся ных освобождается разработки раз- вычислительная
                                                              на от сложных опера- личных фирм. сеть
                                                                3-м уровне. Далее поток пересы- ций маршрутизации Продолжает осу- 
                                                                                       лается ществляться 
                                                                                             на 2-м уровне через сеть. При пе- маршрутизация 
                                                                                                                    ресылке информации в потоках непотокового 
                                                                                                                                             коммутаторы потоков действуют трафика 
                                                                                                                                                                        по протоколам управления пото- 
                                                                                                                                                                                                  ками 
Тэговая коммутация. Расчёт мар- Масштабируемость Архитектура – Предприятие,
                          шрута применительно к индивидуальные магистраль ISP и
                               и обработка пакетов производятся большим сетям. разработки раз- региональная
                                                            на Усиливается дейст- личных фирм. вычислительная
                                                              3-м уровне, но пакеты дополняют- вие существующей Совместимость сеть
                                                                                      ся тэгами, которые содержат ин- аппаратуры маршру- под вопросом 
                                                                                                               формацию о пересылке пакетов, тизации (тэговая 
                                                                                                                                        поэтому для прохождения пакетов коммутация). 
                                                                                                                                                                    через сеть требуется меньший Уменьшается объём 
                                                                                                                                                                                             объём обработки данных на операций маршрути- 
                                                                                                                                                                                                                   3-м уровне зации в канале дан- 
                                                                                                                                                                                                                                                    ных 
1.8. МАРШРУТИЗИРУЮЩАЯ КОММУТАЦИЯ
Маршрутизирующий коммутатор действует почти так же, как обычный маршрутизатор, в котором
для выяснения маршрута каждого пакета используется информация, расположенная на 3-м уровне.
Уменьшение стоимости и повышение производительности маршрутизирующего коммутатора достига-
ются благодаря сокращению числа выполняемых им функций и максимально возможному перемеще-
нию логических средств в интегральные схемы. В чисто маршрутизирующем коммутаторе обработка
информации для выбора маршрута тесно объединена с процессом коммутации и пакеты во время обра-
ботки остаются в пределах коммутирующего механизма.
Маршрутизирующие коммутаторы покажутся администраторам сетей хорошо знакомыми устрой-
ствами, поскольку функционируют они практически так же, как и традиционные маршрутизаторы, и
работают в соответствии с обычными протоколами маршрутизации. Однако необходимо иметь в виду
весь комплекс их функций, поскольку некоторыми из них нередко жертвуют в пользу быстродействия и
снижения цены. Чаще других исключаются функции, предусматривающие работу с протоколами, отли-
чающимися от IP (такими как AppleTalk и IPX), и со сложными протоколами маршрутизации (подоб-
ными IP Multicast и OSPF), а также со средствами защиты (с применением шифрации и «брандмау-
эров»).
Системы с маршрутизирующей коммутацией анонсированы компаниями Lucent Tecnologies, Nortel
Networks, Cisco, Extreme Networks и др. В каждом из изделий для снижения нагрузки маршрутизаторов
существующих сетей применяется метод ответвления (drop-in) трафика. Такие коммутаторы в боль-
шинстве случаев совместимы с имеющимся оборудованием. Маршрутизирующие коммутаторы предна-
значены прежде всего для комплекса зданий, хотя изделие по крайней мере одного поставщика – GRF
IP Switch фирмы Ascend – рассчитано на поставщиков услуг Интернета ISP (Internet Service Provider) и
коммерческие службы связи.
Ряд фирм вводит также определённые новшества, облегчающие часть административных функций,
связанных с управлением маршрутизаторами в выпускаемых ими маршрутизирующих коммутаторах.
Так, например, SwitchNode фирмы Bay Networks может действовать в режиме автообучения IP
Autolearn, в котором коммутатор «узнает» топологию сети, контролируя трафик по протоколу опреде-
ления адресов Address Resolution Protocol (ARP). Этот протокол используется в сети для согласования
адресов 3-го и 2-го уровней. Таким образом, SwitchNode можно прямо ставить в сеть без настройки его
конфигурации на протокол маршрутизации и изменения установок любых уже имеющихся маршрути-
заторов.
1.9. КОММУТАЦИЯ ПОТОКОВ
Основной принцип коммутации потоков состоит в идентификации долговременных потоков дан-
ных между двумя IP-узлами. В ответ на обнаружение потока (программными средствами 3-го уровня)
между концевыми точками устанавливается коммутируемое соединение, после чего поток передаётся
аппаратными средствами 2-го уровня. В качестве примеров типов трафика, идентифицируемых как по-
токи, можно назвать пересылку файлов и передачу Web-графики. Трафик, не удовлетворяющий крите-
риям потока, направляется обычным образом. Концепция коммутации потоков естественным образом
сочетается с режимами ATM или ретрансляции кадров (frame relay), в которых потоки могут отобра-
жаться виртуальными цепями или маршрутами. Коммутация потоков рассчитана на поставщиков услуг
Интернета и магистральные линии предприятий.
Решающую роль в этой области играют две организации: ATM Forum и Ipsilon. ATM Forum недавно
утвердила стандарт коммутации потоков применительно к режиму ATM под названием Multiprotocol
over ATM (MPOA), но этот стандарт разрабатывался очень долго. Ipsilon воспользовалась задержкой с
выпуском MPOA и выдвинула собственный вариант коммутации потоков под названием IP-коммутации
(IP switching). Она разработала серию IP-коммутаторов для коммутации потоков информации, соответ-
ствующих протоколу управления потоками Ipsilon Flow Management Protocol (IFMP). Ipsilon призывает
поддержать свою платформу и убеждает другие фирмы предусматривать в своих устройствах коммута-
ции и маршрутизации возможность работы по протоколу IFMP.
Технология Secure Fast Virtual Networking смело может быть отнесена к классу технологий комму-
тации потоков, ориентированных на соединение и установление виртуального канала (SVC). Входящий
поток пакетов подвергается анализу на предмет выявления пар МАС-адресов. Для пар адресов форми-
руется виртуальный путь. Далее, коммутатор анализирует пары МАС-адресов входящих пакетов и при
наличии виртуального пути продвигает их по нему (сквозная коммутация на уровне 2). Таким образом,
маршрутизации (вычислению виртуального пути) подвергается только первый пакет, а остальные паке-
ты коммутируются. Обработка пакетов по такой схеме показана на рис. 1.5.
Все широковещательные и групповые пакеты перехватываются и с использованием службы
SmartSwitch ARP отправляются только адресатам, которым они необходимы.
Достоинства:
• малое время ожидания;
• высокая производительность;
• дешёвая сегментация сети;
• совместимость с маршрутизаторами;
• возможность автоматической конфигурации сети с использованием межкоммутаторных связей.
Рис. 1.5. Обработка пакетов по технологии Secure Fast Virtual Networking
фирмы Cabletron
Недостатки:
• фирменное решение;
• необходимость изменения настроек на рабочих станциях сети (указание маршрутизатора по
умолчанию);
• для достижения максимального эффекта требуется полный переход на архитектуру SecureFast
Virtual Networking (см. выше).
Такую маршрутизацию ни в коем случае нельзя считать полноценной. Она предназначена для при-
менения в ограниченных сетях и получила название «Виртуальная маршрутизация». Тем не менее ком-
мутаторы серий Smart Switch 2000/6000/9000, использующие данную технологию, показывают очень
хорошие результаты при обработке больших объёмов сетевого трафика.
1.10. КОММУТИРУЮЩАЯ МАРШРУТИЗАЦИЯ
Последний, и самый трудный для практического воплощения, метод связан с путями сокращения
дополнительных (избыточных) операций при маршрутизации, в результате чего коммутаторы получают
возможность выполнять функции передачи на 3-м уровне без сложных расчётов маршрутов.
Хорошим примером коммутирующей маршрутизации служит архитектура Tag Switching (тэговой
коммутации), разработанная фирмой Cisco. Для реализации метода тэговой коммутации программное
обеспечение маршрутизаторов фирмы Cisco модернизируется, и в зависимости от положения в сети они
становятся либо концевыми тэговыми маршрутизаторами, либо тэговыми коммутаторами. Концевой
тэговый маршрутизатор – это чистый маршрутизатор, который располагается на конце сети и дополняет
поступающие в сеть пакеты адресной информацией в форме идентификаторов фиксированной длины,
называемых тэгами. Тэговый коммутатор – это маршрутизатор или коммутатор, который расположен во
внутренней сети и по тэгам определяет подходящий маршрут через сеть для каждого пакета. Благодаря
наличию тэгов уменьшается сложность декодирования пакетов и преобразования таблиц при пересылке
пакетов. Фирмой Cisco разработан также протокол распространения тэгов Tag Distribution Protocol
(TDP), по которому осуществляется распределение тэговой информации тэговыми маршрутизаторами и
коммутаторами. Cisco представила метод тэговой коммутации Рабочей группе инженеров Internet
(Internet Engineering Task Force – IETF) для выработки стандарта.
Методы многопротокольной коммутации – Multiprotocol Switched Services (MSS) фирмы IBM и
FastIP компании 3Com – основаны на маршрутизации по «протоколу выделения следующего скачка»
(Next Hop Resolution Protocol – NHRP). Согласно этому протоколу клиент сети запрашивает маршрут у
выделенного маршрутного сервера. Если маршрутный сервер может установить местоположение пунк-
та назначения, то между концевыми точками устанавливается коммутируемое соединение. Благодаря
этому маршрутизатор, в сущности, устраняется с пути передачи данных. Для реализации протокола
NHRP на сетевом ПК MSS нуждается в дополнительных программных средствах, а FastIP требует, что-
бы ПК был оснащён сетевым адаптером фирмы 3Com.
Разработка большинства методов коммутирующей маршрутизации проводилась для ликвидации
«узких мест» сложных IP-сетей, подобных сетям, используемым поставщиками услуг в Интернете и
коммерческими службами связи. Пытаясь реализовать коммутируемую маршрутизацию в масштабах
всего предприятия, а не только для поставщиков услуг Интернета или региональной вычислительной
сети (РВС), фирмы Lucent, IBM и 3Com согласились на совместное использование методов коммутации
на 3-м уровне.
Заслуживает внимания и технология IP-коммутации компании Ipsilon Networks IP Switching. Схема
Ipsilon относится к классу коммутации потоков и работает следующим образом. IP-коммутатор анали-
зирует поступающие данные и, если посылка короткая (например, запрос к серверу), обрабатывает па-
кеты точно так же, как маршрутизатор. Отличие проявляется, когда коммутатор идентифицирует поток,
т.е. длительную последовательность пакетов от конкретного отправителя конкретному получателю. В
этом случае коммутатор посредством анализа заголовка пакета и сравнения этого заголовка с установ-
ленными пользователем правилами определяет, что такая последовательность является потоком. После
этого он решает, что наилучший способ обработки пакета состоит в его коммутации. Какой трафик со-
ставляет поток, а какой нет, можно увидеть из табл. 1.3.
1.3. Различные виды трафика
Потокоориентированный
трафик
Короткоживущий трафик
Данные ftp Запрос к DNS
Данные telnet Данные SMTP
Данные HTTP Network Timing (NTP)
Загрузка изображений из POP
                     Web 
Мультимедиа аудио/видео Запросы SNMP
Специалисты утверждают, что продукты Ipsilon способны занять место традиционных маршрутиза-
торов от Cisco Systems и других поставщиков, так как Ipsilon закрывает не только маршрутизацию, но и
IP. Если спросить, какой протокол наиболее важен для компании, то большинство респондентов навер-
няка ответят, что IP. Маршрутизация не исключается, но появление Интернета и Интранета ещё более
углубляет наметившуюся тенденцию к унификации. Если 30 % трафика в сети представляют собой па-
кеты IP, то тогда коммутацию можно и нужно рассматривать в качестве одного из вариантов.
Наряду с поддержкой стандартных протоколов маршрутизации RIP, OSPF, BGR и CIP, Ipsilon раз-
работала собственный протокол, получивший название «Протокол управления потоком» (Ipsilon Flow
Management Protocol – IFMP). Благодаря этому протоколу несколько коммутаторов IP могут взаимодей-
ствовать друг с другом и с хостами. Продукты, поддерживающие IFMP, среди которых маршрутизаторы,
коммутаторы и концентраторы нескольких поставщиков, могут идентифицировать потоки пакетов. Пото-
ки отождествляются с высокоcкоростными виртуальными соединениями ATM, а не маршрутизируются
пакет за пакетом через сеть. IFMP получил также поддержку ещё нескольких поставщиков, таких как
3Com и IBM.
Ipsilon опубликовала также «Общий протокол управления коммутатором» (General Switch
Management Protocol – GSMP) для управления оборудованием ATM. Оба протокола – IFMP и GSMP –
имеют статус RFC. Кроме того, информацию о них можно получить на узле www.ipsilon.com.
Несмотря на все преимущества, решение Ipsilon также не избежало критики. В общих чертах она
сводится к тому, что IP отдаётся предпочтение среди других протоколов. Хотя многие компании ис-
пользуют IP как в глобальных, так и в локальных сетях, во многих сетях по-прежнему преобладают дру-
гие протоколы, такие, например, как IPX компании Novell. В ответ на эту критику Ipsilon объявила, что
намерена поддерживать IPX.
IP-коммутация обеспечивает также несколько уровней качества услуг (QoS). Поскольку IP-
коммутаторы сами определяют характеристики потока для передачи трафика наиболее эффективным
образом, они могут также принимать решение о требуемом QoS в зависимости от определения потока и
гарантировать его с помощью RSVP или аппаратного обеспечения коммутатора. IP-коммутаторы спо-
собны также поддерживать многоадресную рассылку IP-пакетов с помощью процессов классификации
потоков.
Стратегии миграции для компаний, заинтересованных в IP-коммутации, не представляют собой чего-
либо сверхсложного. Если вы знаете, что такое IP-маршрутизация, то вам известно и то, что такое IP-
коммутация. Приобретать новые знания или вкладывать средства в обучение не надо. Предлагается начать с
пилотной программы, когда IP-коммутаторы работали бы бок о бок с имеющимися маршрутизаторами, а
затем постепенно добавлять коммутаторы. Не требуется, чтобы потребитель пересмотрел архитектуру сво-
ей сети (а ведь эта задача отнюдь не тривиальная). Люди хотят, чтобы медленный трафик стал быстрее, и
это можно сделать с помощью IP-коммутации.
1.11. КОММУТАЦИЯ ЧЕТВЁРТОГО УРОВНЯ
В последнее время производители сетевого оборудования много говорят о «коммутации 4-го уров-
ня». Что же это такое – новейшая технология или маркетинговая «приманка»? Всего понемногу.
Давайте попробуем разобраться, в чем тут дело. Вспомним, что на уровне 4 модели OSI в качестве
основы используются номера портов протоколов TCP и User Datagram Protocol (UDP) стека Internet
Protocol. Протокол TCP относится к протоколам транспортного уровня, а UDP описывает, как сообщения
доходят до приложения в компьютере адресата. На уровне 4 каждый пакет содержит информацию, кото-
рая может использоваться для того, чтобы идентифицировать то приложение, что генерировало пакет.
Это возможно потому, что TCP- и UDP-заголовки включают «номера портов», которые идентифициру-
ют, какие протоколы прикладного уровня включены в каждый пакет. При этом различные приложения
более высоких уровней, используя сервис транспортного уровня, обращаются к различным номерам
портов (рис. 1.6).
Прикладной
уровень
POP 3
Транспортный
уровень
Порт 110
TCP
HTTP Порт 80
NFS Порт 25
Telnet Порт ...
ICMP(Internet
Control Message
Protocol)
Порт ...
SMTP 
Сетевой
уровень
IP
UDP
FTP
Порт ...
ARP (Address
Resolution
Protocol)
Рис. 1.6. Взаимодействие между уровнями стека прокотолов TCP/IP
Информация о номере порта заголовка уровня 4 в сочетании с информацией об источнике/приемнике
заголовка уровня 3 может использоваться для обеспечения действительно детального управления. Инди-
видуальные потоки каждого приложения могут быть проконтролированы между клиентом и сервером, а
если коммутирующий маршрутизатор является полнофункциональным, то все они могут быть обработаны
на проводной скорости.
Читая заголовки на уровне 4, коммутатор 4-го уровня способен делать различия между приложе-
ниями, принимая решения о маршрутизации. Приложениям можно назначить различные приоритеты
маршрутизации, гарантируя разное качество обслуживания (QoS), или они могут иметь фильтры защи-
ты, тем самым обеспечивая управление уровнем приложения поверх сетевого. При этом необходимо
помнить, что никакой информации о маршрутизации «в чистом виде» на уровне 4 не содержится. Таким
образом, под коммутацией уровня 4 следует понимать использование параметров TCP-сессий протоко-
лов HTTP, NFS, Telnet, FTP, SMTP, POP 3 и т.д. для принятия решений о политике коммутации (при-
оритезации). По мнению обозревателей, такая схема обеспечивает более оптимальный контроль и даёт
возможность назначать приоритеты передачам в соответствии с типами приложений. Коммутаторы
уровня 2 передают данные от порта к порту, учитывая лишь адрес назначения каждого пакета, как и
коммутаторы уровня 3, выполняющие маршрутизацию на скорости, близкой к максимальной. Следова-
тельно, коммутация уровня 4 является всего лишь расширением функциональности коммутаторов
уровня 3.
Для представления функциональности различного рода устройств на рис. 1.7 даётся сравнение
функциональности коммутаторов 2-го уровня, коммутаторов 3-го уровня и коммутирующего маршрути-
затора (на примере Smart Switch Router производства компании Cabletron Systems – лидера в данном
классе продуктов).
Коммутирующий маршрутизатор можно одновременно использовать как коммутатор, работающий по
нескольким интерфейсам только на уровне 2 и представляющий на этом уровне поддержку стандартов
802.1d/p/Q, port based VLANs, Flow Switching, фильтрацию фреймов L2 и т.д.; как маршрутизатор, рабо-
тающий на 3-м уровне по протоколам IP/IPX и поддерживающий port based VLANs, а также все сервисы
этого уровня: DNS, L3 QoS, ACLs, Proxy ARP и т.д., и подключать функции 4-го уровня, такие как функции
безопасности, качества сервиса, RMON2, выполняющиеся на высочайшей скорости.
По словам Джона Армстронга, аналитика компании Dataquest, маршрутизаторы давно выполняют
такие же функции, используя фильтры. Коммутатор уровня 4 – это на самом деле коммутатор, рабо-
тающий на уровне 3 модели OSI, но оснащённый дополнительными программными средствами, типич-
ными для маршрутизаторов, – поясняет он. – В действительности коммутация на уровне 4 осуществля-
ется не на транспортном уровне. Поэтому, раз они работают на уровне 3 и передают пакеты на сетевом,
их уместнее называть устройствами уровня 3.
Рис. 1.7. Сравнение функциональности коммутаторов 2-го уровня,
коммутаторов 3-го уровня и коммутирующего маршрутизатора
Если отвлечься от рекламных трюков, возможности работы уровня 4 могут понадобиться сетевым
администраторам для управления трафиком на основе приоритетов. Предположим, сетевой админист-
ратор захочет упорядочить трафик клиентов своей сети, например электронную почту или доступ к базе
данных электронных таблиц. Если в коммутаторах будут средства работы на уровне 4, он сможет это
сделать.
1.12. СТАНДАРТЫ IEEE 802.1Q И IEEE 802.1Р
Задача рабочих групп, трудящихся над стандартами P и Q, – дать сетевой отрасли единый метод пе-
редачи по сети информации о приоритете кадра и его принадлежности к виртуальным локально-
вычислительным сетям (ВЛВС). Были разработаны две спецификации маркировки пакетов:
• первая, одноуровневая, определяет взаимодействие виртуальных сетей по магистрали Fast
Ethernet;
• вторая, двухуровневая, касается маркировки пакетов в смешанных магистралях, включая Token
Ring и FDDI.
Первая спецификация с самого начала нуждалась лишь в минимальной доработке, так как она, по
сути, представляет собой технологию тэговой коммутации, продвигаемую на рынок усилиями Cisco.
Задержки с принятием стандарта 802.1Q объясняются необходимостью детальной проработки куда бо-
лее сложной «двухуровневой» спецификации.
Стандарт должен был удовлетворять следующим достаточно высоким требованиям:
• масштабируемости на уровне обмена пакетами между коммутаторами;
• преемственности на уровне существующих конечных приложений;
• адаптации на уровне существующих протоколов и таблиц маршрутизации;
• экономичности в плане утилизации высокоскоростных магистралей;
• совместимости с ATM, особенно с эмуляцией ЛВС;
• управляемости процесса маркировки пакетов.
В соответствии со стандартом 802.1Q к кадру Ethernet добавлены четыре байта. Эти 32 бита содер-
жат информацию по принадлежности кадра Ethernet к ВЛВС и о его приоритете. Говоря точнее, тремя
битами кодируется до восьми уровней приоритета, 12 бит позволяют различать трафик до 4096 ВЛВС,
один бит зарезервирован для обозначения кадров сетей других типов (Token Ring, FDDI), передаваемых
по магистрали Ethernet, и т.д.
Поле идентификатора уровня приоритета даёт возможность использовать восемь таких уровней, со-
ответствующих системе приоритетов стандарта 802.1P.
В заголовке кадра Ethernet поля 802.1Q размещаются между адресом отправителя и полем с инфор-
мацией о длине кадра полезной нагрузки 802.3 (кадр Ethernet) или о типе протокола более высокого
уровня (кадр Ethernet II) (рис. 1.8).
В настоящее время практически все сетевые фирмы уже создали коммерческие версии продуктов,
поддерживающие стандарты 802.1P и 802.1Q. Кроме того, многие производители коммутаторов Ethernet
уже реализовали службы приоритезации собственной разработки (рис. 1.9).
Рис. 1.8. Формат поля протокола IEEE 802.1Q кадра Ethernet
Рис. 1.9. Формирование схемы управления приоритетами в сети
Очевидно, что изменение структуры кадра Ethernet влечёт за собой возникновение серьёзных про-
блем – ведь он теряет совместимость со всеми традиционными устройствами Ethernet, ориентирован-
ными на старый формат кадра.
В самом деле, из-за того что данные 802.1Q размещаются перед полем с информацией о длине по-
лезной нагрузки (или типе протокола), традиционный сетевой продукт не обнаружит эту информацию
на привычном месте и вместо неё «прочитает» число x8100 – значение по умолчанию нового поля «Тэг
протокольного идентификатора» (Tag Protocol Identifier) в кадрах 802.1Q.
Источником проблем является не только изменение в размещении полей заголовка кадра Ethernet,
но и увеличение максимальной длины данного кадра. Многие сетевые устройства не способны обраба-
тывать кадры длиннее 1518 байт. Между специалистами возникли споры по поводу того, нужно ли мак-
симальный размер кадра Ethernet удлинять на четыре байта или следует укоротить на четыре байта мак-
симальный размер полезной нагрузки и таким образом компенсировать увеличение заголовка. Специ-
фикация 802.1Q предусматривает оба подхода, поэтому производителям самим предстоит обеспечивать
взаимную совместимость своих продуктов.
С технической точки зрения, осуществить взаимодействие старого оборудования с 802.1Q-
совместимыми современными устройствами несложно, и большинство производителей сумеют реали-
зовать такую возможность в своих продуктах на уровне их портов. Для состыковки 802.1Q-
совместимого устройства с прежним коммутатором или сетевой платой потребуется просто отключить
поддержку стандарта 802.1Q на нужном порте, и весь трафик будет посылаться в сеть в обычном виде.
Приоритеты и классы обслуживания. Спецификация IEEE 802.1P, создаваемая в рамках процесса
стандартизации 802.1Q, определяет метод передачи информации о приоритете сетевого трафика. Хотя в
большинстве ЛВС редко случаются длительные перегрузки, отдельные всплески трафика представляют
собой обычное явление и могут привести к задержкам передач пакетов. Это абсолютно неприемлемо
для работы сетей, предназначенных для передачи голоса и видео. Стандарт 802.1P специфицирует алго-
ритм изменения порядка расположения пакетов в очередях, с помощью которого обеспечивается свое-
временная доставка трафика, чувствительного к временным задержкам.
Рабочая группа по стандартизации интегрированного обслуживания в сетях с разными канальными
уровнями (ISSLL) определила ряд классов обслуживания в зависимости от того, какое время задержки
допустимо для передачи пакета того или иного типа трафика. Представьте себе сеть с разными видами
трафика: чувствительного к задержкам порядка 10 мс, не допускающего задержек более 100 мс и почти
не чувствительного к задержкам. Для успешной работы такой сети каждый из этих типов трафика дол-
жен иметь свой уровень приоритета, обеспечивающий выполнение требований, предъявляемых к вели-
чине задержки. Используя концепцию протокола резервирования ресурсов (Resource Reservation
Protocol – RSVP) и систему классов обслуживания, можно определить схему управления приоритетами.
Протокол RSVP, который будет рассмотрен ниже, поддерживается большинством коммутирующих
маршрутизаторов и, в частности, моделями SSR 8000/8600 производства Cabletron.
В дополнение к определению приоритетов стандарт 802.1P вводит важный протокол GARP (Generic
Attributes Registration Protocol) с двумя специальными реализациями. Первая из них – протокол GMRP
(GARP Multicast Registration Protocol), позволяющий рабочим станциям делать запрос на подключение к
домену групповой рассылки сообщений. Поддерживаемую этим протоколом концепцию назвали под-
соединением, инициируемым «листьями». Протокол GMRP обеспечивает передачу трафика только в те
порты, из которых пришёл запрос на групповой трафик, и хорошо согласуется со стандартом 802.1Q.
Второй реализацией GARP является протокол GVRP (GARP VLAN Registration Protocol), похожий
на GMRP. Однако, работая по нему, рабочая станция вместо запроса на подключение к домену группо-
вой рассылки сообщений посылает запрос на доступ к определённой ВЛВС. Данный протокол связыва-
ет стандарты P и Q.
С принятием предварительных вариантов стандартов 802.1Q и 802.1P появились все возможности
для широкого использования средств приоритезации трафика в сетях Ethernet. Задействуя продукты,
поддерживающие механизмы приоритезации, сетевые администраторы смогут распоряжаться коммути-
рующей инфраструктурой своей сети таким образом, чтобы, например, высший уровень приоритета по-
лучил трафик офисного пакета Lotus Notes и электронной почты, а аудиопотоки RealAudio – низший уро-
вень. Механизмы приоритезации трафика, основанные на спецификациях 802.1Q и 802.1P, бесспорно,
стали ещё одним козырем технологии Ethernet.
Но хотя упомянутые спецификации и обеспечивают приоритезацию трафика для наиболее попу-
лярных топологий второго уровня, они не гарантируют того, что вся инфраструктура сети (от одной её
конечной точки до другой) будет поддерживать обработку приоритетного трафика. В частности, специ-
фикации 802.1Q и 802.1P бесполезны при управлении приоритетом IP-трафика (трафика третьего уров-
ня), передаваемого через низкоскоростную распределённую сеть или каналы доступа в Интернет, т.е.
через наиболее вероятные «узкие места» сетевой инфраструктуры.
Чтобы в полной мере управлять трафиком во всей сети, необходимо прежде всего реализовать эф-
фективную приоритезацию IP-трафика. В связи с этим возникает ряд вопросов. Поддерживает ли ло-
кальная сеть механизмы такой приоритезации? А оборудование распределённой сети? Поддерживает ли
эти механизмы ваш поставщик услуг Интернета? Что в связи с этим можно сказать об инфраструктуре на
другом конце соединения? Если хотя бы одно устройство, находящееся между двумя системами, не под-
держивает механизмы приоритезации, будет невозможно реализовать передачу приоритетного трафика от
одного конечного узла сети до другого.
В отличие от технологии Ethernet, протокол IP уже довольно давно обладает средствами приорите-
зации сетевого трафика – впервые они были предложены в версии, опубликованной в 1981 г. Каждый
IP-пакет имеет восьмибитовое поле «Тип сервиса» (Type of Service, ToS), состоящее из двух подполей
(см. структуру заголовка пакета IP):
• трёхбитового – для установления уровня приоритета пакета;
• четырёхбитового – для указания класса (типа) обслуживания, предпочтительного для данного
пакета (оставшийся восьмой бит не используется).
Три первых бита поля ToS позволяют устанавливать для IP-трафика те же восемь уровней приори-
тета (от 0 до 7), что и спецификации 802.1Q и 802.1P, а также большинство других технологий ЛВС.
Поэтому можно взаимно однозначно отображать информацию о приоритетах кадров Ethernet и пакетов
IP, а значит, реализовать сквозную обработку приоритетного трафика, передаваемого из одной сети
Ethernet в другую через распределённую сеть IP или инфраструктуру поставщика услуг Интернета.
Четыре других используемых бита поля ToS позволяют администратору сети осуществлять инди-
видуальную маршрутизацию каждого пакета в соответствии с особенностями содержащихся в нём дан-
ных. Так, например, пакетам протокола NNTP (Network News Transfer Protocol), транспортирующим но-
вости UseNet, можно установить класс обслуживания с низкой стоимостью («low cost»), а пакетам
Telnet – класс обслуживания с низкой задержкой («low latency»).
Изначально стандарт RFC 791 (первоначальный вариант протокола IP) определял только три класса
обслуживания, каждому из которых ставился в соответствие отдельный бит, устанавливаемый в «1» или
«0» в зависимости от потребностей в том или ином типе обслуживания. С принятием стандарта RFC 1349
был добавлен ещё один класс, и теперь ранее разобщённые четыре бита стали рассматриваться как единое
целое. Поэтому сегодня с их помощью можно задавать максимум 16 значений (от 0 до 15).
Сетевые администраторы, управляющие сложными сетями с множеством маршрутов, могут исполь-
зовать биты для определения типа обслуживания в сочетании с такими протоколами маршрутизации, как
OSPF, для создания специальных служб маршрутизации. Например, пакеты с «отметкой» low latency
(низкая задержка) можно посылать не по спутниковому соединению, а по высокоскоростной оптической
линии, тогда как «неприхотливый» трафик (класс обслуживания «low cost») направить через Интернет, а
не через корпоративную распределённую сеть.
Комбинируя биты установки типа обслуживания с битами приоритета, можно очень точно задавать
режимы обработки пакетов с конкретными типами данных, например: определить правила, в соответст-
вии с которыми сетевые фильтры будут присваивать всем пакетам приложения Lotus Notes средний уро-
вень приоритета и назначать класс обслуживания с низкой задержкой. При этом пользователи Notes по-
лучат льготное обслуживание по сравнению с пользователями других, менее важных приложений. Можно
определить иной набор фильтров, который пометит весь трафик аудиоприложения RealAudio как низко-
приоритетный и установит для него класс обслуживания с высокой пропускной способностью (high
throughput).
Если вы располагаете собственным сквозным соединением между узлом-отправителем и узлом-
получателем, то можете распоряжаться пакетами по своему усмотрению. Но в большинстве сетей по-
ставщиков услуг Интернета пакеты с установленными уровнями приоритета и непомеченные пакеты
будут обрабатываться одинаково. Поэтому с точки зрения приоритезации трафика и назначения ему
разных классов обслуживания лучшим вариантом является использование частной территориально рас-
пределенной сети. При работе через Интернет можно назначить фильтры для поступающего из этой
глобальной сети трафика, чтобы по крайней мере контролировать его продвижение по вашей собствен-
ной сети.
Однако далеко не всё зависит от сетевой инфраструктуры. В настоящее время имеются значитель-
ные проблемы, связанные с установкой битов приоритета и типа обслуживания в IP-пакетах. Эти биты
могут быть установлены как самим приложением по мере формирования и отправки пакетов, так и се-
тевым устройством с помощью специальных фильтров. И в том и в другом случае поддержка этих функ-
ций всецело зависит от производителей приложений, операционных систем и сетевого оборудования.
Но удивительно, что лишь некоторые операционные системы используют в своих IP-стеках меха-
низмы записи в пакет информации об уровне его приоритета и требуемом для него классе обслужива-
ния. В прикладном программном интерфейсе WINSOCK.DLL, поставляемом вместе с Windows XP и
Windows Server 2003, такие возможности вообще отсутствуют, так что попытки вызвать функцию
«setsockopt (IP_TOS)» приводят к выдаче диагностического сообщения «invalid operation» («Недопусти-
мая операция»). В других операционных системах, например в Irix, HP-UX и Solaris, реализована лишь
частичная поддержка данных функций.
Среди всех операционных систем мощная поддержка функций ToS реализована только в Linux и
Digital UNIX. Причём она имеется как непосредственно в самих системах, так и в наборах их стандарт-
ных приложений. Например, обе системы предоставляют клиенты и серверы Telnet, способные устанав-
ливать бит low latency поля ToS – ни одна другая из протестированных нами операционных систем та-
кими важными возможностями не обладает. Клиент и сервер FTP, работающие в среде Linux и Digital
UNIX, способны устанавливать бит low latency в пакетах, передаваемых по каналу управления, а бит
high throughput – в пакетах, передаваемых по информационному каналу. В итоге такая команда FTP, как
abort operation (прервать команду), будет передана на сервер по самому скоростному маршруту и соот-
ветственно за минимальное время (оперативно отменив при этом загрузку файла с сервера).
Почему же лишь немногие приложения поддерживают функции байта ToS? Да потому, что большая
часть операционных систем, в среде которых они работают, не обеспечивает надлежащую поддержку
этих функций. И до тех пор, пока Microsoft не модифицирует программный интерфейс WINSOCK.DLL
системы Windows, поставщики приложений вроде Lotus Development, Netscape Communications и Oracle
не смогут реализовать в своих приложениях механизмы управления приоритетами.
Тем не менее существуют способы, позволяющие обходить те проблемы, которые не спешат решать
поставщики операционных систем и приложений. Самый верный из них – реализовать службы приори-
тезации трафика IP не в приложениях и операционных системах, а в устройствах сетевой инфраструк-
туры. Администраторы многих крупных и сильно загруженных сетей уже несколько лет осуществляют
приоритезацию с помощью фильтров, устанавливаемых в маршрутизаторах отдельно для каждого при-
ложения.
Так, например, можно вручную определить фильтр, обеспечивающий обслуживание с более высо-
ким уровнем приоритета, скажем, трафика Notes, по сравнению с трафиком FTP. И хотя такой способ не
отличается особым изяществом, его можно использовать, если не в масштабе сети всего предприятия,
то по крайней мере в пределах отдельных её сегментов.
Существует немало средств для реализации в IP-сетях различных механизмов управления приори-
тетами, ориентированных на конкретные приложения. Эти механизмы можно связать со схемой при-
оритезации, определённой в спецификациях 802.1Q и 802.1P.
1.13. ПРОТОКОЛЫ RTP И RSVP
Современные приложения не могут допустить, чтобы их пакеты поступали с опозданием. Два про-
токола (RTP и PSVP) позволяют гарантировать своевременность доставки с обеспечением качества ус-
луг.
Непрекращающийся рост Интернета и частных сетей предъявляет новые требования к пропускной
способности. Клиент-серверные приложения далеко превосходят Telnet по объёмам передаваемых дан-
ных. World Wide Web привёл к гигантскому увеличению графика графической информации. Сегодня к
тому же голосовые и видеоприложения выдвигают свои специфические требования к и без того пере-
груженным сетям.
Для того чтобы удовлетворить все эти запросы, одного увеличения ёмкости сети недостаточно. Что
действительно необходимо, так это разумные эффективные методы управления графиком и контроль
загруженности.
Исторически сети на базе IP предоставляли всем приложениям только простейшую услугу по дос-
тавке данных по мере возможности. Однако потребности со временем изменились. Организации, потра-
тившие миллионы долларов на установку сети на базе IP для передачи данных между локальными сетя-
ми, сталкиваются теперь с тем, что такие конфигурации не способны эффективно поддерживать новые
мультимедийные приложения реального времени с многоадресной рассылкой.
АТМ – единственная сетевая технология, которая изначально разрабатывалась для поддержки
обычного трафика Transfer Control Protocol (TCP) и User Datagram Protocol (UDP) наряду с трафиком
реального времени. Однако ориентация на АТМ означает либо создание новой сетевой инфраструктуры
для трафика реального времени, либо замену имеющейся конфигурации на базе IP, причём оба варианта
обойдутся весьма недёшево.
Поэтому потребность в поддержке нескольких типов трафика с различными требованиями к каче-
ству услуг в рамках архитектуры TCP/IP весьма насущна. Эту задачу призваны решить два ключевых
инструмента: транспортный протокол реального времени (Real-Time Transport Protocol, RTP) и прото-
кол резервирования ресурсов (Resource Reservation Protocol, RSVP).
RTP гарантирует доставку данных одному или более адресатам с задержкой в заданных пределах. Это
означает, что данные могут быть воспроизведены в реальном времени. RSVP позволяет конечным систе-
мам резервировать сетевые ресурсы для получения необходимого качества услуг, в особенности ресурсы
для трафика реального времени по протоколу RTP.
Наиболее широко используемый протокол транспортного уровня – это TCP. Хотя TCP позволяет
поддерживать множество разнообразных распределённых приложений, он не подходит для приложений
реального времени.
В приложениях реального времени отправитель генерирует поток данных с постоянной скоростью,
а получатель(-и) должен предоставлять эти данные приложению с той же самой скоростью. Такие при-
ложения включают аудио- и видеоконференции, распространение живого видео (для немедленного вос-
произведения), разделяемые рабочие области, удалённую диагностику в медицине, компьютерную те-
лефонию, распределённое интерактивное моделирование, игры и мониторинг в реальном времени.
Использование TCP в качестве транспортного протокола для этих приложений невозможно по не-
скольким причинам. Во-первых, данный протокол позволяет установить соединение только между дву-
мя конечными точками и, следовательно, не подходит для многоадресной передачи. Он предусматрива-
ет повторную передачу потерянных сегментов, прибывающих в то время, когда приложение реального
времени уже их не ждёт. Кроме того, у TCP нет удобного механизма привязки информации о синхрони-
зации к сегментам, что также является требованием приложений реального времени.
Другой широко используемый протокол транспортного уровня – UDP не имеет первых двух ограни-
чений (соединение «точка–точка» и передача потерянных сегментов), но и он не предоставляет критиче-
ской информации о синхронизации. Таким образом, UDP сам по себе не имеет каких-либо инструментов
общего назначения для приложений реального времени.
Несмотря на то, что каждое приложение реального времени может обладать своими собственными
механизмами для поддержки передачи в реальном времени, они имеют много общих черт, что делает
определение единого протокола весьма желательным. Стандартный протокол такого рода – RTP, опре-
делённый в RFC 1889.
В типичной среде реального времени отправитель генерирует пакеты с постоянной скоростью. Они
отправляются им через одинаковые интервалы времени, проходят через сеть и принимаются получате-
лем, воспроизводящим данные в реальном времени по их получении.
Однако ввиду вариации задержки при передаче пакетов по сети они прибывают через нерегулярные
интервалы. Для компенсации этого эффекта поступающие пакеты буферизуются, придерживаются на не-
которое время и затем предоставляются с постоянной скоростью программному обеспечению, генери-
рующему вывод. Чтобы такая схема работала, каждый пакет получает отметку о времени – таким образом
получатель может воспроизвести поступающие данные с той же скоростью, что и отправитель.
RTP поддерживает передачу данных в реальном времени между несколькими участниками сеанса.
(Сеанс – это логическая связь между двумя и более пользователями RTP, поддерживаемая в течение
всего времени передачи данных. Процесс открытия сеанса выходит за рамки RTP.)
Хотя RTP может использоваться и для одноадресной передачи в реальном времени, его сила – в
поддержке многоадресной передачи. Для этого каждый блок данных RTP содержит идентификатор от-
правителя, указывающий, кто из участников генерирует данные. Блоки данных RTP содержат также от-
метку о времени, чтобы данные могли быть с правильными интервалами воспроизведены принимающей
стороной.
Кроме того, RTP определяет формат полезной нагрузки передаваемых данных. С этим напрямую
связана концепция синхронизации, за которую частично отвечает микшер – механизм трансляции RTP.
Принимая потоки пакетов RTP от одного или более источников, он комбинирует их и посылает новый
поток пакетов RTP одному или более получателям. Микшер может просто комбинировать данные, а
также изменять их формат.
Пример приложения для микшера – комбинирование нескольких источников звука. Например,
предположим, что часть систем данного аудиосеанса генерирует каждая свой собственный поток RTP.
Большую часть времени только один источник активен, хотя иногда одновременно «говорят» несколько
источников.
Если новая система хочет принять участие в сеансе, но её канал до сети не имеет достаточной точ-
ной ёмкости для поддержки всех потоков RTP, то микшер получает все эти потоки, объединяет их в
один и передаёт последний новому члену сеанса. При получении нескольких потоков микшер склады-
вает значения импульсно-кодовой модуляции. Заголовок RTP, генерируемый микшером, включает
идентификатор(-ы) отправителя(-ей), чьи данные присутствуют в пакете.
Более простое устройство создаёт один исходящий пакет RTP для каждого поступающего пакета
RTP. Этот механизм, называемый транслятором, может изменить формат данных в пакете или исполь-
зовать иной комплект низкоуровневых протоколов для передачи данных из одного домена в другой.
Например, потенциальный получатель может оказаться не в состоянии обрабатывать высокоскоростной
видеосигнал, используемый другими участниками сеанса. Тогда транслятор конвертирует видео в фор-
мат более низкого качества, требующий не такой высокой скорости передачи данных.
Каждый пакет RTP имеет основной заголовок, а также, возможно, дополнительные поля, специ-
фичные для приложения. Структуру основного заголовка иллюстрирует рис. 1.10. Первые 12 октетов
состоят из следующих полей:
поле версии (2 бита): текущая версия – вторая;
поле заполнения (1 бит): это поле сигнализирует о наличии заполняющих октетов в конце полез-
ной нагрузки. (Заполнение применяется, когда приложение требует, чтобы размер полезной нагрузки
был кратен, например, 32 битам.) В этом случае последний октет указывает число заполняющих окте-
тов;
−
−
Номер версии
Заполнение
Extension
Число СЗРС
Маркер
Тип полезной нагрузки
Порядковый номер
0
31
V(2)
P(1)
X(1)
СС(4)
M(1)
T(7)
PN(5)
Отметка о времени
Идентификатор источника синхронизации (SSRC)
Идентификатор источника (CSRC)
Переменное число полей CSRC
Идентификатор источника
Рис. 1.10. Структура RTP-заголовка
поле расширения заголовка (1 бит): когда это поле задано, то за основным заголовком следует
ещё один, дополнительный, используемый в экспериментальных расширениях RTP;
− поле числа отправителей (4 бита): это поле содержит число идентификаторов отправителей, чьи
данные находятся в пакете, причём сами идентификаторы следуют за основным заголовком;
− поле маркера (1 бит): смысл бита маркера зависит от типа полезной нагрузки. Бит маркера ис-
пользуется обычно для указания границ потока данных. В случае видео он задаёт конец кадра. В случае
голоса он задаёт начало речи после периода молчания;
− поле типа полезной нагрузки (7 бит): это поле идентифицирует тип полезной нагрузки и формат
данных, включая сжатие и шифрование. В стационарном состоянии отправитель использует только
один тип полезной нагрузки в течение сеанса, но он может его изменить в ответ на изменение условий,
если об этом сигнализирует протокол управления передачей в реальном времени (Real-Time Transport
Control Protocol);
− поле порядкового номера (16 бит): каждый источник начинает нумеровать пакеты с произволь-
ного номера, увеличиваемого затем на единицу с каждым посланным пакетом данных RTP. Это позво-
ляет обнаружить потерю пакетов и определить порядок пакетов с одинаковой отметкой о времени. Не-
сколько последовательных пакетов могут иметь одну и ту же отметку о времени, если логически они
порождены в один и тот же момент (например, пакеты, принадлежащие одному и тому же видеокадру);
− поле отметки о времени (32 бита): здесь записывается момент времени, когда был создан первый
октет данных полезной нагрузки. Единицы, в которых в этом поле указывается время, зависят от типа
полезной нагрузки. Значение определяется по локальным часам отправителя;
− поле идентификатора источника синхронизации: генерируемое случайным образом число, уни-
кальным образом идентифицирующее источник в течение сеанса.
RTP-заголовок содержит ряд полей, идентифицирующих такие элементы, как формат пакета, по-
рядковый номер, источники, границы и тип полезной нагрузки. За фиксированным заголовком могут
следовать другие поля, содержащие дополнительную информацию о данных.
За основным заголовком может следовать одно или более полей идентификаторов отправителей,
чьи данные присутствуют в полезной нагрузке. Эти идентификаторы вставляются микшером.
Протокол RTP используется только для передачи пользовательских данных – обычно многоадрес-
ной – всем участникам сеанса. Отдельный протокол управления передачей в реальном времени (Real-
−
Time Transport Control Protocol, RTCP) работает с несколькими адресатами для обеспечения обратной
связи с отправителями данных RTP и другими участниками сеанса.
RTCP использует тот же самый базовый транспортный протокол, что и RTP (обычно UDP), но дру-
гой номер порта. Каждый участник сеанса периодически посылает RTCP-пакет всем остальным участ-
никам сеанса. RFC 1889 описывает три функции, выполняемые RTCP.
Первая функция состоит в обеспечении качества услуг и обратной связи в случае перегрузки. По-
скольку RTCP-пакеты являются многоадресными, то все участники сеанса могут оценить, насколько
хороши работа и приём других участников. Сообщения отправителя позволяют получателям оценить
скорость данных и качество передачи. Сообщения получателей содержат информацию о проблемах, с
которыми они сталкиваются, включая утерю пакетов и избыточную неравномерность передачи. Напри-
мер, скорость передачи для аудио- и видеоприложения может быть снижена, если линия не обеспечива-
ет желаемого качества услуг при данной скорости передачи.
Обратная связь с получателями важна также для диагностирования ошибок при распространении.
Анализируя сообщения всех участников сеанса, администратор сети может определить, касается ли
данная проблема одного участника или носит общий характер.
Вторая основная функция RTCP – идентификация отправителя. Пакеты RTCP содержат стандарт-
ное текстовое описание отправителя. Они предоставляют больше информации об отправителе пакетов
данных, чем случайным образом выбранный идентификатор источника синхронизации. Кроме того, они
помогают пользователю идентифицировать потоки, относящиеся к различным сеансам. Так, они дают
пользователю возможность определить, что одновременно открыты отдельные сеансы для аудио и ви-
део.
Третья функция состоит в оценке размеров сеанса и масштабировании. Для обеспечения качества
услуг и обратной связи с целью управления загруженностью, а также с целью идентификации отправи-
теля, все участники периодически посылают пакеты RTCP. Частота передачи этих пакетов снижается с
ростом числа участников.
При небольшом числе участников один пакет RTCP посылается максимум каждые пять секунд.
RFC 1889 г. описывает алгоритм, согласно которому участники ограничивают частоту RTCP-пакетов в
зависимости от общего числа участников. Цель состоит в том, чтобы трафик RTCP не превышал 5 % от
общего трафика сеанса.
Назначение любой сети состоит в доставке данных получателем с гарантированным качеством услуг,
включающих пропускную способность, задержку и допустимый предел вариации задержки. С ростом
числа пользователей и приложений обеспечить качество услуг становится всё труднее.
Всего лишь реагировать на перегрузку – уже недостаточно. Необходим инструмент, с помощью ко-
торого перегрузок можно было бы избежать вообще, т.е. сделать так, чтобы приложения могли резерви-
ровать сетевые ресурсы в соответствии с требуемым качеством услуг.
Превентивные меры полезны как при одноадресной, так и при многоадресной передаче. При одно-
адресной передаче два приложения договариваются о конкретном уровне качества услуг для данного
сеанса. Если сеть сильно загружена, то она может оказаться не в состоянии предоставить услуги необ-
ходимого качества. В этой ситуации приложениям придётся отложить сеанс до лучших времен или по-
пробовать снизить требования к качеству услуг, если это возможно.
Решение в данном случае состоит в резервировании одноадресными приложениями ресурсов для
обеспечения требуемого уровня услуг. Тогда маршрутизаторы на предполагаемом пути выделяют ре-
сурсы (например, место в очереди и часть ёмкости исходящей линии). Если маршрутизатор не имеет
возможности выделить ресурсы вследствие ранее взятых на себя обязательств, то он извещает об этом
приложение. При этом приложение может попытаться инициировать другой сеанс с меньшими требо-
ваниями к качеству услуг или перенести его на более поздний срок.
Многоадресная рассылка ставит гораздо более сложные задачи по резервированию ресурсов. Она ведёт
к генерации огромных объёмов сетевого трафика – в случае, например, таких приложений, как видео, или
при наличии большой и рассредоточенной группы получателей. Однако трафик от источника многоадрес-
ной рассылки может быть в принципе значительно снижен.
Для этого есть два основания. Во-первых, некоторые члены группы могут не нуждаться в доставке
данных от конкретного источника в определённый период времени. Так, члены одной группы могут по-
лучать информацию одновременно по двум каналам (от двух источников), но при этом получатель может
быть заинтересован в приёме только одного канала.
Во-вторых, некоторые члены группы в состоянии обрабатывать только часть передаваемой отпра-
вителем информации. Например, видеопоток может состоять из двух компонентов: один с низким каче-
ством картинки, а другой – с высоким. Такой формат имеет ряд алгоритмов сжатия видео: они генери-
руют базовый компонент с картинкой низкого качества и дополнительный компонент с повышенным
разрешением.
Некоторые получатели могут не иметь достаточной вычислительной мощи для обработки компо-
нентов с высоким разрешением или быть подключены к сети через подсеть или канал, не обладающие
достаточной емкостью, чтобы пропустить полный сигнал.
Резервирование ресурсов позволяет маршрутизаторам заранее определить, в состоянии ли они осу-
ществить доставку многоадресного трафика всем получателям.
В предыдущих попытках реализации резервирования ресурсов и в принятых во frame relay и АТМ
подходах необходимые ресурсы запрашивает источник потока данных. Этот метод достаточен в случае
одноадресной передачи, потому что передающее приложение передаёт данные в определённом темпе, а
необходимый уровень качества услуг заложен в схему передачи.
Однако такой подход нельзя использовать для многоадресной рассылки. У разных членов группы
могут быть неодинаковые требования к ресурсам. Если исходный поток может быть разделён на подпо-
токи, то некоторые члены группы, вполне возможно, пожелают получать только один из них. В частно-
сти, некоторые получатели смогут обрабатывать только компонент видеосигнала низкого разрешения.
Или если несколько отправителей вещают на одну группу, то получатель может выбрать только одного
отправителя или некоторое их подмножество. Наконец, требования различных получателей к качеству
услуг могут меняться в зависимости от оборудования вывода, мощности процессора и скорости канала.
По этой причине резервирование ресурсов получателем видится предпочтительным. Отправители
могут предоставить маршрутизаторам общие характеристики трафика (например, темп передачи дан-
ных и вариабельность), но получатели должны сами определить требуемый уровень качества услуг.
Маршрутизаторы затем сводят воедино запросы на выделение ресурсов на общих участках дерева рас-
пространения.
В основе RSVP лежат три концепции, касающиеся потоков данных: сеанс, спецификация потока и
спецификация фильтра. Сеанс – это поток данных, идентифицируемый по адресату. Отметим, что эта
концепция отличается от концепции сеанса RTP, хотя сеансы RSVP и RTP могут иметь взаимно одно-
значное соответствие. После резервирования маршрутизатором ресурсов для конкретного адресата он
рассматривает это как начало сеанса и выделяет ресурсы на время этого сеанса.
Запрос на резервирование от конечной системы-получателя, называемый описателем потока, состо-
ит из спецификации потока и фильтра. Спецификация потока определяет требуемое качество услуг и
используется узлом для задания параметров планировщика пакетов. Маршрутизатор передаёт пакеты с
заданным набором предпочтений, опираясь на текущую спецификацию потока.
Спецификация фильтра определяет набор пакетов, под которые запрашиваются ресурсы. Вместе с
сеансом она определяет набор пакетов (или поток), для которых требуемое качество услуг должно быть
обеспечено (рис. 1.11). Любые другие пакеты, направляемые этому адресату, обрабатываются постоль-
ку, поскольку сеть в состоянии это сделать.
Спецификация фильтра позволяет отобрать пакеты для применения к ним спецификации потока.
Прошедшим фильтр пакетам гарантируется качество услуг, остальные доставляются по мере возможно-
сти.
RSVP не определяет содержания спецификации потока, он просто передаёт запрос. Спецификация
потока обычно включает класс услуг: Rspec (R означает резерв) и Tspec (T означает трафик). Два других
параметра представляют собой набор чисел. Параметр Rspec определяет требуемое качество услуг, а
параметр Tspec описывает поток данных. Содержимое Rspec и Tspec прозрачно для RSVP.
Пакеты
одного
сеанса
(одному
адресату)
Пакеты,
прошедшие через
фильтр
Спецификация
фильтра
Спецификация
потока
Остальные пакеты,
не прошедшие
через фильтр
Доставка
с гарантированным
качеством
Доставка
по возможности
Планировщик пакетов
Рис. 1.11. Прохождение пакетов на примере одного сеанса
на одном маршрутизаторе
В принципе, спецификация фильтра описывает произвольное подмножество пакетов одного сеанса
(т.е. тех пакетов, адресат которых определяется данным сеансом). Например, спецификация фильтра
может определять только конкретных отправителей либо определять протоколы или пакеты, поля про-
токольных заголовков которых совпадают с заданными.
Связь между сеансом, спецификацией потока и спецификацией фильтра иллюстрирует рис. 1.12.
Каждый приходящий пакет относится по крайней мере к одному сеансу и рассматривается в соответст-
вии с логическим потоком для этого сеанса.
Если пакет не принадлежит к какому-либо сеансу, то он доставляется постольку, поскольку есть
свободные ресурсы.
Основная сложность RSVP связана с многоадресной рассылкой. Пример многоадресной конфигу-
рации приведён на рис. 1.13.
Хосты Gl, G2 и G3 принадлежат к многоадресной группе, получающей дейтаграммы с соответст-
вующим адресом получателя. Хосты S1 и S2 посылают данные по этому адресу. Линии показывают де-
рево маршрутизации для S1 и для S2. Линии со стрелками показывают пути передачи данных от S1 и S2
Эта конфигурация состоит из четырёх маршрутизаторов. Канал между двумя любыми маршрутизато-
рами, изображаемый линией, может представлять собой как прямой канал, так и подсеть. Три хоста – Gl,
G2 и G3 – входят в одну группу и получают дейтаграммы с соответствующим групповым адресом. Дан-
ные по этому адресу передаются двумя хостами – S1 и S2. Линия соответствует дереву маршрутизации
для S1 и данной группы, а другая линия – для S2 и данной группы. Линии со стрелками указывают на-
правление передачи пакетов от S1 и от S2.
Рисунок показывает, что все четыре маршрутизатора должны знать о резервировании ресурсов ка-
ждым получателем. Таким образом, запросы на выделение ресурсов распространяются в обратном на-
правлении по дереву маршрутизации.
RSVP использует два основных типа сообщений: Resv и Path. Сообщения Resv генерируются полу-
чателями и распространяются вверх по дереву, причём каждый узел по пути объединяет и компонует
пакеты от разных получателей, когда это возможно. Эти сообщения приводят к переходу маршрутиза-
тора в состояние резервирования ресурсов для данного сеанса (группового адреса).
В конце концов все объединённые сообщения Resv достигают хостов-отправителей. Основываясь
на полученной информации, они задают надлежащие параметры управления трафиком для первого
транзитного узла.
Поток сообщений Resv показан на рис. 1.14.
Протокол RTP
Транспортный протокол реального времени
(Real time Transport Protocol) – гарантирует доставку
данных одному или более адресатам с задержкой в
заданных пределах. Это означает, что данные могут
быть воспроизведены в реальном времени.
Протокол RSVP
Протокол резервирования ресурсов
(Resourse Reservetion Protocol) позволяет конечным
системам резервировать сетевые ресурсы для получения необ-
ходимого качества услуг, в особенности ресурсы для трафика
реального времени по протоколу RTP.
Уровень 7
Прикладной
Уровень 6
Представительный
Уровень 5
Сеансовый
Протокол
IP v.4
Уровень 4
Транспортный
Уровень3
Сетевой
Уровень 2
Канальный
Уровень 1
Физический
Каждый IP-пакет имеет 8-битовое поле
«Тип сервиса» (Type of service), состоящее
из двух подполей: трехбитового – для
установления уровня приоритета пакета, четырёх-
битового – для установления
класса обслуживания (предпочтительного для
данного пакета), восьмой бит не
используется. Три первых бита поля
позволяют устанавливать для IP-трафика
те же 8 уровней приоритета (0–7),
что и спецификации 802,1Q и 802,1P и
большинство других технологий ЛВС.
Поэтому можно одновременно отображать ин-
формацию о приоритетах адресов
Ethernet и пакетов IP, а значит, реализовать сквоз-
ную обработку приоритетного трафика, передавае-
мого из одной сети Ethernet
в другую через распределённую сеть IP
или инфраструктуру ISP.
Подуровень LLC
Подуровень
управления
доступом
к среде
передачи
(МАС – Media
Access Control
Приоритезация трафика с помощью
поддержки стандарта 802.1Q, в котором
предусмотрено добавление в заголовок
кадра Ethernet 4 байт данных. Одно поле
(3 бита) представляет собой идентификатор уров-
ней приоритета.
Стандарт IEEE 802,1Р – это расширенный стан-
дарт моста 802,1D; в нем описывается как должна
проходить приоритезация
трафика в мосте уровня МАС независимо
от поддерживаемых им среды и технологиии пере-
дачи данных. Другими словами,
стандарт IEEE 801.P специфицирует
метод указания приоритетного кадра,
основанный на использовании нового поля, опре-
делённого в стандарте IEEE 802.1Q.
Рис. 1.12. Реализация приоритезации трафика на различных уровнях модели OSI
Рис. 1.13. Иллюстрация работы RSVP
Рис. 1.14. Иллюстрация объединения сообщений работы Resv
В этой конфигурации сообщения Resv объединяются, в результате только одно сообщение переда-
ётся обратно по каждой ветви дерева распространения. Сообщения необходимо периодически повто-
рять в результате.
Обратим внимание, что сообщения объединяются; следовательно, только одно сообщение переда-
ётся вверх по любой ветви комбинированного дерева доставки. Однако эти сообщения должны перио-
дически рассылаться вновь для продления срока резервирования ресурсов.
Сообщение Path используется для распространения информации об обратном маршруте. Всеми со-
временными протоколами многоадресной маршрутизации поддерживается только прямой маршрут в
виде дерева распространения (вниз от отправителя). Но сообщения Resv должны передаваться в обрат-
ном направлении через все промежуточные маршрутизаторы всем хостам-отправителям.
Поскольку протокол маршрутизации не предоставляет информации об обратном маршруте, она пере-
даётся RSVP в сообщениях Path. Любой хост, желающий стать отправителем, посылает сообщение Path
всем членам группы. По пути каждый маршрутизатор и каждый хост-адресат переходит в состояние path,
указывающее, что пакеты для этого отправителя должны пересылаться на транзитный узел, с которого
данный пакет получен. Пакеты Path передаются по тем же самым путям, что и пакеты данных.
Рассмотрим работу протокола RSVP. С точки зрения хоста, работа протокола состоит из следую-
щих этапов (первые два этапа в этой последовательности имеют иногда обратную очерёдность).
• Получатель вступает в группу многоадресной рассылки посредством отправки сообщения по
протоколу IGMP соседнему маршрутизатору.
• Потенциальный отправитель отправляет сообщение по адресу группы.
• Получатель принимает сообщение Path, идентифицирующее отправителя.
• Теперь, когда получатель имеет информацию об обратном пути, он может отправлять сообщения
Resv с дескрипторами потока.
• Сообщения Resv передаются по сети отправителю.
• Отправитель начинает передачу данных.
• Получатель начинает приём пакетов данных.
Вчерашние методы работы с большими объёмами трафика совершенно непригодны для современ-
ных систем. Без новых инструментов удовлетворять растущим требованиям к передаче данных в связи с
ростом их объёма, распространением приложений реального времени и многоадресной рассылки не-
возможно. RTP и RSVP обеспечивают надёжный фундамент для сетей следующего поколения LAN.
В качестве примера реального применения этих протоколов можно привести модель VoIP (Voice
over IP) – передачи голоса по IP-сетям, которая описана в стандарте H.232 и предусматривает передачу
аудио-, видеоинформации и данных через IP-сеть. В этом случае протокол реального времени RTP ис-
пользуется для установления соединения, а протокол RSVP – для резервирования ресурсов сети.
Глава 2. МЕЖСЕТЕВЫЕ ЭКРАНЫ И ВИРТУАЛЬНЫЕ
ЧАСТНЫЕ СЕТИ
В данной главе рассмотрены конкретные схемы реализации таких систем. В частности, анализиру-
ется применение межсетевых экранов (МСЭ) для защиты корпоративных ресурсов от несанкциониро-
ванного использования. Обсуждаются вопросы применения виртуальных частных сетей, позволяющих
удалённым пользователям и целым службам осуществлять доступ в корпоративную сеть в защищённом
режиме через незащищённую сеть общего пользования [4].
2.1. ЗАЩИТА С ПОМОЩЬЮ МЕЖСЕТЕВЫХ ЭКРАНОВ
Подключение корпоративной сети к Internet снижает её защищённость от внешнего проникновения.
Для защиты конфиденциальной информации, находящейся в корпоративной сети, наряду с мерами
безопасности, обычно используют дополнительные средства. Им и посвящена эта глава.
Защита основана на применении специальной стратегии контроля доступа к сетевым ресурсам и
использовании межсетевого экрана – брандмауэра. Межсетевой экран – это система безопасности, кон-
тролирующая доступ к защищаемой сети, например частной корпоративной сети. Такая сеть защищает-
ся от сети общего пользования, в которой режим безопасной работы не предусмотрен, например от
Internet. Любой запрос, поступивший из сети общего пользования в защищаемую систему, проходит че-
рез межсетевой экран, что позволяет отказаться от индивидуальной защиты каждого сервера и сетевого
компьютера.
Межсетевой экран обычно находится в точке взаимодействия корпоративной сети и Internet. Здесь
он выполняет аутентификацию и другие процедуры сетевой безопасности, препятствующие проникно-
вению в сеть нелегальных пользователей. Схема контроля с помощью МСЭ доступа из Internet в корпо-
ративную сеть показана на рис. 2.1.
Для обеспечения эффективной защиты с помощью брандмауэра компаниям прежде всего следует
разработать стратегию сетевой безопасности. Необходимо определить ресурсы, требующие защиты, и ти-
пы атак, которым они могут быть подвергнуты. Затем оговариваются условия применения этих ресурсов,
круг пользователей, имеющих к ним доступ, и последовательность действий в случае нарушения прав дос-
тупа. Стратегия предусматривает ряд правил, которые применяются для тестирования прибывших пакетов.
Рис. 2.1. Схема контролируемого межсетевым экраном доступа
в корпоративную сеть из Internet [4]
В этих правилах определяются допустимая интенсивность поступающего извне информационного по-
тока и адреса источников, по которым возможен/невозможен доступ от внешних структур. Специаль-
ные действия включают либо приём пакета, либо отказ от него. Межсетевой экран отвечает за фильтра-
цию информационного потока в соответствии с выработанной стратегией [4].
Типы межсетевых экранов. Брандмауэры можно разделить на три основных категории:
− фильтры пакетов;
прокси-серверы (они включают шлюзы приложений и шлюзы линий связи);
фильтры пакетов с сохранением адресов.
Кроме того, МСЭ может быть образован шлюзом приложений и фильтром пакетов либо прокси-
сервером и фильтром пакетов с сохранением адресов. Различные типы брандмауэров показаны на рис.
2.2.
−
−
Рис. 2.2. Классификация межсетевых экранов
Фильтры пакетов. Фильтр пакетов – это межсетевой экран, который проверяет каждый пакет в соот-
ветствии с правилами фильтрации, определяемыми пользователем, и решает, пропустить его или блокиро-
вать. Так, правила фильтрации могут запрещать пропуск всех запросов Telnet. На основании этого запрета
межсетевой экран будет блокировать все сообщения, в заголовках которых номер порта равен 23 (номер
порта сети Telnet по умолчанию). Правила фильтрации можно построить либо на основании IР-адресов ис-
точника или пункта назначения, либо используя номера их портов четвёртого уровня. Решения принимают-
ся на сетевом и транспортном уровнях.
Фильтры пакетов с сохранением адресов характеризуются высокой производительностью, их мож-
но использовать в существующих маршрутизаторах. К сожалению, среди всех МСЭ их возможности
наиболее ограничены. Недостаток фильтров состоит в отсутствии проверки регистрации, что мешает
обнаружить несанкционированное проникновение в сеть. Кроме того, решение о блокировке или про-
пуске сообщения принимается на основе данных об адресе либо номере порта источника и пункта на-
значения. К сожалению, номера портов можно подделать. Следовательно, злоумышленник постарается
получить доступ к сетевым ресурсам сразу же вслед за авторизованным пользователем.
Прокси-серверы. Приложение, которое переадресует пользовательский запрос к службам, поддер-
живающим стратегию безопасности, называется прокси-сервером. Любое соединение между пользова-
телем и сервером обработки запросов осуществляется через прокси-сервер. Он работает как посредник
между клиентом и сервером приложения. Поскольку прокси-сервер функционирует как пункт контроля,
в котором запрос проверяется на соответствие приложению, он работает очень интенсивно и при боль-
шом потоке запросов не успевает их обслуживать.
Различают два класса прокси-серверов: шлюзы приложений, которые работают на уровне приложе-
ний, и шлюзы линий связи, функционирующие на транспортном уровне.
Шлюзы приложений. Шлюз приложений – это прокси-сервер, обеспечивающий функции контроля
доступа на уровне прикладных задач. Он действует как шлюз уровня приложений между защищённой
сетью и системой, в которой не предусмотрен режим безопасной работы. Поскольку шлюз приложений
работает на уровне прикладных задач, он детально исследует трафик, обеспечивая наибольшую защиту
сети. Так, он может препятствовать доступу в сеть определённых приложений, например РТР. С целью
учёта и проверки безопасности устройство регистрирует все операции, связанные с работой приложе-
ний.
Шлюзы приложений могут закрыть информацию. Поскольку все запросы служб в защищённой сети
проходят через шлюз приложений, то он преобразует сетевые IР-адреса и тем самым скрывает IР-адреса
корпоративной структуры. Сетевой IР-адрес каждого экспортируемого пакета – сообщения, направляе-
мого из корпоративной сети в Internet, – заменяется его собственным адресом IР. Преобразование сете-
вого адреса позволяет свободно использовать незарегистрированные IР-адреса в защищаемой сети, по-
скольку в случае выхода корпоративного клиента во внешние структуры шлюз приложений преобразует
этот адрес в необходимый.
Шлюзы линий связи. Шлюз линий связи – это прокси-сервер, который подтверждает разрешение на
сессию ТСР или UDР, прежде чем линия связи пройдёт через межсетевой экран. Шлюз данного уровня ак-
тивно участвует в формировании канала передачи данных и не позволяет пакетам проходить через него, ес-
ли не соблюдены необходимые правила доступа.
Шлюз линий связи обеспечивает более слабую защиту по сравнению со шлюзом приложений, посколь-
ку первый разрешает сессию ТСР или UDР без детального анализа приложений, использующих эти транс-
портные службы. Более того, после начала сессии приложение, которому потребовалась транспортировка,
может использовать любую сформированную линию связи. Эта особенность снижает защищённость сети от
атак злоумышленников. В отличие от шлюза соединений шлюз приложений может отделить приложения,
которые следует блокировать, от тех, что необходимо пропустить.
Фильтры пакетов с сохранением адресов. Хотя шлюзы приложений обеспечивают наивысшую
степень безопасности среди рассмотренных ранее межсетевых экранов, выполняемая ими тщательная
проверка снижает производительность сети. Шлюз, фильтрующий пакеты с сохранением адресов, по-
зволяет обеспечить жёсткие требования по безопасности, не снижая производительности сети. В отли-
чие от шлюза приложений он проверяет поступающие пакеты на сетевом уровне, но не обрабатывает
их. Данный брандмауэр сохраняет информацию о режиме каждой сессии. Режим сессии включает фазу
взаимодействия и конечный пункт, в котором находится приложение. Когда фильтр пакетов с сохране-
нием адреса принимает пакет с данными, он проверяет его содержимое на соответствие режиму сессии.
Если содержимое пакета отличается от ожидаемого режима, шлюз блокирует продолжение сессии.
Архитектура межсетевого экрана. Архитектура МСЭ – это способ расположения компонентов
брандмауэра, обеспечивающий эффективную защиту от несанкционированного доступа. Архитектуру
МСЭ определяют уже после того, как разработана стратегия защиты сети, поскольку межсетевой экран
усиливает её [4].
В стратегии защиты сети особое внимание уделяется безопасности её границ, так называемому пе-
риметру сети. Корпоративная сеть обычно содержит множество периметров, которые условно можно
разделить на три группы. Это дальний периметр сети, один или несколько внутренних периметров и пе-
риметр, ближайший к ядру сети. Дальний периметр служит границей между корпоративными ресурса-
ми, которые необходимо защищать, и ресурсами внешних структур, которые компанией не контроли-
руются. Внутренние периметры ограничивают часть корпоративной сети, для которой необходима до-
полнительная защита.
Рис. 2.3. Периметры сети
Взаимосвязь между тремя типами периметров сети показана на рис. 2.3. Здесь представлена только
одна возможная конфигурация МСЭ. Далеко не все сети оборудуются тремя уровнями сетевых пери-
метров. Организации следует подобрать необходимое число межсетевых экранов в соответствии с кон-
кретной стратегией безопасности.
Рассмотрим три наиболее распространённых архитектуры брандмауэров.
Межсетевой экран с двунаправленным хостом. Данный МСЭ оборудуется двумя интерфейсами.
Один интерфейс соединяет хост с частной сетью, другой обеспечивает подключение к Internet или лю-
бой другой незащищённой сети. Следовательно, весь IР-трафик, поступающий из Internet, прежде чем
попасть в корпоративную сеть, должен пройти через этот защитный барьер. Точно так же внутренний
узел через двунаправленный хост взаимодействует с узлами Internet.
Непосредственная связь, проходящая через двунаправленный хост защиты, блокируется. Это озна-
чает, что функция прямой трансляции IР-трафика для данного устройства исключена и IР-пакеты из од-
ной сети не могут непосредственно направляться в другую. Двунаправленный хост не используется в
качестве маршрутизатора. Существует запрет на прямую передачу IР-пакетов до тех пор, пока не гаран-
тировано логическое разъединение двух сетей: частной и глобальной. Следовательно, даже при систем-
ных сбоях межсетевой экран остаётся в рабочем состоянии. Данные могут пройти брандмауэр только
через прокси-сервер и никогда через системный уровень. Применение межсетевого экрана с двунаправ-
ленным хостом показано на рис. 2.4.
Это устройство можно использовать для полной блокировки доступа в частную сеть, пока исполняются
прокси-сервисы, например Telnet, FТР, НТТР.
Рис. 2.4. Архитектура МСЭ с двунаправленным хостом
Как показано на рис. 2.4, сервер, работающий с данными службами, находится между фильтрующим
пакеты маршрутизатором, который может быть установлен, и двунаправленным хостом. Такая конфи-
гурация препятствует проникновению злоумышленников в систему с двунаправленным хостом.
Брандмауэр с экранированным хостом. В отличие от МСЭ с двунаправленным хостом, который
подключается к обеим сетям одновременно, экранированный хост соединён только с частной сетью.
Это устройство имеет собственное название – хост-бастион. Между узлом и сетью Internet размещают
отдельный экранирующий маршрутизатор. Таким образом, МСЭ с экранированным хостом представля-
ет собой комбинацию фильтрующего пакеты маршрутизатора и шлюза приложений.
Экранирующий маршрутизатор выполняет функцию фильтрации пакетов и конфигурируется таким
образом, чтобы хост-бастион являлся единственным компьютером корпоративной сети, доступ к кото-
рому возможен из Internet. Самый высокий уровень безопасности достигается при такой конфигурации
экранирующего маршрутизатора, когда это устройство полностью блокирует информационный поток к
заданным портам хоста-бастиона. МСЭ с экранируемым хостом показан на рис. 2.5.
Гибкая система конфигурирования маршрутизатора позволяет открывать или блокировать соедине-
ния внутренних узлов и Internet.
Основная функция хоста-бастиона состоит в разделении информационных потоков, представляю-
щих опасность, прежде чем они смогут достичь бастиона и других внутренних узлов. Поскольку хост-
бастион по сравнению с остальными элементами частной сети наиболее подвержен атакам, он обычно
является самым защищённым элементом сети. Как правило, в сети устанавливают два и более хоста-
бастиона.
Информационный
сервер
Остальные узлы
корпоративной сети
Internet
Экранированный
маршрутизатор
Хост-
бастион
Условные обозначения:
Трафик приложений
Остальной трафик
Рис. 2.5. Брандмауэр с экранируемым хостом
Преимущество данной структуры состоит в том, что информационный сервер общего пользования,
поддерживающий протоколы FТР, Telnet, НТТР, может находиться в сети между экранирующим мар-
шрутизатором и хостом-бастионом. Если нужно усилить систему защиты, то проводят такую конфигу-
рацию, что доступ к информационному серверу, который необходим и внешним, и внутренним пользо-
вателям, разрешается только через хост-бастион. На практике одной из основных функций хоста-
бастиона считается исполнение роли прокси-сервера для различных служб, включающих FТР, НТТР,
Telnet, DNS, SMTP.
К сожалению, если злоумышленнику удаётся прорваться через хост-бастион, то все узлы частной
сети становятся ему доступны. В брандмауэре с двунаправленным хостом невозможно пройти через
защитный хост, минуя соответствующий прокси-сервер. В отличие от этой схемы МСЭ с экранируемым
хостом требует наличия экранирующего маршрутизатора и хоста-бастиона.
Брандмауэр с экранирующей подсетью. Эта схема расширяет возможности рассмотренной выше
системы, в которой в качестве элемента защиты используется экранированный хост. Здесь тоже применя-
ются экранирующий, или внешний, маршрутизатор и хост-бастион. Однако данный защитный барьер, на-
зываемый демилитаризованной зоной (DеMilitarized Zone – DМZ), создаёт высший уровень безопасности
за счёт дополнительного периметра сети, усиливающего изоляцию частной сети от Internet. Межсетевой
экран определяет границы DMZ между внешним и внутренним маршрутизаторами, причём последний
находится ближе к частной сети. Демилитаризованная зона – это внутренняя экранирующая подсеть, гра-
ницами которой служат внутренний и внешний маршрутизаторы. Как показано на рис. 2.6, хост-бастион и
информационный сервер находятся внутри DMZ.
Рис. 2.6. Схема межсетевого экрана с применением экранирующей подсети
как средства защиты
DMZ можно рассматривать как изолированную сеть между частной структурой и Internet. Ограни-
чивая доступ к системам, расположенным в DMZ, внешний маршрутизатор защищает сеть от атак из-
вне. С его помощью блокируется и исходящий информационный поток от клиентов частной сети, кото-
рые не обладают соответствующими правами. Внутренний маршрутизатор управляет доступом из DMZ
в частную сеть. При этом осуществляется пропуск прямого трафика от хоста-бастиона к узлам частной
сети, находящимся вне DMZ, и соответствующего обратного потока.
Чтобы атака достигла какого-либо внутреннего узла, находящегося за DMZ, необходимо пройти оба
маршрутизатора. Кроме того, при данной архитектуре для внешних структур существует только сеть
DMZ, в то время как сама частная сеть остаётся закрытой. Однако формирование корректной конфигу-
рации двух маршрутизаторов и хоста-бастиона остаётся трудоёмким.
2.2. ВИРТУАЛЬНЫЕ ЧАСТНЫЕ СЕТИ
При обмене данными через незащищённые сети общего пользования безопасное соединение между
источником и приёмником сообщений обеспечивают виртуальные частные сети (Virtual Private Network
– VPN). Безопасное соединение обычно связывают с применением частных сетей. (Частная сеть пред-
ставляет собой структуру для обмена данными, которая принадлежит либо контролируется через аренду
выделенных линий связи конкретной организацией.) В этой главе рассматриваются методы, которые
VРN использует для преобразования характеристик незащищённой сети общего пользования в характе-
ристики частной защищённой сети. Сети VPN снижают стоимость удалённого доступа, применяя ре-
сурсы сетей общего пользования. По сравнению с другими решениями, включая и частные сети, VPN
предоставляет самую недорогую услугу.
Сети VPN уже на протяжении многих лет применяются в телефонии, а с развитием интеллектуаль-
ных сетей стали доминировать. Сети ретрансляции кадра, которые были рассмотрены ранее, тоже могут
быть отнесены к VPN. Понятие виртуальных частных сетей можно признать нововведением только для
технологии IР-сетей, таких как Internet. Вероятно, некоторые авторы потому применяют термины Inter-
net-VPN и виртуальной частной сети передачи данных, чтобы отделить VPN, описанные в настоящей
главе, от остальных структур с тем же названием. В этой части определение VPN является синонимом
определения Internet-VPN [4].
Цель виртуальной частной сети – обеспечить защищённый режим передачи пользовательских дан-
ных через незащищённый Internet. Это даёт возможность компаниям применять Internet в качестве
опорной сети для своих корпоративных структур, что позволяет создавать виртуальные защищённые
каналы для взаимодействия через Internet головных учреждений корпорации с филиалами либо удалён-
ными офисами. Из-за низкой стоимости службы VPN большая часть информационного потока теперь
направляется через виртуальные частные сети, базирующиеся на Internet, вместо ранее применявшихся
ГВС, обеспечивающих конфиденциальность.
VPN использует криптографирование данных и другие способы обеспечения безопасности, препят-
ствующие несанкционированному доступу к информации. Кроме того, эти методы направлены на обес-
печение гарантии того, что попытка модифицировать данные в процессе передачи по сети Internet будет
замечена. В технологии VPN применяется метод туннелирования для транспортировки шифрованных
данных через Internet. Туннелирование – механизм инкапсуляции одного протокола передачи данных в
другой. В контексте сети Internet под туннелированием подразумевается возможность инкапсулировать
в протокол IР зашифрованные пакеты протоколов IР, IРХ, Арр1еТаllk. Точно так же в контексте VPN
туннелирование маскирует исходный протокол сетевого уровня путём кодирования пакета и размеще-
ния зашифрованного пакета в IР-конверт, который, по сути, остаётся IР-пакетом и в защищённом режи-
ме передаётся через Internet. На приёмном конце конверт отбрасывается, а его содержимое декодирует-
ся и переправляется соответствующему устройству доступа, например маршрутизатору.
Представим, что корпорация создаёт частный туннель через Internet для безопасной доставки своих
данных.
Туннель позволяет корпорации создать виртуальную ГВС, используя Internet. Это значительно де-
шевле, чем построение частной ГВС, и лучше защищает от злоумышленников.
К тому же сети VPN гарантируют заданный уровень качества обслуживания QoS. Для VPN обычно
определяется верхняя граница среднего времени задержки пакета в процессе его передачи по сети. За-
данные требования могут включать и определение нижней границы полосы пропускания, доступной
для пользователя. Эти требования разрабатываются совместно с провайдером услуг через систему со-
глашений об уровне обслуживания (Service Level Agreement – SLA). Большинство поставщиков услуг
имеет собственные частные опорные IР-сети. Следовательно, провайдеры находятся в лучшем положе-
нии относительно обеспечения гарантий качества обслуживания. Однако эти сети охватывают значи-
тельно меньшие территории, чем Internet. Иногда провайдер услуг заключает частные двусторонние со-
глашения с другими операторами связи, частные IР-сети которых покрывают большие территории. Эти
соглашения позволяют провайдеру передать собственный высокоприоритетный трафик – поток данных
со строгими QoS-требованиями – в сети с гарантированным уровнем QoS, вместо того чтобы трансли-
ровать его через Internet, где величина задержки непредсказуема.
Виртуальные частные сети можно определить следующим образом:
VPN = туннелирование + защита + гарантирование QoS.
Далее рассматриваются способы туннелирования, использующиеся для построения сетей VPN.
Преимущества сетей VPN. Сети VPN не являются дорогостоящими: они обеспечивают доступ к
корпоративной сети для удалённого или мобильного пользователя по цене местного телефонного вызо-
ва.
Эти сети обеспечивают базу для построения корпоративных сетей intranet и ехtranet. Корпорации
могут использовать глобальный характер Internet и применять VPN для объединения всех своих филиалов
в частную сеть, называющуюся intranet. Часть сети intranet корпорация может сделать доступной для по-
ставщиков и стратегических партнеров, используя extranet. Оба типа сетей, intranet и extranet, детально
рассматриваются в главе 3.
Туннели VPN обеспечивают доставку немаршрутизируемых протоколов в конкретные участки ЛВС
корпоративной intranet. Таким же способом виртуальные частные сети позволяют определённым при-
ложениям достигать intranet.
Сети VPN значительно расширили возможности использования частных IР-адресов. Так как вместо
маршрутизации через ГВС приложения доставляются через туннели, компании могут назначать им соб-
ственные IР-адреса, поскольку эти адреса не привлекают излишнего внимания внешних пользователей.
Типы частных виртуальных сетей. В настоящее время существует три типа VPN. Несмотря на то,
что их разработка преследует одну цель – использовать Internet в качестве опорной сети для организа-
ции взаимодействия производственных подразделений компании, каждый тип удовлетворяет потребно-
сти различных групп организации:
− VPN доступа обеспечивают удаленных пользователей: коммивояжеров, мобильных пользовате-
лей, служащих, работающих дома, филиалы компаний – надёжной системой доступа в корпоративную
сеть;
− сеть intranet VPN позволяет осуществлять защищённое соединение филиалов с центральной ком-
паний;
− extranet VPN предоставляет защищённый доступ в корпоративную сеть потребителям, поставщи-
кам и партнёрам по бизнесу.
Ниже речь пойдёт о сети VPN как основе для построения intranet и ехtranet.
Архитектура VPN. Сеть VPN состоит из четырёх компонентов: клиента VPN, сервера доступа к се-
ти (Network Access Server – NAS), устройства, находящегося в конце туннеля, или сервера VPN, и про-
токола VPN. Для формирования канала виртуальной частной сети удалённый пользователь – VPN-
клиент – инициирует соединение РРР с сервером доступа провайдера через телефонную сеть общего
пользования. Сервер доступа к сети (NAS) – это устройство, на которое поступают вызовы по аналого-
вым либо цифровым линиям через ISDN. Оно принадлежит провайдеру услуг. После проверки прав
пользователя с помощью соответствующего метода аутентификации NAS направляет пакеты в туннель,
который соединяет его и сервер VРN. Последний может находиться либо у провайдера, либо в корпора-
тивной сети в зависимости от того, какая модель данного устройства применяется. (Модели VPN будут
рассмотрены позже.) Сервер VPN забирает пакеты из туннеля, разворачивает их и доставляет в корпо-
ративную сеть. Схема построения VPN представлена на рис. 2.7.
Рис. 2.7. Структура виртуальной частной сети
Для установки соединения VPN применяется четыре типа протоколов, причём три из них являются
расширенными модификациями протокола:
− протокол туннелирования для парного соединения абонентов (Point-to-Point Tunneling Protocol –
PPTP);
− протокол передачи данных на втором уровне модели ОSI (Layer 2 Forwar-ding – L2F);
− протокол туннелирования на втором уровне модели OSI (Layer 2 Tunneling – L2TP);
− стек IР-протоколов безопасности (IР Security Protocol – IPSec).
Когда протоколы РРТР и L2F были представлены на рассмотрение группе IЕТF, их характеристики
было решено объединить в общем протоколе туннелирования под названием L2ТР.
Предложенные типы протоколов можно разделить на протоколы туннелирования второго и третье-
го уровней модели ОSI. К первой группе относятся протоколы РРТР, L2F, L2ТР. Ко второй причислен
стек протоколов IРSес.
Работа протоколов туннелирования второго уровня модели OSI. Данный тип протоколов рабо-
тает на уровне линий связи – второй уровень модели ОSI. Эти протоколы сначала инкапсулируют пакеты
третьего уровня в пакеты РРР второго уровня и только потом инкапсулируют их в IР. Безопасность пере-
дачи информации обеспечивается протоколом РРР. Подлинность пользователя проверяется с помощью
существующих методов аутентификации протоколов РРР – РАР и СНАР. Для криптографирования дан-
ных не требуется никакого предварительного условия. Эта функция может быть исполнена самим поль-
зователем до его обращения к сервису VPN.
Общая схема процесса формирования туннеля для протоколов туннелирования второго уровня по-
казана на рис. 2.8. Клиент инициирует соединение РРР, вызывая по телефону сервер NAS. Затем с по-
мощью диалогового режима протокола управления каналом связи клиент непосредственно формирует
канал РРР.
Как только соединение установлено, NAS с помощью протокола РАР либо СНАР аутентифицирует
запрашивающего пользователя. Если проверка его подлинности завершилась успешно, то NAS пытается
установить соединение РРР с сервером VPN, используя согласование параметров по протоколу LСР. В
свою очередь сервер VPN применяет протокол РАР либо СНАР для аутентификации сервера доступа к
сети. Сервер VPN и клиент используют диалоговый режим протокола управления сетью для согласова-
ния протокола сетевого уровня. На этом процесс создания туннеля завершается.
Клиент
NAS
Сервер
VPN
Корпоративн
ый сервер
Вызов
Ответ
LSP-согласование
Аутентификационный
запрос РРР
Аутентификационный
ответ РРР
Запрос на открытие VPN
Ответ об открытии VPN
Успешная аутентификация РРР
Согласование по NCP
VPN-Соединение установлено
Рис. 2.8. Процесс создания туннеля для VPN
с помощью протоколов второго уровня
Протокол туннелирования для РРР. Этот тип протокола разработан компанией Мicrosoft совме-
стно с группой компаний – поставщиков оборудования, включая Ascend Communications и ЗСоm.
Данный тип протокола – РРТР – позволяет инкапсулировать в пакеты IР пакеты протоколов IРХ,
NetBEUI, IР, разрешая проходить приложениям не IР-типа через Internet. Как вариант РРР, он управляет
только парными соединениями абонентов, режим соединения одного абонента с несколькими невозмо-
жен. Важно отметить, что ядром РРТР является IР, т.е. данный протокол разрабатывался исключительно
для сетей IР.
При использовании РРТР сервер доступа к сети, разрешающий удалённому пользователю иниции-
ровать вызов через VPN, называют РРТР-концентратором доступа (Point-to-Point Tunneling Protocol Ac-
cess Concentrator – PAC), а к серверу VPN обращаются как к сетевому серверу РРТР (Point-to-Point Tun-
neling Protocol Network Server – PNS). Все компоненты виртуальной частной сети, построенной на осно-
ве РРТР, представлены на рис. 2.9.
В протоколе РРТР отсутствует режим криптографирования последовательных пакетов. Вместо это-
го используются возможности шифрования протоколов РАР и СНАР. Пакет РРТР инкапсулируется для
универсальной маршрутизации (Generic Routing Encapsulation – GRE) и затем передаётся через IР. РРТР
разделяет каналы данных и управления на поток управления, следующий через ТСР, и поток данных,
передаваемых через GRE. Формат пакетов РРТР показан на рис. 2.10. Полезные данные РРР состоят не-
посредственно из самих данных и заголовков IР.
Рис. 2.9. Элементы сети VPN, использующей протокол РРТР
Заголовок IP
Заголовок GRE
Заголовок РРР
Исходный
заголовок IP
TCP
Данные
Полезная информация РРР
Рис. 2.10. Формат пакета протокола РРТР
Протокол РРТР является узкоспециализированным, однако большинство современных сетей VPN
основано именно на нём. В РРТР для контроля за передачей информации применяется ТСР. ТСР обес-
печивает контроль скорости передачи, которая ограничивает объём передаваемых данных, сводя к ми-
нимуму необходимость повторных передач из-за отброшенных пакетов. Это способствует оптимально-
му использованию полосы пропускания.
Протокол передачи данных на втором уровне модели ОSI. L2F – это специализированный про-
токол, разработанный компанией Cisco Systems. Он не зависит от типа протокола, используемого на
предшествующем уровне, и поэтому используется для пересылки через сети Х.25, ретрансляции кадра и
АТМ.
Протокол L2F поддерживает IР, IРХ, АррleTalk и использует UDР для туннелирования через Inter-
net.
В сетях, где применяется L2F, сервер виртуальной частной сети называется базовым шлюзом. Для
аутентификации клиента, осуществляющего вызов по телефонной линии, этот протокол использует
РРР. L2F поддерживает и такие схемы проверки подлинности абонента, как RADIUS и ТАСАСS+. Ком-
поненты VPN, построенной на основе протокола L2F, показаны на рис. 2.11.
В отличие от РРТР протокол 2Р формирует собственный заголовок инкапсуляции, который не зави-
сит от IР и GRЕ. Это позволяет использовать L2F в различных типах сетей. На рис. 2.12 показан формат
пакета L2F Полезная информация, передаваемая протоколом SLIP/РРР, инкапсулируется в пакет L2F
месте с заголовком L2F и дополняется контрольной суммой, которая записывается в качестве оконча-
ния.
Рис. 2.11. Компоненты сети VPN, использующей протокол L2F
Заголовок L2F
Полезная информация SLIP/
PPP
Контрольная сумма L2F
(необязательный параметр
)
Рис. 2.12. Формат пакета протокола L2F
Протокол туннелирования на втором уровне модели OSI. Данный протокол (L2ТР) объединяет
свойства РРТР и L2F. В отличие от РРТP, который транспортируется посредством ТСР, L2ТР в качестве
транспортного протокола использует UDP, а не GRE. Так как многие межсетевые экраны не поддержи-
вают GRE, протокол L2ТР для них является более дружественным, чем РРТP В случае применения дан-
ного протокола сервер доступа к сети называют L2ТР – концентратором доступа (Layer 2 Tunneling Pro-
tocol Access Concentrator – LAC), а к серверу VPN обращаются как к сетевому серверу L2ТР (Layer 2
Tunneling Protocol Network Server – LNS). Все компоненты сети VPN, построенной на основе L2ТР,
представлены на рис. 2.13.
Рис. 2.13. Компоненты сети VPN, использующей протокол L2TP
Так как в L2ТР используются коммутируемые соединения РРР, то для аутентификации клиента
применяются протоколы РАР и СНАР. Однако для проверки прав абонента может быть использован и
RADIUS. Протокол L2ТР обеспечивает формирование нескольких туннелей для одной пары конечных
пунктов. В этом случае пользователь может создать набор туннелей с различными уровнями качества
предоставляемых услуг для двух взаимодействующих пунктов. Формат пакетов L2ТР показан на рис.
2.14.
Данный протокол поддерживается многими производителями оборудования. Предполагается, что
как только он получит статус стандарта, то станет наиболее используемым. Для криптографирования
данных при применении L2ТР используется стек протоколов IРSес. Если L2ТР обнаруживает, что IРSес
на удалённом конце не поддерживается, то применяется более слабая защита РРР. В зависимости от мо-
дели VPN криптографирование данных может осуществляться на рабочей станции клиента либо с по-
мощью концентратора доступа LАС.
Протокол туннелирования третьего уровня модели OSI. Cтек протоколов IРSес был первона-
чально разработан для усиления безопасности в ТСР/IР. Этот набор протоколов обеспечивает аутенти-
фикацию, конфиденциальность и целостность данных на уровне пакета. Всё это достигается введением
двух заголовков, обеспечивающих безопасность: заголовка аутентификации, который отвечает за цело-
стность заголовков и аутентификацию, но не обеспечивает конфиденциальности, и заголовка защиты
инкапсулированной полезной информации. Encapsutating Security Payload (ESP) позволяет криптогра-
фировать поступающие по очереди пакеты, при этом применяется стандартный протокол управления
ключами для шифрования. Таким образом, VPN может использовать либо АН, либо ESP или оба прото-
кола вместе. Authentication Header (АН) не обеспечивает режим криптографирования данных и поэтому
применяется, когда необходима лишь проверка подлинности. Затраты при использовании АН ниже, чем
при использовании ESP. Однако при необходимости криптографирования данных применяют ESP.
Заголовок IP
UDP
Заголовок РРР
Исходный
заголовок IP
TCP/UDP
Данные
Полезная информация РРР
Рис. 2.14. Формат пакета протокола L2TP
Недостаток IРSес заключается в том, что этот набор протоколов поддерживается только в IР-сетях.
Но для поддержания трафика сетей IРХ и АррlеТаlk, который не относится к IР-сетям, можно предло-
жить протоколы РРТР, L2F и L2ТР, поскольку они принадлежат второму уровню. В отличие от IРSес
протоколы туннелирования второго уровня поддерживают индивидуальные запросы на доступ по теле-
фонным линиям, поскольку в них применяется протокол РРР аутентификации клиента. Он разрешает
однородные телефонные соединения через провайдера. IРSес разработан для защиты линий связи меж-
ду маршрутизаторами и межсетевыми экранами, он не обеспечивает аутентификацию пользователя.
2.3. ТИПЫ СЕТЕЙ VPN
Есть два способа построения VPN второго уровня. Это NAS-инициируемая VPN и инициируемая
клиентом VPN. В обеих схемах VPN клиент инициирует удалённый вызов к провайдеру услуг связи по
телефонной линии. Главное различие систем заключается в протяжённости туннеля.
Инициируемая сервером доступа VPN. В NAS-инициируемой VPN клиент начинает сессию с
сервером доступа провайдера. В этом случае пользователю присваивается IР-адрес, который не зависит
от его IР-адреса в локальной сети. За туннелирование пакетов через Internet к сервер VPN отвечает NAS.
Эту схему взаимодействия иногда называют принудительной VPN, поскольку клиент не участвует в
её создании и при её использовании подчиняется принятым правилам. Криптографирование данных
осуществляется между серверами NAS и VPN и двумя функциональными единицами, образующими
концы туннеля. Принудительная схема VPN формируется без согласования с пользователем. Это озна-
чает, что для клиента VPN является прозрачной средой. Преимущество NAS-образуемой VPN состоит в
том, что схема поддерживает многоканальный режим обслуживания, а это сокращает расходы, связан-
ные с формированием отдельной VPN для каждого соединения. Однако подключение клиента к NAS
происходит вне границ туннеля. Это делает VPN уязвимой для атак.
Схема NAS-образуемой VPN с применением протокола L2ТР представлена на рис. 2.15. Данную
модель можно рассматривать и как VPN, использующую внешние ресурсы, в которой запросами на
удалённый доступ со стороны корпорации управляет провайдер. Эта модель наиболее приемлема для
организаций, в которых подразделения информационного обеспечения не имеют оборудования, необ-
ходимого для управления VPN.
Рис. 2.15. NAS-инициируемая модель VPN с применением протокола L2TP
Инициируемая клиентом VPN. Характерной особенностью данной схемы является то, что в рас-
поряжении клиента имеется служба VPN и, следовательно, у него установлено программное обеспече-
ние для работы с ней. Клиент VPN осуществляет вызов по телефонной линии провайдера услуг для
формирования сессии РРР.
Используя соединение с Internet, абонент устанавливает соединение с сервером VPN. В данной мо-
дели туннель проходит от VPN-клиента к VPN-серверу. Сервер доступа к сети не участвует в образова-
нии туннеля. Инициируемую клиентом VPN обычно называют добровольной, поскольку сам клиент оп-
ределяет, где и когда сформировать эту службу. Значит, клиент сам отвечает за необходимое крипто-
графирование данных при обмене между своим конечным оборудованием и VPN-сервером.
VPN-сервер может находиться как у провайдера услуг, так и в корпоративной сети. Если сервер
VPN находится внутри сети провайдера, то содержимое туннеля доставляется в корпоративную сеть че-
рез ГВС, которую маршрутизатор корпорации использует для доступа к провайдеру. В качестве ГВС
может выступать сеть ретрансляции кадра либо ISDN. Если сервер VPN находится в корпоративной се-
ти, то туннель проходит непосредственно от клиента в корпоративную сеть. Варианты схемы клиент-
образуемой VPN с использованием протокола L2ТР представлены на рис. 2.16. В первом случае сервер
VPN находится в сети провайдера, во втором – в корпоративной сети. Во втором варианте управление
виртуальной частной сетью осуществляется в основном клиентом.
Сравнение моделей VPN. Клиент-инициируемая модель позволяет удалённым пользователям, на
рабочем месте которых установлена программа клиент-VPN, использовать телефонную линию для
формирования туннеля в корпоративную сеть. При этом не требуется наличия у провайдера программ-
ного обеспечения для VPN, т.е. провайдер может не обеспечивать функции NAS.
в
Рис. 2.16. Инициируемая клиентом модель VPN с применением протокола L2TP
В NAS-инициируемой модели провайдер должен обеспечивать функции сервера NAS. В отличие от
NAS-инициируемой схемы инициируемая клиентом модель не привязывает сеть корпорации к какому-
либо одному провайдеру услуг. Это позволяет организации выбирать провайдера, не изменяя при этом
схемы адресации. Несанкционированный доступ в клиент-образуемую модель весьма затруднён. При
реализации данной модели компания может не передавать базу данных проверки подлинности клиентов
провайдеру услуг. Поскольку организация сама контролирует оба конца туннеля, она же и определяет тре-
бования к аутентификации пользователей для предотвращения несанкционированного доступа к информа-
ционным ресурсам. В NAS-инициируемой модели компания вынуждена предоставлять свою базу аутенти-
фикации провайдеру услуг. В этом случае у злоумышленника есть возможность проникнуть в сеть провай-
дера, воспользовавшись ошибочным опознанием.
NAS-инициируемые сети VPN позволяют клиентам поддерживать туннелирование данных, не при-
бегая к модернизации аппаратуры и к установке соответствующего программного обеспечения. Однако
в этой модели провайдер сам управляет распределением адресного пространства и аутентификацией.
Корпорации, возможно, понадобится реструктурировать схему распределения адресов, с тем, чтобы со-
гласовать её с разработанной провайдером схемой. К тому же необходимо информировать провайдера
обо всех изменениях, осуществляемых в корпоративной сети.
Протоколы VPN уровня 3, например IРSес, более приспособлены для NAS-образуемой модели, по-
скольку их разработка изначально предусматривала обеспечение защиты между маршрутизатором и
межсетевым экраном.
На практике функции NAS встраиваются в маршрутизатор, а функции сервера VPN передаются
межсетевому экрану. IРSес входит в состав протокола IРv6. Таким образом, если клиент VPN не ис-
пользует протокол IРv6, то экономически неоправданно дополнять программное обеспечение его ко-
нечной станции функциями стека протоколов IРSес. Возможно, экономически более выгодно, чтобы эти
функции исполнялись сетевым сервером доступа самого провайдера.
Межсетевые экраны и сети VPN. МСЭ и VPN тесно связаны между собой. Большинство бранд-
мауэров обеспечивает туннели от одного МСЭ до другого с шифрованием передаваемых данных. В ча-
стности, шлюзы приложений обеспечивают закрытие IР-адресов с помощью инкапсуляции одного IР-
пакета в другой. Согласно нашему определению, это туннелирование через виртуальную частную сеть.
МСЭ контролирует доступ к корпоративным сетевым ресурсам и способствует спокойной работе
пользователя в сети. Рассмотрим структуру сети, представленную на рис. 2.17. Брандмауэр в каждой
сети контролирует доступ к её ресурсам. Однако данные, транслируемые между двумя областями через
Internet, могут быть подвержены атакам злоумышленников.
Рис. 2.17. Межсетевые экраны, обеспечивающие проверку прав доступа
в обе взаимодействующие сети
Рис. 2.18. Схема организации туннеля VPN между двумя МСЭ
Сети VPN были созданы для обеспечения конфиденциальности между двумя кронами, причём
обычно доверительных отношений между ними нет. Комбинация МСЭ и VPN, с одной стороны, уста-
навливает доверительные отношения между двумя областями, с другой – обеспечивает конфиденциаль-
ность передачи данных. Такой подход в плане защиты значительно эффективнее схем, в которых преду-
смотрено наличие только МСЭ в обеих областях либо только VPN между ними. Туннель VPN между
двумя межсетевыми экранами показан на рис. 2.18.
Раньше брандмауэры обеспечивали только функции барьеров безопасности. Однако в настоящее
время их возможности дополнены функциями VPN. Совмещение функций межсетевых экранов и VPN
увеличивает эффективность контроля безопасности.
Глава 3. ПРИЛОЖЕНИЯ ДЛЯ ВИРТУАЛЬНЫХ
ЧАСТНЫХ СЕТЕЙ
В соответствии с приведённым во второй главе и [4] определением виртуальная частная сеть пред-
ставляет собой безопасную сеть связи, встроенную в незащищённую сеть общего пользования. Под не-
защищённой обычно подразумевается сеть Internet. В предыдущей главе представлен только один из
трёх типов сетей VPN-VPN доступа. Ниже рассматриваются сети intranet, VPN и extranet VPN, обсуж-
даются вопросы применения VPN для организаций и поддержки IР-телефонии – системы передачи речи
с использованием IР.
3.1. СЕТИ INTRANET
Благодаря Internet между компьютерами может вестись обмен данными независимо от операцион-
ной системы, управляющей их работой. Технологии, применённые в Internet, способствовали продви-
жению на рынке самой системы, поскольку появилась возможность доступа к приложениям с помощью
любой платформы. Использование гиперссылок упростило перемещение и поиск необходимой инфор-
мации. Поскольку сеть Internet считается незащищённой структурой, бизнесмены в отличие от учёных
не сразу начали применять её в работе. Однако дальнейшие разработки и внедрение VPN изменили по-
добное отношение. В настоящее время защищённость сети Internet оценивается как достаточная для пе-
редачи важной информации [4].
Компании пришли к выводу, что технологии Internet и Web обеспечивают высокий уровень взаимо-
действия и мощные средства доступа к информации. Использование этих технологий позволяет разви-
вать корпоративные внутренние сети – intranet. Они представляют собой систему внутреннего взаимо-
действия, основанную на технологии Internet, включая службы Web, ТСР/IР, НТТР, язык создания ги-
пертекста (HyperText Markup Language – HTML). Таким образом, работники компании могут обратить-
ся к intranet для поиска необходимой информации либо отправления электронных сообщений. Intranet –
это база накопленных в корпорации знаний, собранный положительный опыт работы организации. Ин-
формация, доступная специалистам непосредственно с их рабочих мест, помогает лучше понять цели
корпорации, производственные процессы, отношения и способы взаимодействия, принятые в компании.
Рис. 3.1. Схема организации intranet c тремя сетями филиалов
Как правило, в большинстве организаций служащие привыкли полагаться на указания руководителя
о необходимости получения той или иной информации. Посредством сетей intranet эту модель отноше-
ний можно изменить. Специалист сам решает, какая информация ему необходима.
Intranet можно организовать в частных IР-сетях, объединяющих филиалы компаний в единую за-
щищённую сеть. Её можно создать и при участии провайдера, используя Internet и intranet VPN. На рис.
3.1 показана сеть intranet и три сети филиалов, которые присоединяются к корпоративной структуре с
использованием защищённых IР-туннелей на основе сетей intranet VPN.
Структура intranet. Сети intranet построены с использованием того же инструментария, что Inter-
net и Web-приложения. Первый шаг в разработке сети intranet состоит в создании внутреннего Web-
сайта. Но прежде чем компании приступят к созданию своих ресурсов, им необходимо решить ряд во-
просов. Какая операционная система будет использована в качестве платформы для Web-сервера? Ка-
кую базу данных применить? Каким образом осуществлять контроль доступа и какой тип браузера ис-
пользовать? Какой инструментарий НТМL потребуется для разработки приложений?
Информацию на Web-сайте необходимо обновлять как можно чаще, с тем чтобы поддерживать у
пользователя интерес к ресурсу компании. Кроме того, желательно, чтобы сайт был прост в эксплуата-
ции; он должен включать авторскую систему, которая поможет пользователю оформить свои материалы
и отправить их на сайт.
Использование intranet. Intranet – это вспомогательный инструмент, позволяющий распространять
информацию, которая принадлежит данной корпорации, в диалоговом режиме. Компания может раз-
местить в intranet значительную часть документов, чтобы служащие могли ознакомиться с приказами,
просмотреть записи заказчиков, вместе обсудить реализацию новых проектов. С помощью intranet про-
ще определить сферу корпоративных интересов, выработать общий взгляд на предмет и основные
принципы стельности компании, сделав эту информацию доступной для всех. Следовательно, сеть
intranet создаёт благоприятные условия для работы в команде.
Корпоративные новости и финансовая информация. В сети intranet можно размещать важней-
шие корпоративные документы, включая квартальные и годовые отчёты, решения собраний акционе-
ров, план работ, сообщения президента компании. Более того, сеть можно использовать для внесения
сведений об организационных изменениях, достижениях компании, для освещения важных событий и
новостей дня или недели.
Информация о рынках сбыта и продажах. В сети intranet можно разместить информацию компе-
тентных аналитиков о продажах, последних достижениях заказчиков, сведения о презентации товаров и
ведущих производителях. Компании, обеспечивающие ограниченный доступ к такой информации, мо-
гут создавать себе рекламу, предоставляя потенциальным заказчикам конфиденциальную информацию.
Информация о производстве. Производители товаров используют сеть intranet для размещения
документов ISO 9000 и планов выпуска новой продукции.
Информация о кадрах. Отдел кадров может использовать intranet для размещения информации о
доходах компании, политике управления, рабочих местах и ассортименте товаров. Internet позволяет
компаниям рассылать бланки документов, заполняемых потенциальными сотрудниками в интерактив-
ном режиме. Следовательно, специалисты, включая удалённых пользователей, могут, получив эти до-
кументы, вывести их на печать.
Некоторые корпоративные сети требуют от пользователей, чтобы бланки документов заполнялись
вручную, в других это осуществляется в электронном режиме. Возможность формировать требуемые
документы электронным способом позволяет отделу кадров эффективнее работать с этими документа-
ми.
Например, служащие предпенсионного возраста могут определить своё жалованье, воспользовав-
шись информацией intranet. Для соблюдения конфиденциальности сведений, поступающих на бланках
от потенциальных специалистов, допустимо контролировать доступ к данной информации путём ввода
специалистами пароля либо других форм электронных идентификаторов, прежде чем их записи будут
обработаны.
Информация учебных центров. Большинство компаний имеет собственные образовательные цен-
тры, в которых проводится обучение специалистов. В intranet можно поместить информацию о курсах,
организованных учебным центром, и режиме их работы. Запись на них проводится в диалоговом режи-
ме.
Организация обсуждений с использованием Intranet предоставляет специалистам возможность
обращаться к электронным доскам объявлений, что помогает формировать группы для обсуждения про-
ектов. На доске объявлений можно оставить собственные сообщения и познакомиться с мнением коллег
относительно проводимой работы.
Разработка проекта. Члены группы по разработке совместного проекта могут использовать intranet
для обмена актуальной информацией. В данном приложении обычно требуется контролировать доступ
ко всем нужным сведениям, чтобы получить их могли только члены группы, работающие над проектом.
3.2. СЕТИ EXTRANET
Подобно intranet, сеть extranet основана на технологиях Internet. Однако в отличие от intranet она
является совместной сетью, объединяющей организации специалистов, поставщиков, заказчиков и
стратегических партнёров. Сеть extranet – это мост между общей сетью Internet, работать в которой мо-
жет любой человек, и корпоративной сетью intranet, доступной только для представителей конкретной
организации. Предпосылкой для организации extranet является наличие корпоративной intranet.
В данном разделе представлена основная информация о сетях extranet, их преимуществах, структуре
и использовании.
Преимущества extranet. Extranet позволяет деловым партнёрам взаимодействовать более эффек-
тивно, поскольку каждый из них получает быстрый доступ к важной информации. Например, комми-
вояжер может незамедлительно получить данные о товаре через extranet, не прибегая при этом к услу-
гам агента по продажам.
Компании размещают свою информацию в extranet, с тем чтобы донести её до ведения поставщи-
ков, агентов по продажам, стратегических партнёров; при этом отпадает необходимость в том, чтобы
создавать и печатать документы на бумаге. Такой подход приводит к значительной экономии времени.
Поскольку подобная информация часто обновляется и периодически вновь рассылается всем заинтере-
сованным пользователям, то и экономия финансовых средств за счёт использования extranet может ока-
заться значительной. Помимо снижения стоимости доставки сообщений, сокращения времени доступа к
необходимым данным extranet предоставляет пользователю наиболее актуальную информацию.
Рис. 3.2. Сеть extranet
Сеть extranet (рис. 3.2) соединяет корпоративную сеть с тремя филиалами, сетью потребителей то-
варов и стратегических партнёров через extranet VPN, которые на рисунке представлены как защищён-
ные IР-туннели.
Структура extranet. Основными компонентами extranet являются [4] Web, Internet и система меж-
сетевых экранов. Web делает extranet независимой от платформы. Это основное преимущество по срав-
нению с традиционными системами клиент–сервер, в которых требуется, чтобы все рабочие станции
использовали единое программное обеспечение, а значит, и одинаковую операционную систему. Меж-
сетевой экран усиливает контроль за доступом в частную корпоративную сеть intranet. Конфигурирова-
ние extranet можно сравнить с просверливанием отверстия в межсетевом экране для обеспечения досту-
па в сеть избранной группе внешних пользователей.
Сеть extranet разработана для специализированных бизнес-приложений, таких intranet как деловая
переписка, сотрудничество в рабочих группах, подача и заполнение документов в интерактивном режи-
ме, обработка запросов к базам данных. Несмотря на то, что сеть создавалась для выполнения опреде-
лённых задач, она должна быть достаточно гибкой, чтобы к ней можно было легко подключить новых
пользователей и организации.
Главной особенностью сети extranet является её защищённость. Безопасность extranet подразумева-
ет защиту информации, передаваемой в интерактивном режиме, и баз данных. Разработанная стратегия
защиты, рассмотренная выше применительно к МСЭ, распространяется и на extranet. Хорошая органи-
зация сети предусматривает наличие тщательно разработанного плана и концепции защиты. При разра-
ботке в группах проектов с использованием extranet необходимо уделить особое внимание вопросам ау-
тентификации перед предоставлением доступа в сеть. Следует тщательно продумать привилегии групп
и способы их реализации. Обе операции: аутентификация и проверка полномочий, или авторизация, –
особенно важны в технологии extranet. Авторизация гарантирует, что пользователь получит доступ к
ресурсам в соответствии с принятой сетевой политикой. Поскольку extranet объединяет несколько поль-
зовательских сетей и intranet, сеть лучше строить с применением не частных, а стандартных протоколов.
В виртуальной частной сети extranet лучше использовать L2ТР либо IРSec.
В настоящее время сети extranet стремительно развиваются. Поскольку существующие устройства
плохо справляются с задачей доступа к сетям extranet, на рынке появился новый класс устройств доступа
– коммутаторы доступа extranet. Данные устройства выполняют функции обеспечения защиты VPN, ха-
рактеризуются более высокой производительностью и удовлетворяют возросшим требованиям к возмож-
ностям управления.
Другая проблема, требующая решения при разработке extranet, – это простота эксплуатации. Поль-
зователь должен иметь доступ в сеть через любой Web-браузер. Данный процесс не должен быть слож-
нее доступа в Internet, хотя в этом случае могут потребоваться дополнительные шаги для аутентифика-
ции пользователя.
Приложения, использующие сети extranet. В extranet можно работать с приложениями для дело-
вых совместных операций. Эти приложения считаются альтернативной средой для проведения элек-
тронных коммерческих операций между корпорациями либо между продавцами и покупателями. Ком-
пании, использующие электронную сеть для реализации товаров и услуг, сокращают затраты на поиск
потребителей.
Extranet может применяться компаниями-производителями с целью снижения расходов на услуги
связи, на проведение инвентаризаций. Через сеть extranet можно уведомлять поставщиков о времени
доставки наиболее важных составляющих заказа.
Сеть extranet используют для оповещения покупателей и партнёров по бизнесу об особенностях
произведённого товара ещё до его появления на рынке. Своевременное получение откликов от потенци-
альных клиентов поможет скорректировать действия по реализации товара.
Обеспечение безопасности extranet. В процессе эксплуатации extranet необходимо обеспечить
безопасность и контроль доступа. Деловые партнёры с сомнительной этикой ведения коммерческих
операций представляют определённый риск для безопасности сети. Для предотвращения утечки инфор-
мации через систему защиты большинством компаний используется комбинация из межсетевых экра-
нов, когда, например, один устанавливают на уровне обмена пакетами сообщений, другой – на уровне
приложений.
МСЭ на уровне приложений могут применяться для обеспечения контроля доступа, что позволяет
пользователям обращаться только к разрешённым устройствам.
3.3. IР-ТЕЛЕФОНИЯ
К IР-телефонии относится любое приложение, связанное с телефонией и использующее в качестве
среды передачи ЛВС, intranet, extranet и Internet. Сигнал для передачи бывает речевым либо факсимиль-
ным. Интерес к данной технологии связан с тем, что компания может значительно сократить расходы на
передачу различных видов информации (речевой, видеосигналов, данных), если передает их через Inter-
net. Передача речевого сигнала посредством протокола Internet (Voice Over IР – VoIP) особенно эффек-
тивна для компаний, у которых значительный объём переговоров связан с использованием протяженных
междугородных и международных линий связи. Такие организации могут избежать значительных расхо-
дов на телефонные переговоры между филиалами, оплатив доступ в Internet, что предоставляет право на
неограниченное количество обращений в сеть. Этот вид доступа позволяет передавать цифровой речевой
сигнал по каналам Internet, и компании могут осуществлять связь со всем миром без оплаты телефонных
счётов за использование каналов сети общего пользования.
Структура VoIР. Главный компонент структуры VoIР – это шлюз VoIР. Предположим, что VoIР
необходимо использовать для соединения корпоративной и удалённой сетей филиала офиса. Для этого
применяются два шлюза VoIp, причём один из них подключается к корпоративной ЛВС, а второй – к
локальной сети филиала. Каждый шлюз с помощью интерфейса Т1 подключается к соответствующей
АТС офиса, которая соединена с аналоговыми телефонными линиями. АТС офиса подключается к те-
лефонной сети общего пользования, а шлюз получает доступ в сеть Internet либо к корпоративной intra-
net через маршрутизатор. В отдельных случаях телефоны подключаются непосредственно к шлюзам
VoIР, что позволяет использовать их в качестве АТС офиса. Некоторые типы шлюзов VoIР обеспечи-
вают и функции маршрутизации. Они могут быть подключены непосредственно к Internet без направле-
ния пакетов сообщений на маршрутизатор.
Шлюзы VoIР обеспечивают исполнение следующих основных функций:
− преобразование адреса. Когда шлюз источника получает номер пункта назначения, он преобразует
его в IР-адрес шлюза пункта назначения;
− установка исходящего соединения. Шлюз источника отвечает за установку соединения со шлю-
зом пункта назначения, за обмен сигналами вызова, служебными данными, дополнительной информа-
цией, связанной, в частности, с режимом обеспечения безопасной работы;
− цифровое преобразование. Одним из требований, предъявляемых к шлюзу, является цифровое
преобразование аналоговых сигналов. Эти сигналы поступают от телефонов, которые не подключены к
АТС офиса либо к другому конечному оборудованию, обеспечивающему функции преобразования сигна-
ла в 64 кбит/с РСМ-сигнал (Pulse Code Modulation – импульсно-кодовая модуляция). Эта функция опуска-
ется, если имеется АТС офиса;
− сжатие динамического диапазона сигнала. Закодированный с помощью РСМ речевой сигнал
преобразуется шлюзом источника с использованием соответствующей схемы компрессии для передачи
со скоростью менее 8 кбит/с;
− преобразование сигнала для пакетной передачи речи. Сжатый речевой сигнал преобразуется в
пакеты сообщений для передачи в ЛВС. Затем эти пакеты обрабатываются маршрутизатором и отправ-
ляются дальше в Internet;
− восстановление динамического диапазона. Шлюз пункта назначения восстанавливает принятые
речевые IР-пакеты в исходную форму 64 кбит/с сигнала РСМ, прежде чем направить их к АТС офиса.
Заметим, что существуют различные шлюзы для обработки речевых и факсимильных потоков. Не-
которые устройства работают только с факсимильными сообщениями, другие – только с речевой ин-
формацией; имеются устройства, обслуживающие оба вида потока.
Возможности предыдущей модели для пользователей корпоративной сети неограничены. Провай-
дер может предложить услугу VoIР, установив телефонный шлюз, доступ к которому возможен для лю-
бого абонента телефонного аппарата. Имея это в виду, можно предложить несколько конфигураций пе-
редачи речевых сообщений через Internet: с одного телефона на другой, с телефона на ПК, с ПК на те-
лефон, с ПК на ПК. Введём определение ПК-вызова и телефонного вызова. ПК-вызов представляет со-
бой вызов, который осуществляется с компьютера, находящегося в корпоративной сети и оборудован-
ного звуковой картой. На рис. 3.3 такие компьютеры помечены буквами А, В. Телефонный вызов осу-
ществляется пользователями, подключёнными непосредственно к АТС офиса, на рисунке они отмечены
как С, D.
В следующих пяти примерах используется схема сети, показанная на рис. 3.3.
Рис. 3.3. Схема построения системы передачи голоса через Internet
Вызов с одного телефона на другой. Рассмотрим вызов, поступивший с аппарата абонента С, который
подключён к корпоративной АТС, на номер абонента В, соединённого с АТС филиала офиса. Во время на-
бора абонентом С номера D анализируется поступающая последовательность цифр и выясняется, что вызов
дальний и должен обрабатываться шлюзом ТG1.
АТС направляет цифровую последовательность вызова к шлюзу VoIР, где по каталогу определяется
местоположение абонента D и его шлюза VoIР ТG2. Затем ТG1 устанавливает Internet-соединение со
шлюзом ТG2, откуда вызов перенаправляется к размещённой в филиале офиса АТС2, соединённой с або-
нентом D. Если этот вызов местный и предназначается для абонента Е, АТС источника направит вызов
по обычной телефонной линии. АТС перешлёт дальний вызов пользователя F шлюзу ТG1, который от-
вечает за определение местоположения телефонного шлюза абонента F и перенаправляет данному уст-
ройству поступивший вызов.
Вызов с телефона на компьютер. Рассмотрим вызов от абонента С, подключённого к корпоратив-
ной АТС. Вызов направлен абоненту В, который использует компьютер с соответствующим оборудова-
нием, соединённый с ЛВС филиала. Вызов проходит от АТС к ТG1, последний передаёт его на ТG2, ис-
пользуя для этой цели Internet. Шлюз ТG2 отвечает за пересылку приходящих речевых пакетов пользо-
вателю В.
Вызов с компьютера на телефон. При вызове абонентом А, подключённым к корпоративной ЛВС,
абонента D, который связан с АТС филиала, вызов принимает ТG1 и транслирует его ТG2. Последний
направляет вызов к АТС филиала, соединяющей его с абонентом D.
Вызов с компьютера на компьютер. Если источником вызова является абонент А, находящийся в
корпоративной ЛВС, а получателем – абонент В, чей компьютер подключён к ЛВС филиала, то вызов
принимает ТG1, а затем устанавливается Internet-соединение с ТG2. Последний отправляет пакеты с
указанием адреса получателя (абонента В) в режиме широковещания в ЛВС филиала.
Вызовы внутрисетевые и межсетевые. Метод VoIР можно применить к вызовам внутри сети и
между сетями. Вызов внутри сети – это соединения между двумя участками одной корпоративной сети.
Пример такого вызова от пользователя А абоненту D приведён на рис. 3.3, где оба пользователя нахо-
дятся в корпоративной сети. При межсетевом вызове одна из участвующих сторон находится внутри
корпоративной сети, другая – в удалённой области. Примером такого вызова может служить обраще-
ние, инициированное абонентом А к пользователю F, который находится вне границ корпоративной се-
ти, поддерживающей передачу речевых сообщений, т.е. в межсетевой области. Данный вызов реализу-
ется в два этапа. На первом пользователь А отправляет Internet-вызов шлюзу ТG2. На втором этапе
шлюз отправляет АТС2 команду осуществить вызов к абоненту F, подключённому к местной телефон-
ной сети общего пользования. Для вызовов из межсетевой области необходимо наличие АТС в корпо-
ративной сети, которая осуществляет вызов интересующего абонента через местную телефонную сеть.
Проблемы в Internet-телефонии. Структура Internet представляет собой объединение более 100
тыс. сетей и является сетью коммутации пакетов. Поэтому аналоговый речевой сигнал, предназначен-
ный для передачи по телефонным линиям связи, должен быть преобразован прежде, чем начнёт транс-
лироваться по компьютерной сети. На первой ступени речевой сигнал преобразуется в цифровой; затем
преобразованные данные сжимаются для уменьшения скорости передачи со стандартной для телефонии
величины 64 кбит/с до 8 кбит/с либо ещё меньше. На данном этапе необходимо убедиться, что потеря
качества речевого сигнала минимальна. Затем сжатые данные преобразуются в пакеты и направляются в
сеть.
Качество передачи речи. Одной из проблем, связанных с технологией VoIP, является качество
предоставляемой услуги. Пользователь ожидает получить определенное качество передачи речи, осно-
вываясь на личном опыте общения по телефону через сеть РSТN. К сожалению, качество передачи ре-
чевых сигналов с использованием Internet пока ниже уровня, достигнутого РSTN (Public Switched Tele-
phone Network – телефонная сеть общего пользования), которая обеспечивает гарантированную ско-
рость передачи сигнала 64 кбит/с. Так как Internet – это сеть передачи пакетов, то отдельные пакеты во
время передачи речевой информации могут проходить по различным маршрутам, соединяющим два
пункта. Хотя это позволяет более эффективно использовать сетевые ресурсы по сравнению с обычной
телефонной сетью, данное преимущество имеет и оборотную сторону. Пакеты в процессе маршрутиза-
ции от одного пункта к другому испытывают различную задержку времени. Кроме того, сохраняется
вероятность их потери.
При передаче голоса в режиме реального времени величина задержки сигнала между конечными
пунктами служит важным критерием оценки системы. Более того, необходимо, чтобы эта величина на-
ходилась в определённых границах.
Изменения задержки называются рассинхронизацией пакета. Поскольку Internet испытывает боль-
шие нагрузки, пакеты при перегрузке сети могут отбрасываться. Во многих системах пакетной передачи
речевого сигнала с этими проблемами борются, используя фиктивные пакеты вместо задержанных или
утерянных при воспроизведении речевой информации. Для создания фиктивных пакетов применяются
многочисленные алгоритмы. Например, можно предложить повторную передачу предыдущего пакета,
если следующий не поступил вовремя. Когда требуемый пакет наконец доставлен, он отбрасывается,
поскольку его место уже занято фиктивным. Конечно, полученное качество уступает тому, что достиг-
нуто при использовании каналов сети РSТN.
Большинство компаний проблему потерянных и задержанных пакетов решают ограничением сер-
виса VoIP пределами своих сетей intranet. В этих сетях гарантированное качество услуги достигается в
результате заключения соглашения с провайдером. Сеть intranet, граница которой не выходит за опор-
ную IР-сеть провайдера, более надёжна в эксплуатации по сравнению с intranet, пересекающей Internet.
Если провайдер гарантирует неизменность таких параметров, как величина задержки и отсутствие рас-
синхронизации пакетов, то качество услуги может приближаться к уровню, предоставляемому РSТN.
Стандарты и функциональная совместимость. Другая проблема технологии VoIP связана с
функциональной совместимостью оборудования. Так, компании, установившей шлюзы VoIP, приходит-
ся закупать комплектующие у того же производителя, поскольку аппаратное обеспечение двух разных
поставщиков часто оказывается несовместимым.
Для того, чтобы телефонный шлюз смог преобразовать речевой IР-пакет, отправленный ПК, в сиг-
нал для передачи по телефонной линии и осуществить обратное преобразование, необходимо, чтобы
оба устройства были снабжены кодером/декодером, иначе говоря, кодеком одного производителя. В не-
которых стандартах предпринята попытка разрешить проблему совместимости устройств. Это IТU-Т
Н.323, протокол резервирования ресурсов (Resource reservation Protocol – RSVP), и протокол быстрого
доступа к директории (LDAP).
Рекомендации Н.323 сектора стандартизации ITU. Документ Н.323 представляет собой ряд реко-
мендаций, охватывающих различные аудио- и видеостандарты кодирования данных. В нём определён ме-
тод установки соединений с использованием сети Internet. Эти рекомендации основаны на использовании
протокола передачи данных в режиме реального времени и протокола управления передачей данных в ре-
жиме реального времени – для контроля за передачей звуковых и видеосигналов. Иногда документ Н.323
называют всеохватывающей рекомендацией, поскольку он ссылается на другие документы. Они включают
в себя следующие стандарты: ITU-Т G.711, ITU-T G.722, ITU-Т G.723, ITU-Т G.723.1, ITU-Т G.728 и ITU-Т
G.729 – для речевых кодеков; ITU-Т Н.225.0 – для формирования пакетов и контроля вызова; ITU-Т Н.245 –
для открытия и закрытия каналов передачи аудиовизуальной информации и возможности обмена данными
между терминалами; ITU-Т Н.261 и ITU-Т H.263 – для видеокодеков; ITU-Т Т.120 – для мультимедийной
связи (контроль передачи данных и управление видеоконференциями). Предполагается, что терминалы, ис-
пользующие в работе Н.323, поддерживают стандарт ITU-Т Q.931 для установки вызова, который является
стандартом обмена системной информацией – сигнализацией.
В марте 1997 г. на форуме VoIР рекомендовали заменить стандарт G.729 на G.723.1, поскольку по-
следний повышает эффективность использования полосы частот. Кодеки, построенные с использовани-
ем стандарта G.723.1, сжимают полосу пропускания речевого сигнала с 64 до 6,3 кбит/с, в то время как
предыдущий стандарт допускал сжатие только до 8 кбит/с. Скорость передачи, соответствующая 8
кбит/с, обеспечивает более высокое качество сигнала, чем величина 6,3 кбит/с, но на форуме VoIР было
решено пожертвовать качеством сигнала в обмен на повышение эффективности полосы пропускания.
Контроль качества обеспечивается исполнением трёх служебных функций контроля – регистрации, ли-
нии связи, состояния (Registration, Admission, Status – RAS) стандарта Н.245, которые в рекомендации ITU-Т
Q.931 называются сигнализацией. Стандарт Н.245 связан с установлением надёжного канала, необходи-
мого для передачи управляющих сообщений стандарта Н.323. Эти сообщения включают возможность
обмена данными, передачу информации об управлении потоком, команды открытия и закрытия логиче-
ских каналов. Сервер Q.931 используется для формирования соединения между терминалами Н.323.
RAS обеспечивает регистрацию, контроль над каналом, передачу адресов, контроль за полосой частот.
Схема на рис. 3.4 представляет собой модификацию схемы, показанной на рис. 3.3, и иллюстрирует
формирование соединения для передачи служебной информации.
Сигнализация осуществляется следующим образом. Когда абонент поднимает телефонную трубку,
инициирующая вызов АТС офиса поддерживает тоновый набор так же, как и при обычном телефонном
вызове. После приёма набранных цифр АТС пересылает номер шлюзу VoIP.
Если обнаружен местный вызов, на АТС офиса следует команда о его передаче по локальной сети –
либо внутри с использованием самой АТС, либо через местную телефонную сеть общего пользования.
Если АТС офиса имеет программное обеспечение, то решение относительно обработки поступившего
вызова принимается автоматически. Для дальних вызовов VoIP инициирует соединение ТСР через порт
1720, который отводится под Н.323 через маршрутизатор исходящего вызова к шлюзу VoIP пункта на-
значения. Затем, используя полученную линию связи, шлюз источника отправляет пакеты Q.931.
Логическое соединение для
передачи сигнальной информации
TG 1
TG 2
Телефонный
шлюз
Маршрутизат
ор
Туннель VPN
Маршрутизат
ор
Телефонный
шлюз
Internet
ATC2
АТС 1 АТС 2
С D
Рис. 3.4. Схема логического соединения двух телефонных шлюзов
для передачи служебной информации
После обмена пакетами Q.931 осуществляется соединение Н.245 через порт ТСР с адресом боль-
шим, чем 1024. Номер этого порта обычно устанавливается в процессе обмена пакетами Q.931. С этого
момента предыдущее соединение ТСР может быть закрыто. Параметры вызова – тип используемого ко-
дека, адреса RТР и RТСР – согласовываются при обмене сообщениями Н.245. После выбора параметров
Н.245 выполняет последовательность открытия логического канала, используемую для формирования
соединений UDP.
В рекомендации Н.323 отмечается, что логический канал должен быть двунаправленным. Таким
образом, для организации связи необходимо установить две логических линии связи: одну – от источ-
ника к получателю, другую – в обратном направлении. После рассылки сообщений с указанием адресов
и портов для RТР и RТСР источник может начать активную передачу речевых пакетов, которые транс-
лируются в форме RТР с использованием протокола UDP. Процедура управления вызовом VoIP показа-
на на рис. 3.5.
Пакеты для передачи речевых сигналов формируются как пакеты UDP/IР, а не как сообщения
ТСР/IР. Это объясняется тем, что протокол ТСР/IР осуществляет коррекцию ошибок методом повтор-
ной передачи пакета. Ретрансляция пакета приводит к значительной задержке, что не улучшает качест-
во речевого сигнала. Протокол UDP не осуществляет ретрансляцию пакетов. Кроме того, он может ис-
пользоваться в комбинации с изложенной выше схемой передачи пакетов, в которой производится за-
мена потерянных либо повреждённых пакетов на фиктивные. Повторное воспроизведение незаметно,
если число фиктивных пакетов не превышает 5 % от общего числа переданных пакетов.
Источник Н.323
Пункт назначения Н.323
Соединение ТСР
УСТАНОВИТЬ
Q.931
(через ТСР)
ГОТОВНОСТЬ
СОЕДИНИТЬ (адрес Н.245)
Соединение ТСР
Сообщения Н.245
Открыть логический канал (адрес RTCP)
Подтверждение открытия логического канала (адреса
RTCP&RTP)
Открыть логический канал (адрес RTCP)
Н.245
(через ТСР)
Подтверждение открытия логического канала (адреса
RTCP&RTP)
Поток RTP
Поток RTP
Поток RTP
RTP
(через UDP)
Рис. 3.5. Схема организации контроля вызова в системе VoIP
VoIP и частные виртуальные сети. Ранее предполагалось, что пакеты VoIP передаются как регу-
лярные IР-пакеты. Небольшое число проходящих через Internet пакетов, вероятнее всего, будет иметь
существенную величину задержки по сравнению с временем распространения регулярных IР-пакетов.
Это приводит к снижению качества передаваемой речи. Однако VPN intranet может улучшить качество
передачи речевого сигнала. Сначала между маршрутизаторами формируется сеть VPN, затем проходит
обмен сигналами в рассмотренном выше режиме.
Протокол резервирования ресурсов. В маршрутизируемых IР-сетях каждый сетевой маршрутиза-
тор, получивший для обработки пакет, должен определить следующий пункт назначения для данного
сообщения. Хотя эта схема хорошо подходит для приложений, передающих пакеты, разбитые на части,
она малопригодна для потока пакетов, поступающих непрерывно, а именно это свойство отличает пере-
дачу речевых сигналов. Для улучшения качества услуги при использовании систем с коммутацией па-
кетов группа IETF разработала специальный протокол резервирования ресурсов.
Протокол RSVP резервирует полосу пропускания для обеспечения заданного уровня обслуживания
при передаче мультимедийных сообщений. Его обычно называют протоколом, инициированным полу-
чателем. Это означает, что запрос о резервировании ресурсов поступает от получателя. В телефонии от-
правитель сообщения запрашивает резервирование ресурсов, пользуясь системой передачи служебной
информации. В сетях с групповым обращением, для поддержки которых предназначался RSVP, прото-
колы, инициированные приёмником, лучше регулируют поток, чем активизированные передатчиком
сообщений. RSVP обладает определёнными характеристиками, представленными ниже.
Мягкий режим позволяет в течение некоторого времени сохранять данные, а не уничтожать их по
умолчанию. Для поддержания этого режима периодически генерируется сообщение об обновлении, ко-
торое автоматически продлевает время сохранения информации. Данные удаляются, если очередное
сообщение об обновлении данных не поступило.
При групповом режиме могут резервироваться различные ресурсы. Это означает, что получатели
сообщений в групповом режиме обращения могут запросить разные уровни качества обслуживания
(QoS).
Данный протокол позволяет динамически изменять QoS. Ресурсы, запрошенные получателем, мо-
гут быть изменены уже после резервирования.
Для обслуживания различных приложений предлагается несколько типов резервирования.
Элементами протокола RSVP являются отправители, получатели и расположенные между ними
маршрутизаторы. В этом протоколе формируется два основных типа сообщений: путь (РАТН), резерви-
рование (RESV). Отправитель сообщения высылает РАТН в обратном направлении к одному (или бо-
лее) получателю, информируя о том, какого типа сведения будут переданы источником. Эта информа-
ция включает такие параметры потока, как средняя скорость передачи, требуемый уровень QoS.
Получатель высылает сообщение отправителю RESV. Ресурсы не резервируются до тех пор, пока
получатель, используя информацию, содержащуюся в сообщении РАТН, не вышлет сообщение RESV в
прямом направлении (обычно обратном тому пути, каким пришло сообщение РАТН), где укажет, какие
конкретные ресурсы необходимо зарезервировать. К одному отправителю с сообщением RESV могут
обратиться несколько получателей, причём количество запрошенных ресурсов бывает различным. Это
стандартная ситуация при групповом режиме обращения. Узел, принимающий такие запросы, объеди-
няет их и генерирует одно обращение RESV, которое затем отправляется источнику. В новом обраще-
нии RESV содержится максимальный из всех запрошенных ресурсов, пришедших на предыдущем эта-
пе.
Запрос RESV состоит из дескриптора потока, который образован спецификатором потока и специ-
фикатором фильтра. Первый определяет необходимый уровень QoS, в то время как спецификатор
фильтра используется для выбора числа пакетов, участвующих в данной сессии. В RSVP поток – это
набор пакетов данных, который принимается с QoS, определяемым спецификатором потока, а под сес-
сией понимается поток данных с конкретным пунктом назначения и протоколом транспортного уровня.
Каждый узел, который участвует в исполнении протокола RSVP, осуществляет контроль доступа и кон-
троль стратегии. Первый тип определяет достаточность имеющихся ресурсов для обеспечения запро-
шенного QoS. Второй тип выясняет, имеет ли пользователь право для резервирования ресурсов. Когда
промежуточный узел принимает запрос RSVP, он должен выполнить две функции, а именно:
− сформировать резерв. Спецификаторы потока и фильтра используются обоими типами контроля
для принятия решения об исполнении запроса или отказе в его исполнении. При отказе получателю,
осуществившему запрос, высылается сообщение об ошибке. Если запрос принят к исполнению, то уз-
лом формируется классификатор пакета для отбора соответствующих входящих пакетов. Таким же об-
разом формируется план передачи пакетов, с тем чтобы их передача исполнялась в режиме, обеспечи-
вающем требуемый уровень QoS;
− передать запрос в прямом направлении. Сообщение, содержащее запрос, отсылается в прямом
направлении к источнику.
Базовой моделью резервирования считается однопереходная. Это означает, что получатель посыла-
ет сообщение RSVP в прямом направлении, а промежуточные узлы либо готовы исполнить его, либо
нет. Получатель не может отвечать за всю передачу пакетов от пункта отправления до пункта получе-
ния сообщения. Более совершенной является однопереходная модель с уведомлением (One Path With
Advertising – OPWA), в которой контрольные пакеты отправляются в обратном направлении по пути
следования данных. Эти пакеты собирают информацию, которая затем используется для предсказания
уровня QoS на всём пути. RSVP доставляет полученные результаты, названные уведомлением приём-
ника, который может использовать их для формирования или динамической корректировки соответст-
вующего запроса на выделение резерва.
Работу протокола RSVP иллюстрирует рис. 3.6. На схеме показано четыре маршрутизатора – RА,
RВ, RС, RD, один источник, или отправитель, сообщений – S1, два получателя – R1 и R2. На рис. 3.5
представлена операция объединения запросов, в которой промежуточный маршрутизатор RС отправля-
ет источнику единственное сообщение RESV, хотя на предыдущей стадии он принял сообщения от
обоих получателей. Работа данной схемы основана на предположении, что все маршрутизаторы на пути
сообщения RESV приняли запрос.
Протокол RSVP работает следующим образом:
1. Источник высылает сообщение РАТН одному или нескольким получателям. Сообщение содер-
жит спецификатор потока, в котором указываются скорость передачи данных и границы величины за-
держки потока, т.е. QoS.
2. Как только это сообщение поступает к получателю, он высылает сообщение RESV тем маршру-
тизаторам, через которые пришло сообщение РАТН.
Получатели
RA R1
RB R2
Отправитель
S1
RD
RC
сообщения
PATH
Получатели
RA R1
RB R2
Отправитель
S1
RD
RC
cообщения
RESV
Рис. 3.6. Схема работы протокола RSVP
3. Если маршрутизатор, получив сообщение RESV, может обеспечить уровень QoS, он резервирует
необходимые ресурсы и направляет сообщение следующему на пути к источнику промежуточному
маршрутизатору. Если маршрутизатор не удовлетворяет параметрам QoS, сообщение об ошибке воз-
вращается получателю.
4. Маршрутизатор, получив несколько сообщений RESV для одного потока, объединяет их в одно
сообщение, параметры QoS в котором являются самыми высокими из всех принятых на данный момент.
5. После того как источник получил сообщение RESV, он может непосредственно передавать дан-
ные в режиме, который не нарушает параметры QoS. определённые в сообщении REVS.
Роль протокола быстрого доступа к каталогу. Протокол быстрого доступа к каталогу представ-
ляет собой упрощённую версию протокола доступа к каталогу, связанного с Х.500. Данный протокол
является одновременно и информационной моделью, и протоколом для осуществления запросов и
управления каталогом. Протокол LDAP необходим в среде Internet-телефонии для обеспечения службы
ведения каталогов, которая гарантирует совместимость каталогов сети Internet и PSTN. Такая совмести-
мость позволяет шлюзу преобразовать поступивший телефонный номер в адрес IР, который в дальней-
шем будет использоваться для отправления вызова через Internet. Эта возможность становится особенно
важной при формировании широкомасштабной системы IР-телефонии.
Роль протоколов RТР и RТСР. Как было рассмотрено ранее, протокол передачи информации в
режиме реального времени обеспечивает доставку пакетов приложений реального времени от одного
конечного пункта до другого. Это протокол передачи потоков аудиовизуальных данных по сетям IР, ис-
полняемый в верхней части протокола UDP. У данного протокола отсутствует механизм гарантирова-
ния своевременной доставки пакетов, и он не может обеспечить необходимый уровень QoS.
RTP-заголовок содержит временные метки, которые используются для исполнения некоторых
функций, например определения порядка следования сообщений и синхронизации аудио- и видеодан-
ных, поступивших от одного источника.
RТСР дополняет возможности RТР. Протокол используется для управления передачей данных ме-
жду источником и получателем или группой получателей.
В сессии группового обращения пакеты RТСР периодически направляются всем участникам. Эта
функция обеспечивает их некоторой информацией относительно участников обмена и качества полу-
чаемых ими данных. Чтобы поток данных не превышал сетевые ресурсы, а в протоколе RТР не проис-
ходило значительного увеличения участников сессии группового обращения, скорость передачи, кото-
рую может использовать для передачи RTCP-пакетов отдельный пользователь, ставят в зависимость от
числа субъектов обмена. Чем больше число участвующих, тем ниже скорость, с которой они могут ге-
нерировать RTCP-пакеты. Данная формула обеспечивает условия, при которых общий трафик RТСР
остаётся приблизительно постоянным и не зависит от числа участников.
Использование полосы пропускания в глобальных сетях. Для передачи преобразованного с по-
мощью схемы импулъсно-кодовой модуляции (Pulse Code Modulation – PCM) речевого сигнала скорость
передачи должна составлять 64 кбит/с. Эту полосу частот обычно сокращают до 8 кбит/с при использо-
вании кодека С.729 либо до 5,3 кбит/с, если применяется кодек С.723.1. Следует отметить, что послед-
ний вид кодека обычно оперирует двумя скоростями – 5,3 кбит/с и 6,3 кбит/с.
Для соблюдения требований по полосе пропускания при пакетной передаче голоса можно использо-
вать механизм подавления пауз. Системы обычной телефонии обеспечивают для ведения разговора пол-
нодуплексные линии связи, ситуация одновременного разговора обоих участников возникает лишь ино-
гда. Исследования компании Теlсо показали, что при обычном телефонном разговоре каждая из сторон
активна не более 36 – 40 % всего времени соединения. Таким образом, требования по полосе пропуска-
ния можно снизить, если речевые пакеты IР не рассылать во время пауз. Для реализации данной систе-
мы необходимо дополнительное устройство – детектор активности речи. Он выключает кодер речевого
сигнала, когда абонент молчит, и включает его в момент активности пользователя.
Однако для данной схемы существует проблема скорости срабатывания самого кодера. Если кодер
не сможет быстро срабатывать в начале разговора, система будет пропускать первые фразы.
3.4. ВИРТУАЛЬНЫЕ РАБОЧИЕ ГРУППЫ INTERNET
Используя разбивку на более мелкие части, коммутаторы локальных сетей поддерживают требова-
ния, предъявляемые к полосе пропускания в таких сложных технологиях, как клиент-сервер и мульти-
медийные приложения, выполняемые непосредственно на рабочих станциях. К сожалению, применение
коммутаторов ЛВС делает сеть одноуровневой. В результате иерархическая структура IР-адресации,
необходимая для маршрутизации, исчезает, границы подсетей стираются, а вся сеть превращается в
единую гигантскую подсеть. К тому же нарушается одно из главных условий, которому следуют при
проектировании сети, – обязательное наличие межсетевого экрана, обеспечивающего, в частности, за-
щиту при широковещательном режиме.
Виртуальные локальные вычислительные сети (ВЛВС) используются для разделения сети коммути-
руемых ЛВС на широковещательные домены, где коммутация пакетов происходит между портами од-
ной виртуальной ЛВС. Таким образом, ВЛВС в действительности являются программно-
формируемыми подсетями, которые обеспечивают пересылку пакетов между различными сегментами
ЛВС без применения физического маршрутизатора. Последний используется для передачи данных че-
рез виртуальную ЛВС. Виртуальные локальные сети применяются для контроля активности режима
широковещания в сети, поскольку режим широковещания в отдельной ВЛВС не должен выходить за её
границы. ВЛВС упрощают процессы перемещения, добавления и внесения изменений в сеть, так как
при переходе пользователя от одного коммутируемого порта к другому в одной ВЛВС не требуется об-
новления конфигурации сети. Виртуальные сети также можно использовать для защиты сформирован-
ных рабочих групп, отказывая несанкционированным пользователям в доступе к ресурсам виртуальной
сети, специально сформированной для такой рабочей группы.
Есть два основных типа виртуальной ЛВС: определяемая портом и определяемая стратегией. В пер-
вой модели принадлежность к ВЛВС обусловлена подключением к определённым портам. Все пользо-
ватели в секторе виртуальной ЛВС, приписанные к определённому порту, автоматически становятся
членами данной ВЛВС.
Во второй модели определение принадлежности к виртуальной ЛВС осуществляется более гибко. В
этом случае членство в виртуальной сети выясняется с помощью таких задаваемых критериев, как
МАС-адреса и протоколы третьего уровня. ВЛВС, определяемые МАС-адресами, обычно относят к
виртуальным локальным сетям второго уровня. Принадлежность конечной станции к конкретной вир-
туальной локальной сети, определяемой МАС-адресом, должна быть обязательно подтверждена нали-
чием её МАС-адреса в списке членов этой виртуальной сети. Виртуальные ЛВС третьего уровня, кото-
рые обычно называют подсетями, основаны на протоколах сетевого уровня. В них используется одина-
ковый протокол третьего уровня. Этим протоколом могут быть IР, IРХ, DЕСnet или АррlеТаlk.
Аналогично способу образования виртуальных ЛВС в сетях intranet может осуществляться способ
организации виртуальных рабочих групп. В структуре ВЛВС необходимо, чтобы все её члены были
«привязаны» к сегментам ЛВС, которые подключены к поддерживающим виртуальные ЛВС портам.
Следовательно, такая структура не поддерживает удалённо подключаемых пользователей. Виртуальные
рабочие группы intranet устраняют данные ограничения. Любой пользователь может принадлежать к
конкретной виртуальной рабочей группе, если удовлетворяет соответствующим требованиям. Это по-
хоже на модель виртуальной ЛВС, определяемую стратегией, в которой членство не ограничено МАС-
адресами и протоколами третьего уровня. Контроль прав пользователя для участия в виртуальной рабо-
чей группе можно осуществлять с помощью сервера аутентификации. Каждая виртуальная рабочая
группа обладает в intranet собственным Web-сайтом, доступ к которому контролируется через проверку
подлинности пользователя.
Работа виртуальной группы способствует преодолению разобщённости между отделами, что позво-
ляет более эффективно развивать деловое сотрудничество. Например, клиентская служба, которая объе-
диняет специалистов таких подразделений, как бухгалтерия, отделы продаж и маркетинга, может раз-
решать возникающие вопросы более конструктивно, чем группа, в которую входят представители толь-
ко одного отдела.
ЗАКЛЮЧЕНИЕ
В данном учебном пособии рассмотрены наиболее важные вопросы, связанные с сетевыми техноло-
гиями. В частности более подробно рассмотрена модель OSI, также рассмотрены протоколы маршрути-
зации и оборудование, реализующие данные протоколы. Более подробно отражены вопросы виртуаль-
ных частных сетей и приложений, таких как сети intranet, extranet и IР-телефонии. В настоящее время
всё возрастающий объём передаваемой информации, физический рост сетей и межсетевого трафика
подстегивают производителей к выпуску все более мощных и «умных» устройств, использующих но-
вые методы передачи и сортировки данных, а также коммутации и маршрутизации, и методам их ком-
бинирования для оптимизации трафика и увеличения производительности. Таким образом развитие се-
тевых технологий идёт быстрыми темпами.
Большую роль в сетевых технологий играет применение новых высокопроизводительных протоко-
лов и современных аппаратных средств с применением интеллектуальных алгоритмов обработки дан-
ных.
СПИСОК ЛИТЕРАТУРЫ
1. Башлы, Н.П. Современные сетевые технологии : учебное пособие для вузов / Н.П. Башлы. – М. :
Горячая линия-Телеком, 2006. – 334 с.
2. Спортак, М. Компьютерные сети и сетевые технологии. Platinum Edition / М. Спортак, Ф. Паппас.
– М. : ДиаСофт, 2005. – 720 с.
3. Таненбаум, Э.С. Компьютерные сети / Э.С. Таненбаум. – 4-е изд. – СПб. : Издательский дом
«Питер», 2004. – 992 с.
4. Ибе, О. Сети и удалённый доступ. Протоколы, проблемы решения : пер. с англ. / О. Ибе. – М. :
ДМК Пресс, 2002. – 336 с.
5. Олифер, В.Г. Компьютерные сети. Принципы, технологии, протоколы / В.Г. Олифер, Н.А. Оли-
фер. – 3-е изд. – СПб. : Издательский дом «Питер», 2006. – 958 с.
6. Гук, М. Аппаратные средства локальных сетей : энциклопедия / М. Гук. – СПб. : Издательство
«Питер», 2000. – 576 с.
7. Олифер, В.Г. Сетевые операционные системы / В.Г. Олифер, Н.А. Олифер. –СПб. : Издательский
дом «Питер», 2001. – 544 с.
8. Дуглас Э. Камер Сети TCP/IP. Принципы, протоколы и структура / Э. Дуглас. – 4-е изд. – М. :
Издательский дом «Вильямс», 2003. – 880 с.
9. Столлингс, В. Современные компьютерные сети / В. Столлингс. – 2-е изд. – СПб. : Издательский
дом «Питер», 2003. – 783 с.
10.
Столлингс, В. Беспроводные линии связи и сети / В. Столлингс. – М. : Издательский дом
«Вильям», 2003. – 640 с.
11.
Столлингс, В. Криптография и защита сетей / В. Столлингс. – 2-е изд. – М. : Издательский
дом «Вильямс», 2001. – 672 с.
12.
Web-сайты : http://www.citforum.ru/ ; http://www.protocols.ru/.
ОГЛАВЛЕНИЕ
ВВЕДЕНИЕ
..........................................................................
Глава УРОВНИ МОДЕЛИ OSI
.........................................
1.
1.1. УРОВНИ МОДЕЛИ АРХИТЕКТУРЫ ОТ-
КРЫТЫХ
СИСТЕМ
.........................................................
1.2. ТРАДИЦИОННАЯ КОММУТАЦИЯ
.....................
1.3. КЛАССИЧЕСКАЯ МАРШРУТИЗАЦИЯ
.................
1.4. ПРОТОКОЛЫ МАРШРУТИЗАЦИИ
......................
1.5. ПРОТОКОЛ МАРШРУТИЗАЦИИ RIP
...................
1.6. ПРОТОКОЛ МАРШРУТИЗАЦИИ OSPF
.................
1.7. КОММУТАЦИЯ ТРЕТЬЕГО УРОВНЯ
...............
1.8. МАРШРУТИЗИРУЮЩАЯ КОММУТА-
3
4
4
14
15
18
23
24
25
28
Глава
2.
Глава
3.
ЦИЯ ...........
1.9. КОММУТАЦИЯ ПОТОКОВ
................................
1.10. КОММУТИРУЮЩАЯ МАРШРУТИЗА-
ЦИЯ .........
1.11. КОММУТАЦИЯ ЧЕТВЁРТОГО УРОВНЯ
.............
1.12. СТАНДАРТЫ IEEE 802.1Q И IEEE 802.1Р
.............
1.13. ПРОТОКОЛЫ RTP И RSVP
...............................
МЕЖСЕТЕВЫЕ ЭКРАНЫ И ВИРТУАЛЬ-
НЫЕ
ЧАСТНЫЕ СЕТИ
.................................................
2.1. ЗАЩИТА С ПОМОЩЬЮ МЕЖСЕТЕВЫХ
ЭКРАНОВ
.......................................................
2.2. ВИРТУАЛЬНЫЕ ЧАСТНЫЕ СЕТИ
.......................
2.3. ТИПЫ СЕТЕЙ VPN
...........................................
ПРИЛОЖЕНИЯ ДЛЯ ВИРТУАЛЬНЫХ
ЧАСТНЫХ СЕТЕЙ
...............................................
3.1. СЕТИ INTRANET
.............................................
3.2. СЕТИ EXTRANET
.............................................
3.3. IР-ТЕЛЕФОНИЯ
...............................................
3.4. ВИРТУАЛЬНЫЕ РАБОЧИЕ ГРУППЫ
INTERNET ...
ЗАКЛЮЧЕНИЕ
.....................................................................
СПИСОК ЛИТЕРАТУРЫ
.......................................................
29
30
33
35
42
54
54
61
70
75
75
78
81
94
97
98

