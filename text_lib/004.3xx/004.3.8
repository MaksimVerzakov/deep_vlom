УДК 004.3
ББК 32.973
Я49
Электронный учебно-методический комплекс по дисциплине «Технологии разра-
ботки программного обеспечения» подготовлен в рамках инновационной образова-
тельной программы «Инновационно-образовательный центр технологий поддержки
жизненного цикла и качества продукта», реализованной в ФГОУ ВПО СФУ в 2007 г.
Рецензенты:
Красноярский краевой фонд науки;
Экспертная комиссия СФУ по подготовке учебно-методических комплексов дис-
циплин
Я49
Якунин, Ю. Ю.
Технологии разработки программного обеспечения. Версия 1.0 [Электрон-
ный ресурс] : учеб. пособие по курсовому проектированию / Ю. Ю. Якунин,
П. В. Авласко. – Электрон. дан. (2 Мб). – Красноярск : ИПК СФУ, 2008. – (Тех-
нологии разработки программного обеспечения : УМКД No 183-2007 / рук.
творч. коллектива Ю. Ю. Якунин). – 1 электрон. опт. диск (DVD). – Систем.
требования : Intel Pentium (или аналогичный процессор других производителей)
1 ГГц ; 512 Мб оперативной памяти ; 2 Мб свободного дискового пространст-
ва ; привод DVD ; операционная система Microsoft Windows 2000 SP 4 /
XP SP 2 / Vista (32 бит) ; Adobe Reader 7.0 (или аналогичный продукт для чте-
ния файлов формата pdf).
ISBN 978-5-7638-0975-6 (комплекса)
ISBN 978-5-7638-1437-8 (пособия)
Номер гос. регистрации в ФГУП НТЦ «Информрегистр» 0320802414
от 21.11.2008 г. (комплекса)
Настоящее издание является частью электронного учебно-методического ком-
плекса по дисциплине «Технологии разработки программного обеспечения», вклю-
чающего учебную программу, учебное пособие, лабораторный практикум, методиче-
ские указания по самостоятельной работе, контрольно-измерительные материалы
«Технологии разработки программного обеспечения. Банк текстовых заданий», на-
глядное пособие «Технологии разработки программного обеспечения. Презентацион-
ные материалы».
Рассмотрены основы теории управления программными проектами. Приведен по-
рядок выполнения курсового проекта.Приведен порядок выполнения курсового про-
екта.
Предназначено для студентов направления 230100.62 «Информатика и вычис-
лительная техника» укрупненной группы 230000 «Вычислительная техника и ин-
формационные технологии».
© Сибирский федеральный университет, 2008
Рекомендовано к изданию
Инновационно-методическим управлением СФУ
Редактор А. А. Гетьман
Разработка и оформление электронного образовательного ресурса: Центр технологий элек-
тронного обучения информационно-аналитического департамента СФУ; лаборатория по разработке
мультимедийных электронных образовательных ресурсов при КрЦНИТ
Содержимое ресурса охраняется законом об авторском праве. Несанкционированное копирование и использование данного про-
дукта запрещается. Встречающиеся названия программного обеспечения, изделий, устройств или систем могут являться зарегистрирован-
ными товарными знаками тех или иных фирм.
Подп. к использованию 01.10.2008
Объем 2 Мб
Красноярск: СФУ, 660041, Красноярск, пр. Свободный, 79
ОГЛАВЛЕНИЕ
ВВЕДЕНИЕ................................................................... 7
ЗАДАНИЕ НА РАЗРАБОТКУ
КУРСОВОГО ПРОЕКТА ............................................ 9
1.1 Типы ролей ............................................................................................. 10
2.1 Подбор исполнителей, соответствующих ролям ........................... 11
3.1. План управления персоналом ........................................................... 11
4.1. Пример распределения ролей ........................................................... 13
Контрольные вопросы ......................................................................................... 14
2. ОРГАНИЗАЦИЯ КОМАНДЫ И
НАЧАЛО РАБОТЫ ................................................. 15
2.1. Определение процессов предметной области .............................. 15
2.2. Техническое задание проекта ............................................................ 17
2.3. Рекомендации по началу работы над проектом ............................ 17
2.4. Пример последовательности действий на начальной стадии
проекта ........................................................................................................... 18
Контрольные вопросы ......................................................................................... 19
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ ............ 20
3.1. Процессы управления проектами .................................................... 20
3.2. Основы планирования ........................................................................ 22
3.2.1. Составляющие проектного плана ............................................................. 22
3.2.2. Проектный треугольник ................................................................... 24
3.2.3. Критический путь и его анализ .................................................................. 25
3.2.4. Учет ресурсов и ресурсные конфликты .................................................. 26
3.3. Разработка плана на основе технологии ........................................ 27
Rational Unified Process .............................................................................. 27
3.3.1. Структура процесса: два измерения......................................................... 28
3.3.2. Терминология и подход RUP...................................................................... 28
3.3.3. Итеративность .............................................................................................. 31
3.3.4. Ориентация на архитектуру ........................................................................ 31
3.3.5. Процесс, управляемый вариантами использования ............................ 32
3.3.6. Дух Rational Unified Process........................................................................ 33
3.3.7. RUP: принципиальные подходы и практические методы .................... 39
3.3.8. Пример разработки плана на основе принципов RUP ........................... 40
Контрольные вопросы ......................................................................................... 41
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С
ВЫПОЛНЕНИЕМ ПРОЕКТА ..................................... 42

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-3-
ОГЛАВЛЕНИЕ.
4.1. Качественные и количественные методики оценки риска ......... 42
4.2. Контроль рисков, проявляющихся при разработке
программного обеспечения...................................................................... 43
4.3. Категории риска .................................................................................... 44
4.4. Пример этапов разработки плана управления рисками .............. 46
Контрольные вопросы ......................................................................................... 48
5. ОЦЕНКА ПАРАМЕТРОВ ПРОЕКТА ..................... 49
5.1. Оценка трудоемкости разработки программной системы .......... 49
5.2. Метод оценки трудозатрат функциональных блоков .................. 49
5.2.1. Функциональная декомпозиция системы................................................ 50
5.2.2. Оценка функциональных блоков системы ............................................. 51
5.2.3. Пример оценки трудоемкости проекта ..................................................... 52
Контрольные вопросы ......................................................................................... 53
6. ОРГАНИЗАЦИЯ ПРОЦЕССА
ВЫПОЛНЕНИЯ ПРОЕКТА ....................................... 55
6.1 Планирование проекта в Microsoft Project ....................................... 55
6.1.1. Определение проекта .................................................................................. 55
6.1.2. Способ планирования и основные даты ................................................. 55
6.1.3. Рабочее время .............................................................................................. 56
6.1.4. Параметры календарного плана................................................................ 59
6.1.5. Определение состава работ ....................................................................... 61
6.1.6 Скелетный план работ ................................................................................. 61
6.1.7. Определение длительности задач ............................................................ 62
6.1.8. Определение связей между задачами ...................................................... 63
6.1.9 Типы связей задач ........................................................................................ 63
6.1.10. Использование задержек и опережений ................................................ 64
6.1.11. Ограничения и крайние сроки .................................................................. 65
6.1.12. Суммарная задача проекта ....................................................................... 65
6.1.13. Планирование ресурсов и создание назначений ................................. 66
6.1.13. Планирование стоимости проекта .......................................................... 69
6.1.15. Стоимость назначений .............................................................................. 71
6.1.16. Стоимость задач ........................................................................................ 71
6.1.17. Анализ и оптимизация плана проекта .................................................... 72
6.1.18. Автоматическое выравнивание загрузки ресурсов ............................. 73
6.1.19. Анализ критического пути проекта ......................................................... 73
6.1.20.Использование нескольких базовых планов......................................... 74
6.1.21. Отчеты ......................................................................................................... 74
6.1.22. Создание новых отчетов .......................................................................... 76
6.2. Выбор способа организации совместной работы в группе ....... 77
6.3. Совместная работа с использованием Microsoft Project Server и
Microsoft Project Web Access ..................................................................... 78

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-4-
ОГЛАВЛЕНИЕ.
6.4. Руководство группой проекта с использованием Microsoft
Project Web Access ...................................................................................... 78
6.4.1. Организация совместной работы в Microsoft Project ............................ 79
6.4.2. Обновление информации о задачах ......................................................... 81
6.4.3. Публикация представлений проектов ...................................................... 84
на сервере Microsoft Project Server ..................................................................... 84
6.4.4. Работа с учетной записью руководителя в Microsoft Project Web
Access ...................................................................................................................... 84
6.4.5. Работа со средством отслеживания вопросов ....................................... 86
6.4.6. Работа с библиотекой документов ........................................................... 86
6.5. Обмен информацией в Microsoft Project Web Access ................... 87
6.5.1. Просмотр и принятие задач ....................................................................... 87
6.5.2. Создание новых задач и их отсылка на утверждение руководителю 88
6.5.3. Создание списка дел ................................................................................... 88
6.5.4. Делегирование задач................................................................................... 88
6.5.5. Отправка обновленной информации о задачах ..................................... 89
6.5.6. Создание и отправка отчетов о состоянии .............................................. 90
6.6. Просмотр информации в Microsoft Project Web Access ............... 90
6.7. Управление информацией в Microsoft Project Web Access ......... 91
6.7.1. Работа со страницей Обновления ........................................................ 91
6.7.2. Просмотр расписания ................................................................................. 91
6.8. Корпоративные возможности............................................................ 91
6.8.1. Стандартизация проектов на предприятии ............................................. 92
6.8.2. Управление ресурсами предприятия........................................................ 93
6.8.3. Портфели проектов ..................................................................................... 93
6.9. Реализация корпоративных проектов ............................................. 94
6.9.1. Работа с корпоративными проектами ...................................................... 94
6.9.2. Импорт плана проекта как корпоративного ............................................. 95
6.9.3. Обновление данных корпоративного проекта........................................ 96
6.9.4. Извлечение и возврат корпоративных проектов ................................... 96
6.9.5. Работа с опубликованными версиями корпоративных проектов............ 97
6.9.6. Работа с корпоративными проектами в автономном режиме ............. 97
6.9.7. Работа с корпоративным пулом ресурсов .............................................. 98
6.9.8. Импорт информации о ресурсах в корпоративный пул ........................ 98
6.9.9. Создание группы проекта ........................................................................... 99
6.9.10. Универсальные ресурсы .......................................................................... 99
6.9.11. Замена ресурсов ...................................................................................... 100
6.9.12. Работа с построителем групп ................................................................ 101
6.9.13. Просмотр и обновление информации о ресурсах.............................. 102
6.9.14. Просмотр графиков доступности ресурсов ........................................ 102
6.9.15. Анализ нескольких проектов с использованием
портфеля проектов ............................................................................................. 103
Контрольные вопросы ....................................................................................... 104

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-5-
ОГЛАВЛЕНИЕ.
ЗАКЛЮЧЕНИЕ ......................................................... 105
БИБЛИОГРАФИЧЕСКИЙ СПИСОК ........................ 106

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-6-
ВВЕДЕНИЕ
В данном пособии рассмотрено содержание и порядок выполнения
курсового проекта, связанного с командной разработкой и управлением про-
граммными проектами. За основу были взяты современные технологии раз-
работки программных систем и методики управления. В качестве основного
программного продукта, поддерживающего процесс управления, был выбран
MS Project и MS ProjectServer.
Хотя управление проектами как уникальный вид руководства и счита-
ется достижением последних десятилетий, это не значит, что человечество
не осуществляло проекты до этого: строительство египетских пирамид и пу-
тешествия Колумба являлись масштабными проектами.
Считается, что в основе современных методов управления проектами
лежат методики структуризации работ и сетевого планирования, разработан-
ные в конце 1950-х годов в США. В 1956 году М. Уолкер из фирмы «Дю-
пон», исследуя возможности более эффективного использования принадле-
жавшей фирме вычислительной машины Univac, объединил свои усилия с Д.
Келли из группы планирования капитального строительства фирмы «Реминг-
тон Рэнд». Они попытались использовать ЭВМ для составления планов-
графиков крупных комплексов работ по модернизации заводов фирмы «Дю-
пон». В результате был создан рациональный метод описания проекта с ис-
пользованием ЭВМ. Первоначально он был назван методом Уолкера – Келли,
а позже получил название «метод критического пути» – МКП (CPM – Critical
Path Method).
Одним из наиболее известных проектов, в котором были впервые
использованы методы моделирования и согласования комплекса работ, явля-
ется проект разработки ракетной системы «Поларис», реализованный также
в конце 1950-х годов в США. Этот проект имел жесткие ограничения по сро-
кам, поскольку был привязан к предполагаемой дате ввода в эксплуатацию
в СССР ракет, способных нести ядерные заряды и достигать территории
США. В то же время в рамках данного проекта необходимо было разрабо-
тать, провести сборку и тестирование значительного количества не имевших
аналогов компонент. Реализация проекта, объединявшего около 3800 основ-
ных подрядчиков и состоявшего из 60 000 задач, была поручена Главному
управлению вооружений ВМС США. В целях управления реализацией этого
проекта корпорацией «Локхид» и консалтинговой фирмой «Буз, Аллен энд
Гамильтон» был создан специальный метод планирования работ на основа-
нии оптимальной логической схемы процесса, названный методом анализа и
оценки программ (PERT – Program Evaluation and Review Technique). Исполь-
зование метода PERT позволило руководству программы точно знать, что
требуется делать в каждый момент и кто именно должен это делать, а также
какова
вероятность своевременного завершения отдельных операций. Ру-
ководство программой оказалось настолько успешным, что проект удалось

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-7-
ВВЕДЕНИЕ
завершить раньше запланированного срока. Благодаря такому успешному
опробированию данный метод управления был засекречен и вскоре стал ис-
пользоваться для планирования проектов в Вооруженных силах США. Мето-
дика отлично себя зарекомендовала при координации работ, выполняемых
различными подрядчиками в рамках крупных проектов по разработке новых
видов вооружения.
Крупные американские промышленные корпорации практически одно-
временно с военными начали применение подобной методики управления
для разработки новых видов продукции и модернизации производства. Ши-
рокое применение методика планирования работ на основе проекта получила
в строительстве.
По существу, значительная экономия времязатрат была обусловлена
применением точных математических методов в управлении сложными ком-
плексами работ, что стало возможным благодаря развитию вычислительной
техники. Однако первые ЭВМ были дóроги и доступны только крупным
организациям. Таким образом, исторически первые проекты представляли
собой грандиозные по масштабам работ, количеству исполнителей и капита-
ловложениям государственные программы.
Широкое применение проектных и матричных организационных
структур в бизнесе во второй половине 20-го века было вызвано жесткой
конкуренцией, необходимостью постоянного вывода на рынок новой про-
дукции
и реализацией глобальных стратегий развития.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-8-
ЗАДАНИЕ НА РАЗРАБОТКУ КУРСОВОГО
ПРОЕКТА
В рамках курсового проектирования по дисциплине «Технология раз-
работки программного обеспечения» предлагается выполнение задач, свя-
занных с управлением программным проектом.
В результате выполнения курсового проекта должны быть сформиро-
ваны такие навыки, как управление командой разработчиков, оценка проекта
и рисков при его выполнении, планирование работ и отслеживание процесса
их выполнения с использованием Microsoft Project и Microsoft Project
Server.
Программный проект выполняется командой, состоящей из нескольких
человек (предварительно учебная группа разделяется на подгруппы по пять-
шесть человек).
В качестве примера выполнения такой работы можно привести работу
над Web-проектом. На начальной стадии проекта идет обсуждение началь-
ных задач и целей проекта. На этом этапе обсуждаются такие вопросы, как
сроки проекта, финансовые затраты. После утверждения идеи архитектор
приступает к составлению требований к проекту. В процессе этой работы ар-
хитектор взаимодействует с командой, находя лучшие решения в реализации
каждой задачи. После того как завершено проектирование и поставлены за-
дачи каждому участнику, команда приступает к реализации проекта. Процесс
выполнения проекта отслеживает менеджер проекта с помощью Microsoft
Project и Microsoft Project Server. В зависимости от текущей ситуации ме-
неджером может быть принято решение о перепланировании проекта и вне-
сены в него изменения.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-9-
1. РАСПРЕДЕЛЕНИЕ РОЛЕЙ В КОМАНДЕ.
При выполнении курсового проекта прежде всего менеджер должен
распределить работу между участниками группы, которые представляют со-
бой один из видов ресурсов.
1.1 Типы ролей
Следует учитывать, что процесс распределения ресурсов имеет
несколько важных аспектов. Нужно систематизировать и описать требования
к взаимосвязям и ролям, возникающим при выполнении определенных задач.
Менеджер ответственен за планирование персонала, требуемого для
осуществления проекта. В его задачи входит следующее:
идентификация и документирование ролей и навыков, необходимых
для осуществления проекта;
назначение обязанностей отдельным исполнителям;
определение требований к взаимоотношениям.
При наборе проектной команды назначение требуемых людей на нуж-
ные места приведет к достижению гармонии и высокой производительности
работы всей команды. В рамках работы над программными проектами суще-
ствует большое количество специализаций:
системные архитекторы;
проектировщики;
программисты;
инженеры по проведению тестирования;
технические писатели;
разработчики баз данных;
дизайнеры пользовательского интерфейса;
специалисты в области разработки и поддержки сетей.
Этот список не является исчерпывающим и может включать некоторые
другие специализации, которые могут оказаться весьма полезными для ус-
пешного завершения всего проекта. Такие люди поддерживают необходимую
степень согласованности среди членов команды, выступая в роли «посредни-
ков» между своенравными членами команды и другими специалистами.
При использовании формализованных категорий навыков определение
набора требуемых навыков может изменяться с течением времени, по мере
того как проект проходит через различные фазы жизненного цикла (ЖЦ).
В начале ЖЦ разработки проекта возникает повышенная потребность в услу-
гах архитекторов и дизайнеров. Программисты и специалисты в области се-
тевых технологий больше всего нужны в середине ЖЦ проекта. Инженеры
по проведению тестирования наиболее востребованными становятся на по-
следних этапах жизненного цикла проекта.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-10-
1. РАСПРЕДЕЛЕНИЕ РОЛЕЙ В КОМАНДЕ.
2.1 Подбор исполнителей, соответствующих ролям
Еще в 1980-х годах исследования информационных технологий показа-
ли, что при приеме на работу сначала следует учитывать черты характера
кандидатов, а уж затем уровень их квалификации, указанный в резюме. По
мере возможности нужно осуществлять отбор членов команды прежде всего
по критерию их совместимости и дополнительным личным чертам характера,
а не на основании способностей, продемонстрированных в определенной
области. Целесообразность такого принципа проще осознать, если принять во
внимание то обстоятельство, что легче обучить работника новым техниче-
ским (быстро меняющимся) навыкам, чем изменить его черты характера.
Кроме того, общие способности к быстрому изучению и адаптации к непре-
рывно изменяющейся информации при наличии базовых познаний современ-
ных технологий часто более важны, чем наличие большого опыта в одной
или двух областях. Если личностные качества сотрудника совершенно не со-
ответствуют выполняемым обязанностям, у работника возникают стрессовые
ситуации и появляется ощущение дисгармонии. При анализе расхождения
между предпочтительным рабочим стилем сотрудника и его настоящим
стилем работы можно наблюдать различные уровни стресса, которые уста-
навливаются различными методами.
Согласно исследованиям существует две разновидности стресса:
личный и организационный. Признаки типичного личного стресса включают
апатию и/или низкую производительность, частые жалобы, а также высокий
уровень заболеваемости. Причина личного стресса обычно заключается в
том, что человек берет на себя дополнительные обязанности, количество ко-
торых превышает его возможности. Причины организационного стресса мо-
гут
заключаться в том, что у сотрудника формируются некорректные
представления относительно ожидаемого результата работы, качества про-
дукта и проблем, связанных с обслуживанием заказчиков. Организационный
стресс
также может возникать в том случае, когда положение сотруд-
ника в организации требует выполнения такого объема обязанностей, кото-
рый он просто
не в состоянии выполнить.
3.1. План управления персоналом
При распределении ресурсов, когда учитывается соответствие между
работой и выполняющей ее командой, составляется план по менеджменту
персонала. Благодаря плану управления персоналом можно выяснить, какое
количество ролей требуется в рамках проекта, а также определить назначе-
ние этих ролей. Такой план может оказаться особо полезным для больших
программных проектов, когда для успешного выполнения требований проек-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-11-
1. РАСПРЕДЕЛЕНИЕ РОЛЕЙ В КОМАНДЕ
3.1. План управления персоналом
та
на многие месяцы и годы вперед может потребоваться множество
квалифицированных кадров.
План управления персоналом включает информацию о специализаци-
ях, необходимых затратах и о том, каким образом будет осуществляться от-
бор персонала, требуемого для выполнения каждой из ролей. Эти действия
будут выполняться формальным или неформальным способом, в деталях или в
общих чертах, основываясь на нуждах проекта и на уровне организационной
зрелости.
Если необходим поиск ресурсов и их привлечение с целью успешного
функционирования команды, профессионалы в области управления персона-
лом захотят иметь доступ к информации о персонале, содержащей следую-
щие сведения:
необходимые навыки и квалификация;
опыт работы;
плановая заработная плата;
личностные характеристики и интересы, удовлетворяющие целям ко-
манды.
Весьма полезным является издание каталога проекта, который пред-
ставляет собой простой список сотрудников, выполняющих проект, с надле-
жащей контактной информацией и описанием группы. В этот перечень могут
включаться организаторы совместного дела, которые не входят в состав про-
ектной команды. (В любом случае полезно поддерживать взаимоотношения
с организаторами совместного дела.) Даже если все исполнители проекта яв-
ляются членами команды и находятся рядом, каталог проекта еще больше
сплачивает работников, при этом появляется ощущение целостности коман-
ды. Если члены команды находятся далеко друг от друга либо относятся
к различным компаниям, то степень полезности такого каталога возрастает.
Одним из наиболее полезных инструментов, используемых при выпол-
нении назначений ресурсов, является матрица распределения обязанностей.
Для этой матрицы существует несколько вариантов названий, например
«матрица обязанностей», «матрица управления персоналом», «линейная диа-
грамма назначения обязанностей». Эта матрица явным образом идентифици-
рует обязанности отдельных работников, а также роли при выполнении дей-
ствий. При этом определяется исполнитель и содержание действий в рамках
проекта. Основные компоненты матрицы распределения обязанностей пока-
заны в табл. 1.1.
Таблица 1.1
Матрица распределения обязанностей
Содержание
действий

ФИО
ФИО
Роль
Исполнитель
ФИО
ФИО
ФИО
Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
ФИО
-12-
1. РАСПРЕДЕЛЕНИЕ РОЛЕЙ В КОМАНДЕ
3.1. План управления персоналом
Если при выполнении определенной задачи используются усилия более
чем одного человека, то матрица позволяет идентифицировать тех, кто вы-
полняет главные обязанности, и тех, кто находится в резерве. Это помогает
менеджеру проекта разграничивать обязанности, полномочия и ответствен-
ность при выполнении той или иной задачи.
4.1. Пример распределения ролей
На примере работы над Web-проектом можно дать более подробные
характеристики выполняемым ролям. Ключевая роль определена архитекто-
ру, который ответственен за реализацию проекта (от начала и до конца) пе-
ред
заказчиком. Поскольку архитектор несет эту ответственность, он же
является главным разработчиком и в курсе всех деталей проекта. Он разраба-
тывает спецификации, документацию, технические задания, определяет сро-
ки
исполнения и формирует команду проекта. Его обязанность –
знать, каковы начальные ресурсы проекта, каковы задачи и цели проекта, а
также что необходимо получить в результате. Еще одна обязанность архитек-
тора – это коммуникация с командой проекта. Работа архитектора – донести
до каждого, кто работает над проектом, то, что требуется получить, языком
понятным участникам проекта. Если архитектор ставит задачу перед про-
граммистом, то ему необходимо это объяснить с точки зрения программиста.
Соответственно
если он ставит задачу перед дизайнером, то ему нужно
объяснить цели и задачи проекта так, чтобы это было понятно дизайнеру.
Дизайнер создает макеты, интерфейсы и любое другое графическое
представление проекта. В обязанность верстальщика входит: HTML-
разметка, css, написание небольших клиентских скриптов, XML-разметка.
Работа программиста – это серверное и клиентское программирование, взаи-
модействие программ с базами данных. Используя инструменты тестирова-
ния проекта, тестировщик выявляет ошибки в проекте и соответствие проек-
та конечным требованиям. Писатель отвечает за текстовое наполнение про-
екта – контент, поэтому в его обязанность может входить подборка фотома-
териалов к тексту, например, совместно с дизайнером проекта. Менеджер
проекта отвечает за финансовые вопросы и обсуждение проекта с заказчи-
ком. В обязанности
менеджера проекта входит представление заказчи-
ку сделанной работы,
объяснение заказчику принятых решений в реа-
лизации. Менеджер проекта обеспечивает связь между заказчиком и проек-
тировщиком. С командой
проекта менеджер может не пересекаться и
не давать им никаких указаний
и поручений.
При выполнении курсового проекта, из-за ограниченного количества
человек в команде, обязанности менеджера проекта и проектировщика могут
выполняться одним лицом.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-13-
1. РАСПРЕДЕЛЕНИЕ РОЛЕЙ В КОМАНДЕ
4.1. Пример распределения ролей
Таблица 1.2
Пример таблицы распределения ролей
Список
участников
Менеджер
проекта
Кузьмин
Петрова
Елисеев
Сергеева
Соловьев
Роли
Архитек-
тор
Проекти-
ровщик
+
+
Програм-
мист
Тести-
ровщик
Техниче-
ский
писатель
+
+
+
+
+
+
+
Для распределения ролей в подгруппе каждому участнику предлагается
высказать пожелания относительно своей роли при выполнении работы. Эти
данные можно свести в таблицу, которая наглядно представит ситуацию
с наличием необходимых исполнителей ролей. Прежде всего следует
определить менеджера проекта, который возьмет на себя обязанность по ут-
верждению участников подгруппы на остальные роли. Пожелания участни-
ков могут быть различными. Так, например, один участник может выразить
готовность исполнять несколько ролей на выбор. Это упростит работу
менеджера при окончательном назначении ролей. Такая таблица распределе-
ния ролей предшествует матрице распределения обязанностей и имеет с ней
сходство. Пример таблицы распределения ролей приведен в табл. 1.2.
Контрольные вопросы
1. Что входит в обязанности менеджера проекта?
2. Какие типы ролей в рамках работы над программными проектами
вам известны?
3. Почему при отборе членов команды важно учитывать критерий их
совместимости?
4. Какую информацию включает в себя план управления персоналом?
5. Для чего служит матрица распределения обязанностей?

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-14-
2. ОРГАНИЗАЦИЯ КОМАНДЫ И НАЧАЛО
РАБОТЫ
2.1. Определение процессов предметной области
Процессы предметной области представляют собой взаимосвязанные
действия, являющиеся специфичными для организации, в которой был раз-
работан рассматриваемый программный проект. Первым шагом на этом пути
является определение предметной области, для которой в конечном итоге
будет разрабатываться программный проект, т. е. на этапе произвольного
анализа предметной области критически важной является точка зрения ко-
нечного пользователя. И она должна быть обязательно учтена при оценке
различных возможностей программы.
Качество программного проекта определяется тем, насколько хорошо
программное обеспечение (ПО) решает специфические проблемы, связанные
с предметной областью. Исходя из этого при создании качественного ПО ме-
неджер проекта должен уметь определять предметную область, при исполь-
зовании которой ПО будет удовлетворять специфические потребности. При
разработке программного продукта выделяются шесть классов предметных
областей:
потребительский;
деловой;
индустриальный;
режим реального времени;
продукт с минимальной задержкой;
научный.
Потребительский класс. Отдельные пользователи приобретают
программные продукты потребительского класса для личного применения.
Подобного рода продукты могут применяться дома, во время путешествий
либо на работе. Ключевым моментом в данном случае является то, что по-
требительский рынок является массовым и обычно ориентируется на по-
купателя, чувствительного к ценам. Примерами таких потребительских
продуктов могут служить мобильные телефоны, автомобили, телевизионное
оборудование, персональные компьютеры, а также персональные цифровые
помощники.
Деловой класс. Большинство программных продуктов нацелены на
предметную область, связанную с деловым классом. Здесь ключевой зада-
чей является организация поставки деловым заказчикам экономичного
программного продукта, который способен увеличить норму прибыли
в бизнесе. Программные продукты этого класса обычно дороже по срав-
нению с программами потребительского класса, а также обязательно
включают сопровождение, обслуживание и услуги по выполнению установ-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-15-
2. ОРГАНИЗАЦИЯ КОМАНДЫ И НАЧАЛО РАБОТЫ
2.1. Определение процессов предметной области
ки. Примерами программных продуктов подобного типа являются инстру-
ментальные средства баз данных, такие как Oracle, программы планирова-
ния корпоративных ресурсов, наборы инструментальных средств по разра-
ботке, а также операционные системы.
Индустриальные продукты образуют специфичный подкласс деловых
программных продуктов. Подобные программные инструменты приобрета-
ются для удовлетворения специфических потребностей, например для
автоматизации машин, автоматизации и интеграции деятельности фабрик,
а также в качестве управляющего встроенного ПО. Эти программы имеют
специальное назначение и обычно используются в отдельной индустриаль-
ной отрасли, например в автомобилестроении, пищевой промышленности
либо в производстве полупроводников.
Программы режима реального времени используются с целью
управления процессами, которые имеют определенный и ограниченный во
времени бюджет. Системы реального времени применяются при сборе дан-
ных, имеющих отношение к событиям, длящимся менее одной микросекун-
ды. Программы реального времени могут управлять медицинскими встроен-
ными устройствами. Информация, которая поступает от датчиков в этом
случае, может быть обработана за время, соответствующее промежутку ме-
жду «двумя ударами сердца». Эти продукты могут также использоваться в
качестве интерфейса, связывающего наборы аналоговых данных (например,
голос либо музыка) и результаты их преобразования в цифровые данные, ко-
торые могут быть сохранены на носителе информации. Программа режима
реального времени создается специально для целевого аппаратного обес-
печения, совместно с которым она будет применяться в дальнейшем.
Продукт с минимальной задержкой. Программное обеспечение данно-
го класса должно разрабатываться с учетом ограниченного запаса времени,
выделяемого на его выполнение. Примером подобного ПО является про-
грамма для ATM-компьютера (Automatic Terminal Machine), а также про-
грамма, осуществляющая верификацию кредитных карточек при выполне-
нии заказов через Интернет. Большая часть программных продуктов этого клас-
са является частью деловых либо индустриальных программных продуктов.
Научные программные продукты имитируют действия, происходя-
щие в реальном мире, с помощью математических формул. При этом созда-
ются математические модели объектов реального мира. Например, на ком-
пьютере могут моделироваться некоторые летные характеристики самолета.
Вообще говоря, моделированию и имитации может подвергаться практиче-
ски любой объект с известными характеристиками. Результатом имитации
является огромное количество вычислений, для выполнения которых мо-
жет потребоваться вычислительная мощь суперкомпьютеров. По мере со-
вершенствования персональных компьютеров все большее количество ла-
бораторных экспериментов преобразовывается в компьютерные модели,

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-16-
2. ОРГАНИЗАЦИЯ КОМАНДЫ И НАЧАЛО РАБОТЫ
2.1. Определение процессов предметной области
которые в интерактивном режиме изучаются студентами. При этом исклю-
чаются затраты и риск, с которыми связано проведение реальных экспери-
ментов.
Таким образом, научные программы обычно представляют собой на-
боры инструментальных средств специального назначения, применяемые для
решения различных задач.
2.2. Техническое задание проекта
Техническое задание (ТЗ) – это документ, формально определяющий
существование проекта. Техническое задание включает перечень потребно-
стей заинтересованных лиц, описание продукта, а также основные предполо-
жения, касающиеся функционирования программной системы.
После того как были определены задания проекта, его рабочая область
и достигнуто единое видение проекта всеми членами команды, наступило
время подготовки ТЗ. Менеджер проекта отражает в ТЗ задачи высокого
уровня и включает другую уместную информацию высокого уровня, которая
может быть одобрена спонсором или заказчиком.
Техническое задание содержит ответы на вопросы, связанные с процес-
сами проекта, и включает следующую информацию:
задания (желаемые результаты);
функции (большинство свойств и/или процессов);
производительность (обобщенные спецификации);
ограничения, связанные со средой разработки;
область действия (границы проекта);
затраты/прибыль (приблизительная оценка затрат).
Техническое задание предназначено для сжатого представления проек-
та на высшем уровне с целью получения одобрения на осуществление ме-
неджмента и поддержки. После подписания ТЗ можно конкретизировать ос-
тавшуюся часть планирования проекта в рамках одобренного финансирова-
ния.
Более подробно разработка ТЗ рассмотрена в лабораторном практикуме
по данной дисциплине [32].
2.3. Рекомендации по началу работы над проектом
Приступая к работе над проектом, менеджер должен учитывать сле-
дующие рекомендации:
1. Не стоит начинать работу, если ТЗ не одобрено по всем пунктам
заказчиком.
2. Не стоит начинать работу, если какой-либо пункт ТЗ остается под
во-просом для исполнителя. Как правило, такие неясности приводят к пере-
делыванию работы и являются самыми трудо- и ресурсоемкими при выпол-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-17-
2. ОРГАНИЗАЦИЯ КОМАНДЫ И НАЧАЛО РАБОТЫ
2.3. Рекомендации по началу работы над проектом
нении.
3. Если после утверждения заказчиком ТЗ, он продолжает вносить кор-
рективы и предложения, стоит отложить начало работы. Если этого не будет
сделано, то, возможно, работу придется переделывать.
4. Техническое задание должно состоять из одного документа. План
работы, стратегия, дополнительные материалы по проекту включаются в
приложение к ТЗ или в виде дополнений к ТЗ. Если информация по проекту
рассредоточена по нескольким документам, то есть большая вероятность
упустить детали или, наоборот, продублировать работу.
5. Не стоит приступать к работе над проектом, пока нет, как минимум,
плана работы. Результат работы без проектирования и планирования всегда
непредсказуем.
2.4. Пример последовательности действий
на начальной стадии проекта
Рассмотрим действия на начальной стадии проекта на примере реали-
зации Web-проекта.
1. На первой стадии проекта идет обсуждение начальных задач и целей
проекта. В этом участвуют заказчик, менеджер проекта и проектировщик.
На этом этапе обсуждаются сроки проекта, финансовые затраты, ресурсы
проекта, а также выносятся все решения и требования к проекту для перехода
к составлению спецификаций и проектированию.
Менеджер проекта общается с заказчиком с начальной стадии и до
полной реализации проекта, проектировщик – только на начальной стадии
и после сдачи проекта. В процессе работы проектировщик и заказчик
не взаимодействуют. Если такое взаимодействие необходимо, то проекти-
ровщик передает информацию заказчику через менеджера проекта. Поэтому
решение любых административных вопросов, переписка с заказчиком, обще-
ние по телефону в процессе работы над проектом – это обязанности менед-
жера. Проектировщику необходимо заниматься непосредственно проектиро-
ванием, а не «связями с общественностью».
2. Перед проектированием и постановкой задач для исполнителей про-
екта менеджеру необходимо определить и уяснить идею проекта. Для этого
наилучшим вариантом может быть совещание и обсуждение проекта всеми
участниками команды – от проектировщика до тестировщика. Каждый уча-
стник может высказывать свое видение проекта, путь реализации каких-либо
задач и генерировать идеи. Окончательное решение принимает менеджер.
На этой стадии могут возникать интересные живые споры по проекту,
в которых команда почувствует коллектив и уже вольется в процесс. Также
очевидный плюс коллективного обсуждения в том, что все участники еще до
реализации проекта будут введены в курс дела. При подобном обсуждении
принятая идея проекта становится близкой всем участникам команды.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-18-
2. ОРГАНИЗАЦИЯ КОМАНДЫ И НАЧАЛО РАБОТЫ
2.4. Пример последовательности действий на начальной стадии проекта
3. После утверждения идеи проектировщик приступает к составлению
спецификаций и требований к проекту. В процессе этой работы проектиров-
щик взаимодействует с командой, находя лучшие решения в реализации ка-
ждой задачи.
Контрольные вопросы
1. Чем определяется качество программного проекта?
2. Какие классы предметных областей выделяют при разработке про-
граммного продукта?
3. Что такое техническое задание?
4. Какие вопросы раскрываются в техническом задании?
5. Приведите последовательность действий на начальной стадии
проекта.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-19-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.1. Процессы управления проектами
Проект – это временное предприятие, предназначенное для создания
уникальных продуктов или услуг. «Временное» означает, что у любого про-
екта есть сроки реализации – начало и конец, когда достигаются поставлен-
ные цели либо возникает понимание, что эти цели не могут быть достигнуты.
Слово «уникальные» означает, что создаваемые продукты или услуги суще-
ственно отличаются от других аналогичных продуктов и услуг. Уникаль-
ность продуктов или услуг проекта обусловливает необходимость последова-
тельного уточнения их характеристик по мере выполнения проекта.
Управление проектами – интегрированный процесс. Действия (или их
отсутствие) в одном направлении обычно влияют и на остальные направле-
ния действий. Такая взаимосвязь требует балансировать между задачами
проекта: часто улучшение в одной области может быть достигнуто лишь за
счет ухудшения в другой.
Для лучшего понимания интегрированной природы управления проек-
тами рассмотрим его процессы и их взаимосвязи.
Проект состоит из процессов. Процесс – это совокупность действий,
приносящая результат. Процессы проекта обычно выполняются людьми и
делятся на две основные группы:
процессы управления проектами касаются организации и описания ра-
бот проекта;
процессы, ориентированные на продукт, касаются спецификации
и производства продукта. Эти процессы определяются жизненным циклом
проекта и зависят от области приложения.
В проектах процессы управления проектами и процессы, ориентиро-
ванные на продукт, накладываются и взаимодействуют. Например, цели про-
екта не могут быть определены при отсутствии понимания того, как создать
продукт.
Процессы управления проектами могут быть разбиты на шесть основ-
ных групп, реализующих различные функции управления:
процессы инициации – принятие решения о начале выполнения проек-
та;
процессы планирования – определение целей и критериев успеха про-
екта и разработка рабочих схем их достижения;
процессы исполнения – координация людей и других ресурсов для вы-
полнения плана;
процессы анализа – определение соответствия плана и исполнения про-
екта поставленным целям и критериям успеха и принятие решений о необхо-
димости применения корректирующих воздействий;
процессы управления – определение необходимых корректирующих

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-20-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.1. Процессы управления проектами
воздействий, их согласование, утверждение и применение;
процессы завершения – формализация выполнения проекта и подведе-
ние его к упорядоченному финалу.
Процессы управления проектами накладываются друг на друга и про-
исходят с разной интенсивностью на всех стадиях проекта (рис. 3.1). Кроме
того, процессы управления проектами связаны своими результатами: резуль-
тат выполнения одного процесса становится исходной информацией для дру-
гого. Эти взаимосвязи проиллюстрированы на рис. 3.2.
Уровень процесса
Исполнение
Планирование
Управление
Завершение
Инициация
Анализ
Завершение фазы
Начало фазы
Рис. 3.1. Наложение групп процессов в фазе
Инициация
Планирование
Управление
Исполнение
Анализ
Завершение
Рис. 3.2. Взаимосвязи групп процессов управления проектом в фазе
И наконец, имеются взаимосвязи групп процессов различных фаз проекта.
Например, закрытие одной фазы может являться входом для инициации сле-
дующей фазы. Так, завершение фазы проектирования требует одобрения за-
казчиком проектной документации, которая необходима для начала реализации.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-21-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.1. Процессы управления проектами
В реальном проекте фазы могут не только предшествовать друг другу,
но и накладываться. Повторение инициации на разных фазах проекта помо-
гает контролировать актуальность выполнения проекта. Если необходимость
его осуществления отпала, очередная инициация позволяет вовремя это уста-
новить и избежать излишних затрат.
3.2. Основы планирования
3.2.1. Составляющие проектного плана
Проект предпринимается для достижения определенного результата
в определенные сроки и за определенные деньги. План проекта составляется
для того, чтобы определить, с помощью каких работ будет достигаться
результат проекта, какие люди и оборудование нужны для выполнения этих
работ и в какое время эти люди и оборудование будут заняты работой по про-
екту. Поэтому проектный план содержит три основных элемента: задачи,
ресурсы и назначения. Рассмотрим подробнее каждый из них.
Задачи – совокупность видов работ, осуществляемых в рамках проекта
для достижения определенного результата. Поскольку обычно проект содер-
жит много задач, то для удобства отслеживания плана их объединяют в груп-
пы или фазы. Совокупность фаз проекта называется его жизненным циклом.
Ф а з ы. Фаза проекта состоит из одной или нескольких задач, в резуль-
тате выполнения которых достигается один или несколько основных резуль-
татов проекта. Таким образом, результаты, достигнутые благодаря выполне-
нию каждой из задач, входящих в фазу, формируют ее результат.
Фазы могут состоять как из задач, так и из других фаз. По завершении
проектной фазы обычно осуществляется анализ полученных результатов
(чтобы с минимальными затратами определить и исправить ошибки) и обще-
го хода проекта (чтобы определить, стоит ли переходить к исполнению сле-
дующей фазы проекта).
Разбиение проекта на фазы позволяет представить его в виде списка
основных результатов и сроков, к которым они должны быть получены.
Руководитель проекта осуществляет непосредственный контроль исполнения
каждой задачи внутри проекта, сообщая вышестоящему менеджеру только
о достижении фазовых результатов. Этому менеджеру, в свою очередь, для
контроля исполнения проектов вполне достаточно таких данных.
З а в е р ш а ю щ и е з а д а ч и. Каждый проект предпринимается для
достижения определенной цели, и обычно добиться этого нельзя, не достиг-
нув нескольких промежуточных целей. Например, нельзя построить дом,

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-22-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.2. Основы планирования.
не заложив фундамент. Закладка фундамента будет являться промежуточной
целью при постройке дома.
Задачи, в результате исполнения которых достигаются промежуточные
цели, называются завершающими задачами. Если такой задачи нет, а фазо-
вый результат достигается, то создается фиктивная завершающая задача с
длительностью 0 дней, называемая контрольной точкой.
Д л и т е л ь н о с т ь и т р у д о з а т р а т ы. Длительность задачи –
это период рабочего времени, который необходим для того, чтобы ее выпол-
нить.
Длительность может не соответствовать трудозатратам сотрудника,
занимающегося задачей. Например, для выполнения задачи «Сбор предло-
жений от авторов» сотруднику (ответственному секретарю журнала) нужно
потратить полчаса на рассылку типового электронного письма авторам и
полчаса на обработку поступивших в течение недели ответов. Значит, его
трудозатраты на выполнение задачи составят один час. Таким образом, дли-
тельность задачи соответствует времени, через которое будет получен ре-
зультат задачи, а трудозатраты – времени, затраченному сотрудниками на
получение результата.
З а в и с и м о с т и и с в я з и. Задачи в плане проекта взаимосвязаны.
Например, часто одна задача не может начаться, пока не закончена другая
(возведение стен не может начаться раньше закладки фундамента).
На плане проекта зависимости обозначаются с помощью связей. Таким об-
разом, зависимости и связи используются для обозначения логики алгоритма
работ в плане проекта.
Ресурсы. Под ресурсами понимаются сотрудники и оборудование,
необходимые для выполнения проектных задач. Например, для выполнения
задачи «Сбор предложений от авторов» в проекте должен быть задействован
ответственный секретарь журнала.
Р о л и и р е с у р с ы. Каждый сотрудник, участвующий в проекте,
получает определенную роль в соответствии со своей квалификацией, требо-
ваниями проекта и регламентами, действующими в организации. Например,
в одном проекте сотрудник может выступать в роли архитектора приложе-
ний, а в другом, где остро требуется программист, тот же сотрудник может
быть задействован в роли программиста. При составлении списка ресурсов
часто используется ролевое планирование. Например, сначала определяется,
что для исполнения работ требуются три программиста и один менеджер, а
затем, когда план проекта утвержден, выбираются конкретные сотрудники
для участия в этих ролях.
С т о и м о с т ь р е с у р с о в. Важное свойство ресурсов – стоимость
их использования в проекте. Существует два типа стоимости ресурсов:
повременная ставка и стоимость за использование.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-23-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.2. Основы планирования.
Повременная ставка выражается в стоимости использования ресурса
в единицу времени, например 100 рублей в час или 1000 рублей в день.
В таком случае стоимость участия ресурса в проекте составит время, в тече-
ние которого он работает в проекте, умноженное на почасовую ставку.
Обычно почасовая ставка используется для учета стоимости нематериальных
ресурсов.
Стоимость за использование оборудования или сотрудника в задаче
не зависит от того, сколько времени задействован в задаче сотрудник или
материальный ресурс. Общие затраты на использование ресурса определяют-
ся путем умножения его стоимости использования на число задач, в которых
он задействован. У ресурса может быть указана стоимость как одного из двух
типов, так и обоих.
Назначение – это связь определенной задачи и ресурсов, необходимых
для ее выполнения. При этом на одну задачу могут быть назначены несколь-
ко ресурсов, как материальных, так и нематериальных. Назначения объеди-
няют в плане ресурсы и задачи, делая план целостным.
Благодаря назначениям решается целый ряд задач планирования:
определяются ответственные за исполнение задач;
когда ресурсы назначены, можно рассчитать общий объем времени,
затрачиваемый каждым ресурсом на проект, а значит, его стоимость для
проекта;
определив стоимость участия всех ресурсов в проекте, можно подсчи-
тать общую стоимость проекта;
назначая ресурсы на задачи, можно сокращать срок выполнения работ,
выделяя на них больше ресурсов и тем самым сокращая общую длительность
проекта.
3.2.2. Проектный треугольник
Проектным треугольником (рис. 3.3) называют соотношение между
длительностью проекта, затратами и объемом работ. При внесении измене-
ний в один из этих элементов меняются оба других. И хотя для проекта в
равной степени важны все три элемента, как правило, только один из них в
(зависимости от приоритетов) имеет наибольшее влияние на другие.
Например, если вы решите изменить план проекта, укоротив расписа-
ние, то возрастет стоимость проекта (если вы решите привлечь дополнитель-
ных работников) или уменьшится объем работ. Если же изменить план про-
екта с целью уменьшения его бюджета, то может возрасти длительность про-
екта и уменьшиться объем работ. Наконец, если вы увеличите объем работ,
то проект будет длиться дольше и стоить дороже.
То, каким образом изменения в плане влияют на другие стороны тре-
угольника, зависит от обстоятельств и специфики проекта. В некоторых слу-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-24-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.2. Основы планирования.
чаях уменьшение расписания увеличивает стоимость, а в других – уменьша-
ет.
При создании плана вы можете столкнуться с тем, что план не удовле-
творяет ожиданиям (например, проект заканчивается слишком поздно, или
его стоимость превышает допустимые пределы). В таком случае план нужно
оптимизировать, чтобы привести его в соответствие ожиданиям.
Когда вы начинаете оптимизировать план, постоянно помните обо всех
элементах треугольника и о том, что когда вы изменяете одну из сторон, это
затрагивает две другие – позитивно или негативно, в зависимости от вашего
проекта. И проверяйте два других элемента треугольника, чтобы быть
уверенными, что изменения не делают план невыполнимым. Например, если
вы изменили свой план с целью уменьшить расходы, проверьте, что дата
окончания проекта все еще находится в допустимых пределах.
Время
Стоимость
Качество
$ $
$
Объем работ
Рис. 3.3. Проектный треугольник
Качество – четвертый элемент проектного треугольника находится в
его центре, и изменения, вносимые в любую из сторон треугольника, практи-
чески всегда влияют на качество – результат того, что вы делаете со време-
нем, деньгами и объемом работ.
3.2.3. Критический путь и его анализ
Запас времени, который существует в схеме проекта, называется резер-
вом времени. Различают несколько видов резервов времени:
общим резервом называется количество времени, на которое можно
увеличить продолжительность операции без влияния на продолжительность
выполнения проекта в целом;
свободным резервом времени называется количество времени, на кото-
рое можно увеличить продолжительность операции без влияния на наиболее
ранний срок выполнения любой последующей операции;

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-25-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.2. Основы планирования.
независимым резервом времени называется количество времени, на
которое можно увеличить продолжительность операции без влияния на
предшествующие или последующие операции.
Критический путь – максимальный по продолжительности полный
путь проекта. Работы, лежащие на этом пути, называются критическими
работами. Длительность критического пути определяет наименьшую общую
продолжительность работ в целом по проекту. Как правило, критические
работы составляют небольшую часть всех работ проекта, но именно они
определяют продолжительность выполнения комплекса работ в целом. Дли-
тельность выполнения всего проекта может быть сокращена за счет сокраще-
ния длительности задач, лежащих на критическом пути. Соответственно,
любая задержка выполнения задач критического пути повлечет увеличение
длительности проекта.
Существуют также работы с очень малыми резервами времени. Они
являются субкритическими, и на них нужно обращать столько же внимания,
сколько и на критические работы.
Любые замедления на критическом пути приведут к задержке срока
выполнения всего проекта. Между тем для некритических путей можно
допустить некоторые задержки при выполнении составляющих их операций
или пересмотреть график их выполнения.
3.2.4. Учет ресурсов и ресурсные конфликты
Исходный календарный план выполнения операций составляется при
условии, что все необходимые ресурсы имеются в достаточном количестве.
Однако такая ситуация имеет место далеко не всегда, а если это так, то
использование ресурсов в соответствии с потребностями, указанными
в календарном плане, может оказаться неэкономичным.
Ограничения на ресурсы. При планировании необходимо учитывать
неизбежную ограниченность ресурсов по нескольким факторам:
оборудование. Функциональные возможности некоторых машин могут
не соответствовать требуемой технологии выполнения конкретных операций.
Могут ставиться дополнительные требования по обслуживанию (техниче-
ской эксплуатации) оборудования. Может потребоваться какое-то время на
переоснащение и переналадку некоторых станков для конкретных операций;
люди могут отсутствовать на работе не только в связи с плановыми
отпусками и государственными праздниками, но и, например, в связи с про-
хождением курсов повышения квалификации;
материалы. В поставках некоторых материалов могут быть большие
задержки;
возможны и другие проблемы.
Графики ресурсов. Если общая потребность в некотором ресурсе оп-
ределяется на основе постоянных интервалов, например, за один день или за
одну неделю, то можно построить график ресурса (рис. 3.4).

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-26-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.2. Основы планирования.
Ресурсы, требуемые для осуществления каждой работы, складываются,
в результате чего рассчитывается суммарная нагрузка ресурса в единицу
времени. Как следует из графика на рис. 3.4, иногда потребности в ресурсах
превышают их доступность.
Рис. 3.4. Гистограмма ресурсов
Если потребность в ресурсе превысила его лимит, необходимо либо
вложить в проект дополнительное количество ресурса, либо пересмотреть
календарный план выполнения операций. Иногда в таких ситуациях необхо-
димо задержать срок выполнения проекта. Несмотря на то что некоторые
операции проекта не имеют явной логической последовательной взаимосвя-
зи, одновременное их выполнение часто оказывается невозможным вследст-
вие ограничений на ресурсы. Это ограничение можно отразить на графике
ресурса, если провести линию, соответствующую наличному количеству
данного ресурса. Такой прием позволит не планировать выполнение опреде-
ленных операций на один и тот же день.
3.3. Разработка плана на основе технологии
Rational Unified Process
Методология разработки программного обеспечения RUP известна
в России. Однако среди практиков по-прежнему нет четкого понимания того,
что такое RUP, кому, когда и зачем стоит ее внедрять. К сожалению, пред-
ставление о том, что RUP – это тяжелый формализованный процесс, и неко-
торые другие заблуждения часто приводят к нежеланию разработчиков зна-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-27-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
комиться с ним и использовать его достоинства в своей работе или, наоборот,
к недопониманию того, что и зачем они намерены внедрять.
Rational Unified Process (RUP) – это процесс разработки программного
обеспечения, который создает условия для упорядоченного подхода к рас-
пределению задач и обязанностей в организации, разрабатывающей ПО. Це-
лью этого процесса является производство качественного ПО, удовлетво-
ряющего требованиям конечных пользователей, в рамках прогнозируемого
бюджета
и графика работ.
3.3.1. Структура процесса: два измерения
На рис. 3.5 показана общая архитектура RUP. В процессе можно выде-
лить два измерения:
горизонтальная ось представляет время и показывает развитие различ-
ных аспектов жизненного цикла процесса. Это выражается через циклы,
фазы, итерации и вехи;
вертикальная ось представляет основные технологические процессы,
логически объединяющие виды деятельности по их природе:
1) моделирование производства;
2) управление требованиями;
3) анализ и проектирование;
4) реализация;
5) тестирование;
6) распространение;
7) управление конфигурацией и изменениями;
8) управление проектом;
9) управление средой.
3.3.2. Терминология и подход RUP
Статическую структуру RUP составляют описания работ и задач
(части работы), описания создаваемых артефактов, а также рекомендации по
их выполнению, которые группируются в шесть основных дисциплин: моде-
лирование производства (Business Modeling), управление требованиями
(Requirements), анализ и проектирование (Analysis and Design), реализация
(Implementation), тестирование (Test), распространение (Deployment), и три
вспомогательных: управление конфигурацией и изменениями (Configuration
and Change Management), управление проектом (Project Management), управ-
ление средой (Environment).
Динамическую структуру процесса составляют фазы и итерации. Про-
ект, как правило, делится на четыре фазы: исследование (Inception), уточне-
ние плана (Elaboration), построение (Construction) и развертывание
(Transition). Фазы, в свою очередь, делятся на итерации. В ходе каждой ите-
рации выполняются работы и задачи из различных дисциплин; соотношение
этих работ меняется в зависимости от фазы.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-28-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
Работы и задачи в RUP привязаны к стандартному набору ролей участ-
ников процесса. Роли объединяют более узкие группы работ и задач, которые
могут выполняться одним человеком с узкой специализацией.
Фазы
Исследование
Уточнение плана
Построение
Развертывание
1
2
3
4
5
6
7
8
9
Итер. No 1 Итер. No 2
–
–
–
–
–
Итер. No n – 1 Итер. No n
Итерации
Рис. 3.5. Структура процесса
Как правило, реальный исполнитель выполняет одну или несколько
ролей в соответствии со своей квалификацией. Скажем, менеджер проекта
может выполнять также обязанности архитектора. Одну роль в рамках проек-
та могут выполнять и несколько человек. Например, в проекте, как правило,
участвует несколько разработчиков.
Создатели RUP определяют его как итеративный, архитектурно-
ориентированный и управляемый прецедентами использования процесс раз-
работки программного обеспечения. RUP использует лучшие практические
методы (итеративная разработка, управление требованиями, использование
компонентной архитектуры, визуальное моделирование, непрерывный
контроль качества, управление изменениями) и десять элементов, представ-
ляющих квинтэссенцию RUP: разработка концепции; управление по плану;
снижение рисков и мониторинг их последствий; тщательная проверка
экономического обоснования; использование компонентной архитектуры;
прототипирование, инкрементное создание и тестирование продукта; регу-
лярные оценки результатов; управление изменениями; создание продукта,
пригодного к употреблению; адаптация RUP под нужды конкретного проек-
та.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-29-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
Пользоваться таким объемным определением не очень удобно. Поэто-
му для характеристики RUP Пером Кроллом введено понятие «дух RUP».
Оно не входит в «канонический» текст RUP, но предложено человеком, ко-
торый, являясь директором соответствующего направления в компании IBM,
связан с RUP самым непосредственным образом. Дух RUP заключается в
восьми принципах:
атаковать риски как можно раньше, пока они сами не перешли в атаку;
разрабатывать именно то, что нужно заказчику;
главное внимание – исполняемой программе;
приспосабливаться к изменениям с самого начала проекта;
создавать архитектурный каркас как можно раньше;
разрабатывать систему из компонентов;
работать как одна команда;
сделать качество стилем жизни.
Эти принципы весьма полно характеризуют RUP и в наибольшей сте-
пени соответствуют современному стилю разработки ПО.
П р и м е р. В качестве примера можно привести проект, который был
выполнен в соответствии с принципами RUP. Речь пойдет о разработке сис-
темы управления гостиницей, предназначенной для работы в режиме аренды
приложения (application service providing, ASP). Создаваемая система обла-
дала трехзвенной архитектурой с тонким клиентом, что позволяло избежать
процедуры инсталляции системы в гостинице (система развертывалась
в удаленном центре, в котором были установлены серверы, а пользователи из
гостиницы просто получали адрес для доступа к системе) и последующего
администрирования системы у клиента.
В начале проекта для его выполнения была создана команда из четырех
человек. В пиковые периоды численность команды вырастала до 15 человек
(не считая привлекаемых консультантов). Специалистов со знанием особен-
ностей трехзвенной архитектуры в составе команды не было. Этих двух мо-
ментов уже достаточно, чтобы оценить проект как весьма рискованный.
Работа над проектом началась с небольшой итерации, в ходе которой
были определены границы системы (попросту говоря, перечислены варианты
использования) и проверена принципиальная реализуемость системы на двух
ключевых вариантах использования (ВИ) – «Бронирование номера» и «Фор-
мирование отчета о занятых номерах». Был собран макет, включающий
сервер баз данных, сервер приложений и несколько HTML-страниц.
Это позволило убедиться в понимании технологий, которые предпола-
галось использовать. Было проведено первое тестирование с целью оценки
производительности. Был получен первый реальный опыт, который можно
было применять для более уверенного планирования последующих итераций
(в частности, для оценки трудоемкости различных задач).
После этого пришло время второй итерации, в ходе которой были
детально проработаны и частично реализованы остальные архитектурно зна-
чимые ВИ – «Внесение оплаты», «Ведение различных тарифов», «Уборка

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-30-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
и ремонт номеров» и др. Такой подход позволил не допустить проектных
ошибок, которые пришлось бы исправлять в ходе тестирования и внедрения
системы, а также наладить процесс тестирования, чтобы к передаче системы
в эксплуатацию быть уверенными в его результатах.
Основная проблема в ходе первых итераций состояла в том, чтобы
объяснить заинтересованным лицам, что в этих итерациях не предполагалось
доводить данный ВИ до завершения – планировалось лишь проверить каче-
ство выбранных решений. Скажем, ВИ «Оплата проживания» реализовывал-
ся в трех последовательных итерациях. В первой была реализована базовая
функциональность – оплата наличными всей начисленной суммы, в после-
дующих итерациях реализовывались сценарии частичной оплаты, а также
использования банковских карточек и чеков.
3.3.3. Итеративность
RUP относится к итеративным методологиям. Обычно говорят, что
в соответствии с RUP процесс разработки разбивается на четыре фазы,
а фазы, в свою очередь, делятся на итерации. Но лучше сформулировать это
немного иначе: разработка разбивается на итерации, а однотипные итерации
группируются в фазы.
В каждой итерации выполняются работы из всех дисциплин RUP. Од-
нако соотношение работ из разных дисциплин существенно зависит от фазы.
Так, в начальных итерациях обычно много внимания уделяется анализу
и проектированию и значительно меньше – реализации и тестированию.
В более поздних итерациях это соотношение меняется. В каждой итерации
выпускается релиз разрабатываемого программного обеспечения. Это позво-
ляет выявлять многие проблемы на ранних стадиях разработки, когда пре-
одолевать их значительно проще.
Разбиение проекта на итерации проводится с использованием четырех
принципов духа RUP: атака на риски, активное приспособление к измене-
ниям, раннее создание архитектурного каркаса, разработка системы из ком-
понентов.
3.3.4. Ориентация на архитектуру
Принципиальное отличие RUP от многих других итеративных подхо-
дов состоит в большом внимании к разработке архитектуры системы. Пояс-
ним, что в RUP называется архитектурой. Даже знакомые с RUP специалисты
иногда считают, что архитектура – это наиболее общее описание системы, и
ее разработка сводится практически к выбору между тонким и толстым кли-
ентом. В RUP понятие архитектуры не ограничивается этими принципиаль-
ными решениями и включает, в частности, используемые в проекте типовые
решения для доступа к СУБД, реализации параллельных процессов и т. д. Но
и это не все. Архитектура в RUP – это еще и ключевая часть кода (обычно до
20 % общего объема), которая позволяет продемонстрировать соответствие

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-31-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
системы основным функциональным и нефункциональным требованиям. По-
этому в RUP часто говорится об исполняемой архитектуре (executable
architecture). Чтобы избежать этого не совсем привычного словосочетания, в
дальнейшем будем использовать выражение «архитектурный каркас».
Ориентация на архитектуру означает, что разработку программного
обеспечения начинают с разработки архитектурного каркаса, а затем нара-
щивают дополнительную функциональность, максимально используя отра-
ботанные при создании каркаса типовые решения. Это дает возможность ис-
пользовать RUP для решения таких заведомо сложных задач, как разработка
систем с использованием новых технологий (например, языков программи-
рования или платформ), а также снижает трудоемкость разработки, позволяя
избегать многократного решения схожих задач.
П р и м е р. В первых итерациях проекта был разработан
архитектурный каркас системы, а также были выработаны типовые
технические решения, создана библиотека типовых графических объектов
(поля ввода для данных различных типов и т. п.) и типовой набор страниц
для работы с бизнес-объектами (форма ввода и редактирования данных,
форма ввода условий поиска, табличная форма результатов поиска). И только
на базе этого набора типовых решений была начата массовая реализация ВИ.
Идея использования типовых решений была доведена до логического
завершения. Был разработан специальный генератор экранных форм, кото-
рый создавал их автоматически по описанию в CASE-средстве. В результате
в проекте удалось добиться высокой производительности и полного едино-
образия программного кода.
Поскольку на начальной стадии проекта не было традиционного заказ-
чика (будущего пользователя), то простота общения с ним особенно не забо-
тила. Но и в этом случае была получена реальная польза от применения ВИ
в качестве единицы измерения работы над проектом. Раздача заданий по ВИ
и особенно контроль выполнения проекта по завершенным вариантам позво-
лили держать руку на пульсе. Во всяком случае, традиционного состояния
(«выполнено 90 %», «осталось 90 %») удавалось избегать. Также применение
ВИ существенно облегчило организацию тестирования и разработку доку-
ментации пользователя. Тестировщики, как правило, без труда готовили
тесты по описаниям ВИ, реализуемых в очередной итерации. А технический
писатель готовил черновой вариант пользовательской документации. При
этом и то и другое делалось до завершения разработки соответствующих
вариантов использования.
3.3.5. Процесс, управляемый вариантами использования
Из каких единиц функциональности состоит проект? Можно ли ска-
зать, что любое, самое незначительное добавление функциональности повы-
шает пользовательскую ценность системы? Как правило, существуют опре-
деленные наборы функций, которые либо должны поддерживаться системой
целиком, либо их вообще не имеет смысла автоматизировать. Разработка

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-32-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
программного обеспечения в RUP ориентируется именно на такие «кванты».
Либо вы полностью реализуете ВИ в вашей системе и пользователь получает
реальную автоматизацию своих бизнес-процессов, либо нет. В последнем
случае не важно, на сколько процентов вы реализовали ВИ: пользоваться им
все равно нельзя. Скажем, либо вы реализуете возможность выписать счет
для покупателя, либо нет. Если нет, то тогда не важно, какие функции упоря-
дочивания и фильтрации списков товаров вы уже реализовали.
В рамках объектно-ориентированного анализа и проектирования разра-
ботаны определенные методы и техники, направленные на реализацию именно
одного варианта использования. Дело в том, что реализация ВИ представляет
собой, как правило, обозримую задачу, с которой справляется один разработ-
чик. Но с другой стороны, ВИ представляет собой относительно независи-
мую задачу, которую часто можно реализовать в виде отдельного компонен-
та или подсистемы (или, по крайней мере, без необходимости непрерывно
координировать каждое свое самое мелкое действие с коллегами, занятыми
разработкой других частей).
3.3.6. Дух Rational Unified Process
Дух RUP – это те ключевые принципы, которые некий итеративный
процесс и превращает в RUP.
3.3.6.1. Атаковать риски как можно раньше
Риск – это все то, что может привести к возникновению проблем в ходе
разработки. Это может быть трудный заказчик, который меняет свои требо-
вания по ходу проекта. Или потенциальная вероятность того, что не удастся
провести интеграцию новой системы со старой бухгалтерской системой
заказчика. Если не предпринимать специальных действий, то риск может
привести к существенным проблемам в ходе проекта. Между тем риск, выяв-
ленный на ранних стадиях разработки, часто можно устранить с минималь-
ными дополнительными затратами.
Общайтесь с заказчиком теснее, организуйте формальное согласование
требований. Дайте своим сильнейшим программистам задание написать
небольшой прототип и отработать на нем принципы взаимодействия с бух-
галтерской системой. Если и у них не получится, может быть, лучше вообще
за этот проект не браться: вы еще потратили на проект не так много сил
и ресурсов, так что можно и отказаться.
Казалось бы, какая разница, когда бороться с риском? Группа лучших
программистов примерно за одинаковое время найдет решение, как устано-
вить взаимодействие с бухгалтерской системой, займется она этим в начале
работы над проектом или в конце. Однако последствия могут оказаться
разными. Часто такие решения сложных технических проблем накладывают
определенные ограничения на используемые технологии и способы решения
других проблем. Если решение найдено в начале работы, система будет раз-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-33-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
рабатываться с учетом требований этого решения. Если же в конце, то, воз-
можно, многое придется переделывать, а это уже совсем другой объем ра-
бот.
Кроме того, если начать бороться с рисками достаточно рано, у вас есть
время в запасе, чтобы подготовить и реализовать «план Б», если «план А»
не сработает. Скажем, привлечь к разработке соответствующего решения
дополнительных специалистов. Но таких специалистов нужно, как минимум,
найти, а в конце проекта может просто не хватить времени на сбор такой
группы, даже если средства на привлечение дополнительных специалистов
были предусмотрены.
В самом худшем случае, если устранить риск не удалось, можно по-
пробовать договориться с заказчиком о возможном сокращении функцио-
нальности системы. По крайней мере, у вас будет больше времени на такие
переговоры, к тому же идут они в это время легче, чем за неделю до сдачи
проекта.
Наиболее существенные риски во всех проектах схожи: в начале проек-
та это риск неверного определения границ проекта, затем риск не суметь
выбрать и разработать правильную архитектуру, далее риск не суметь быстро
и качественно реализовать функциональность системы. В конце проекта это
риски, связанные с передачей готовой разработки заказчику. Устранение оп-
ределенных рисков предполагает акцент на определенных работах. Именно
этот акцент и обусловливает группирование итераций в фазы. В итерациях
фазы «Исследование» устраняется риск неверного определения границ про-
екта и основное внимание уделяется работам, связанным с выявлением тре-
бований. В итерациях фазы «Уточнение плана» устраняются архитектурные
риски, зона особого внимания – анализ и проектирование. Пока не завершена
фаза «Уточнение плана» (т. е. пока не решены все принципиальные пробле-
мы), не стоит приступать к массированной разработке кода, составляющей
основную работу фазы «Построение»: слишком велика вероятность того, что
его придется перерабатывать позднее.
П р и м е р. Рисков в проекте было немало. И одним из основных был
риск использования новых технологий, ведь в проекте применялись
Web-технологии и трехзвенная архитектура, которыми никто из участников
проекта на начальной стадии не владел. Выявление наиболее рискованных
моментов, проверка их на различных прототипах, тиражирование только
проверенных решений позволили избежать серьезных заторов, когда отсут-
ствие решения для очередной проблемы тормозит весь проект. Конечно, пол-
ностью избежать проблем и поиска альтернативных решений не удалось.
Так, долгим был поиск стабильных способов формирования документов
Word для печати. Но поскольку эти проблемы были выявлены на первых
итерациях, они
не привели к существенным задержкам.
Еще один риск, с которым пришлось столкнуться, – большая текучесть
кадров, пока не устоялся костяк команды. Автоматическая генерация форм

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-34-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
помогла упростить передачу созданного ранее кода новому разработчику.
Объем ручного кода существенно уменьшился, а разобраться в типовых
описаниях экранных форм оказалось просто.
Увы, очень часто разработчики считают, что они лучше знают, что на-
до заказчику. Но еще «лучше» это знают те, кто вообще не принимает уча-
стия
в разработке. Отсутствие реального заказчика в данном проекте
весьма усложнило ситуацию. Использование специалистов по внедрению
гостиничных систем в качестве консультантов чуть не привело к увлечению
украшательством вместо отработки действительно необходимой функцио-
нальности. Зато первая же бета-инсталляция системы показала, что нужно
заказчику, и позволила сосредоточиться на главном.
3.3.6.2. Разрабатывать именно то, что нужно заказчику
Как ни банальны эти слова, но жизнь учит повторять их снова и снова.
Информационные системы разрабатываются для заказчиков и покупателей,
и надо максимально точно выполнять все их пожелания. Формулирование
требований в форме вариантов использования и формирование тестов на осно-
ве этих прецедентов позволят быстрее понять пожелания заказчика и точнее их
выполнить. А заказчику они помогут с самого начала понять, что вы собирае-
тесь разрабатывать, и при необходимости откорректировать ваши планы.
3.3.6.4 Главное внимание – исполняемой программе
Главный результат, которого ждет от вас заказчик, – работающая сис-
тема. Никакие документы и модели сами по себе не важны. Они важны лишь
настолько, насколько помогают создать и поддерживать работающую систе-
му. Срок жизни программ в наши дни часто не превышает двух лет. Затем
они нередко заменяются совершенно другими программами, часто выпол-
ненными в другой технологии и реализующими другие бизнес-правила. Все-
гда ли нужна в такой ситуации детально проработанная проектная докумен-
тация? Или ее разработка приведет только к неоправданному завышению
стоимости разработки? Конечно, вопрос этот в каждом конкретном случае
требует серьезного анализа. Но важно понять, что простой рецепт «докумен-
тации всегда должно быть много» не является безоговорочно верным.
П р и м е р. Поскольку разработка программы велась в инициативном
порядке, объем документации определялся в первую очередь потребностями
последующего сопровождения системы. При этом упор делался на разработ-
ку кратких описаний требований в форме возможностей системы и тщатель-
ное документирование кода. В настоящее время система успешно эксплуати-
руется в нескольких гостиницах и сопровождается группой всего из двух
программистов. Тщательное документирование кода помогло бороться с по-
следствиями текучести кадров.
Всплеск интереса к разрабатываемой системе у сотрудников маркетин-
гового и других отделов (после создания первой работоспособной версии)
привел к появлению множества противоречивых пожеланий относительно
доработки и развития системы. Это достаточно типичная ситуация для орга-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-35-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
низаций, не специализирующихся на разработке ПО. И здесь от руководства
проекта потребовалось волевое решение, чтобы ужесточить процедуру при-
нятия решений о доработках и не допустить развала программы. Авторитет
RUP в этом существенно помог.
3.3.6.4. Приспосабливаться к изменениям с самого начала проекта
Вопреки бытующему мнению, изменения – благо для проекта. Вряд ли
вы везде и всегда сможете найти оптимальное решение с первой попытки.
А изменения дают, как минимум, еще один шанс. Но, чтобы так относиться
к изменениям, надо к ним хорошо подготовиться. Нужно понимать, к каким
последствиям приведет изменение, определить процедуру принятия решений
об изменениях и оценить, стоит ли выполнять данное изменение сейчас или
лучше отложить его до следующей итерации или до разработки следующей
версии программы.
3.3.6.5. Создавать архитектурный каркас как можно раньше
Разработка архитектуры для новой системы – один из основных источ-
ников риска в проекте. Наличие стабильного, тщательно протестированного
архитектурного каркаса – хороший базис для быстрого и успешного завер-
шения проекта. Именно поэтому желательно спроектировать, разработать и
протестировать архитектурный каркас системы как можно раньше. Кроме то-
го, хорошо проработанная архитектура позволяет успешно решать такую
традиционно сложную проблему, как подключение дополнительных разра-
ботчиков на поздних стадиях разработки.
Принципы итеративной и архитектурно-ориентированной разработки,
атаки на риски и раннего создания архитектурного каркаса тесно связаны.
Итерационная разработка позволяет вынести в первые итерации решение
наиболее рискованных задач. Традиционно самой рискованной задачей явля-
ется выбор архитектурных решений. А проверить этот выбор можно, только
опробовав его в деле, т. е. разработав архитектурный каркас системы.
П р и м е р. Итак, первый работающий прототип системы, послуживший
основой архитектурного каркаса, был выполнен еще до завершения сбора
пожеланий заинтересованных лиц (в данном проекте – консультантов проек-
та). Это позволило своевременно отказаться от некоторых оказавшихся неудач-
ными решений, например от излишне сложного для Web-приложения интер-
фейса. С другой стороны, на первых прототипах были отработаны принципи-
альные решения для доступа к СУБД, для построения HTML-таблиц с рас-
ширенной функциональностью (выделение одной или нескольких строк, ре-
дактирование с контролем правильности введенных значений и т. п.), для
поддержки многоязычного интерфейса с мгновенным переключением с язы-
ка на язык.
Не стоит переходить в фазу «Построение» (т. е. приступать к массиро-
ванной реализации вариантов использования и их окончательной «полировке»)
до того, как создан достаточно удачный архитектурный каркас. Конечно, вы
выслушаете много замечаний относительно того, что ни один ВИ не доведен

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-36-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
до ума, зато впоследствии вам не придется заниматься массовой переработ-
кой кода.
3.3.6.6. Разрабатывать систему из компонентов
Использование компонентов, соединяющих данные и методы для их
обработки, – это наиболее эффективный способ декомпозиции системы. Если
разбивать систему на подсистемы по функциональному принципу, возникает
множество связей через данные и необходимые изменения, вроде «Проблемы
2000», потребуют модификации множества подсистем. Если же данные
и методы для работы с ними объединены в компоненте, все изменения
в такой системе ограничиваются одним компонентом.
Компоненты не нужно путать с использованием объектных языков.
Компонентом может быть и библиотека процедур, написанных на необъект-
ном языке, и даже группа таблиц баз данных Oracle вместе с пакетом храни-
мых процедур для работы с ними. Важно то, что доступ к компоненту осуще-
ствляется только через хорошо определенный интерфейс.
Еще одно достоинство компонента состоит в том, что его можно
использовать повторно или заменить другим компонентом. При этом доста-
точно проверить, что сохранен старый интерфейс.
3.3.6.7. Работать как одна команда
Люди – главный капитал проекта. Разработка программ все более ста-
новится командным делом, поэтому отношения между участниками проекта
становятся все более важной составляющей общего успеха.
При итеративном подходе к разработке программ аналитики не уходят
из проекта, быстренько записав требования, поэтому они не стараются по-
скорее «спихнуть» задачу разработчикам, а те, в свою очередь, – тестиров-
щикам. Каждый понимает, что его участие в проекте продолжится в следую-
щих итерациях и любые его недоработки к нему же и вернутся. Все пробле-
мы будут проблемами команды.
Важная роль в обеспечении эффективного взаимодействия участников
проекта принадлежит архитекторам. Именно они должны быть коммуника-
ционным центром команды, мимо которого не должно проходить ни одно
важное техническое решение.
П р и м е р. Компоненты можно использовать повторно для решения
аналогичных задач в другом проекте. В проекте таким компонентом стал модуль
поддержки использования IP-телефонов (телефонный аппарат с небольшим
дисплеем и возможностью работы в режиме браузера) для доступа к системе.
IP-телефон позволял клиентам гостиницы получать различную справочную
информацию или заказывать услуги, а сотрудникам гостиницы – передавать
в систему сведения о выполненных заданиях, например о завершении уборки
номера. Четко определенные интерфейсы позволили сделать модуль легко
настраиваемым для работы с различными системами управления гостиницами.
В наше время все чаще программное обеспечение разрабатывается тер-
риториально разнесенными группами разработчиков. Как быть в этом слу-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-37-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
чае? Самое эффективное решение – разбить систему на максимально незави-
симые части и раздать каждой группе, участвующей в проекте, по одной или
несколько подсистем. Выделенная группа архитекторов, обязательно разме-
щенная достаточно компактно, должна будет согласовывать требования
к подсистемам (интерфейсы), утверждать общие для всех технические реше-
ния, являться своего рода коммуникационным центром проекта. Если такой
единой группы архитекторов не создано, вряд ли удастся избежать того, что
каждая группа разработчиков будет придерживаться собственного стиля.
В результате могут возникнуть сложности со сведением частей, разработан-
ных командами, в одну систему и ее дальнейшим сопровождением.
Еще хуже, если группы, участвующие в разработке, формируются по
функциональному признаку (скажем, группа аналитиков, группа разработчи-
ков, группа тестеров). В такой ситуации от групп потребуется чрезвычайно
детальное документирование всех материалов проекта. И при этом все равно
вряд ли удастся избежать недопонимания между участниками различных
групп, взаимодействующих между собой. К тому же, это не позволяет в пол-
ной мере использовать обратную связь между участниками проекта для по-
вышения их квалификации, поиска наилучших решений и т. п.
3.3.6.8. Качество – стиль жизни
Качество разрабатываемого программного обеспечения во многом
связано с качеством тестирования. Одно из существенных преимуществ
итеративной разработки – возможность начать тестирование буквально с са-
мого начала работы над проектом. Но нельзя сводить проблемы качества
только к тестированию. Качество ПО во многом зависит от качества анализа
и проектирования, от рекомендаций и требований к кодированию (обяза-
тельность комментариев, структуризация и оформление кода и многое дру-
гое). Поэтому только совместная работа всех участников команды, направ-
ленная на повышение качества программного обеспечения, способна это ка-
чество обеспечить.
Формирование командного духа в сочетании с пониманием всеми чле-
нами команды важности высокого качества разработки дает дополнительные
возможности повышения качества программного обеспечения. Качество –
это задача всей команды, а не только тестировщиков.
Возможности итеративной разработки в части обучения на собствен-
ных ошибках, причем еще на ранних стадиях проекта, должны использовать-
ся
в полной мере, в том числе для постоянного наращивания качества
разрабатываемого ПО и процесса разработки.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-38-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
П р и м е р. Даже самое тщательное тестирование программного обес-
печения не гарантирует его высокого качества. Для повышения качества
в проекте использовались тренинги, которые проводились самыми опытными
участниками проекта и включали разработку формальных требований к
офор-млению кода, разработку дополнительных специальных функций для
упрощения тестирования. Так, были специально разработаны функции, по-
зволяющие в ускоренном режиме «прокручивать» время и проводить за счи-
танные минуты тестирование процессов, реально занимающих несколько
дней.
3.3.7. RUP: принципиальные подходы и практические методы
RUP включает в себя тщательно расписанный подход к разработке –
перечень работ и задач, которые нужно выполнять, список артефактов, кото-
рые нужно разрабатывать в соответствии с приведенными шаблонами. Но
с другой стороны, RUP – это довольно общие подходы, дух и лучшие прак-
тические методы. Следование этим методам вовсе не предполагает выполне-
ния всех перечисленных в RUP работ или формирования всех перечисленных
артефактов. А уж тем более, следования всем шаблонам и рекомендациям.
Что же здесь первично? Что именно позволяет утверждать, что одна команда
работает в соответствии с RUP, а другая – нет?
RUP – это прежде всего принципиальные подходы и практические
методы. Именно они составляют залог успешной разработки программного
обеспечения. Выполнение же всех прописанных в RUP работ и задач само по
себе не обеспечивает успешного завершения проекта. Тем не менее роль
этого описания достаточно велика. Надо отметить, что конкретные рекомен-
дации и наставления RUP, по сути, являются очень полезным учебником,
позволяющим легко освоить новые подходы и приемы выполнения работ.
Если вы не знаете, как выполнять определенную работу, выполните ее в со-
ответствии с рекомендациями RUP. Используйте инструментарий также в
соответствии с рекомендациями. Освоив эти действия, обратите внимание на
указания о том, когда и как стоит изменить данный шаблон, когда подумать
о том, нужно ли вообще вам его использовать, как настроить процесс на осо-
бенности конкретного проекта. Подобные указания в RUP встречаются очень
часто. Еще лучше, если при освоении RUP вы будете пользоваться советами
опытного наставника, принимающего участие в проекте: это позволит вам
с самого начала использовать решения, настроенные на особенности вашего
проекта.
П р и м е р. В ходе проекта выполнялись вовсе не все прописанные
в RUP работы и задачи. Тем более, разработка и оформление всех
предлагаемых RUP артефактов. Но следование духу RUP позволило
справиться со многими проблемами, а других – просто избежать.
Следование духу RUP было не всегда осознанным, поскольку на
момент начала проекта в команде не было человека, знакомого с RUP доско-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-39-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
нально. Иногда (например, так было с ранним созданием архитектурного
каркаса и с ранней атакой на риски) решения принимались еще до знакомст-
ва
с соответствующими принципами RUP. В других же случаях пути
совершенствования используемого на конкретный момент процесса разра-
ботки (а процесс разработки, как и рекомендует RUP, постоянно уточнялся)
искались
в RUP сознательно, например при организации управления из-
менениями
и контроля версий.
Наибольшее влияние на успешное завершение проекта, без сомнения,
оказали итеративная разработка и раннее создание архитектурного каркаса.
Именно благодаря использованию этих принципов RUP, несмотря на приме-
нение новых технологий, удалось всего за полгода выпустить первую рабо-
тоспособную версию системы.
Но нужно ли вообще в таком случае формализованное описание про-
цесса RUP? Безусловно. Очень полезны руководства по выполнению опреде-
ленных работ и задач. Они часто содержат очень конкретные и отточенные
методические указания и списки контрольных вопросов, которые можно
использовать как для самоконтроля, так и при взаимном рецензировании
выполненных артефактов. Не менее полезны шаблоны документов: они су-
щественно упрощают понимание процесса. В какой-то мере они заменяют
профессионального наставника или человека с опытом использования RUP,
который мог бы показать, к чему, собственно говоря, следует стремиться.
RUP – хорошо документированный процесс разработки программного
обеспечения. Использование тщательно проработанного и документирован-
ного процесса позволяет даже не очень опытным разработчикам выполнять
сложные проекты. Они быстрее приобретают высокую квалификацию и до-
пускают существенно меньше ошибок. Однако при внедрении RUP важно
помнить, что детальное описание процесса является скорее учебным пособи-
ем или справочником, чем непосредственным руководством к действию.
Главное – следование основным принципам и духу RUP. Без должного вни-
мания к этим принципам использование RUP может привести совсем не к
тем результатам, на которые вы рассчитывали.
3.3.8. Пример разработки плана на основе принципов RUP
Приведенный на рис. 3.6 план разработан с учетом принципов RUP. Он
содержит четыре фазы: исследование, уточнение плана, построение и развер-
тывание. На рис 3.6 также отражено, что длительность технологических
процессов различна по времени в зависимости от фазы.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-40-
3. ПЛАНИРОВАНИЕ РАБОТ ПО ПРОЕКТУ
3.3. Разработка плана на основе технологии
Рис. 3.6. Пример разработки плана на основе принципов RUP
Контрольные вопросы
1. Что такое проект?
2. Что обусловливает уникальность продуктов или услуг проекта?
3. Из каких процессов состоит проект?
4. На какие группы могут быть разбиты процессы управления проектами?
5. Перечислите составляющие проектного плана.
6. Что такое проектный треугольник?
7. Как взаимодействуют составляющие проектного треугольника?
8. Что необходимо помнить при оптимизации плана?
9. Что такое критический путь?
10. Факторы ограничений, учитываемые при планировании.
11. Какова цель процесса разработки программного обеспечения
Rational Unified Process?
12. Какую структуру имеет Rational Unified Process?

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-41-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ
С ВЫПОЛНЕНИЕМ ПРОЕКТА
Управление рисками, связанными с разработкой программного обеспе-
чения, представляет собой формальный процесс, позволяющий систематиче-
ски идентифицировать, оценивать и смягчать факторы возможного риска.
В процессе управления проектом основное внимание уделяется вопросам
идентификации рисков, имеющих как внешние, так и внутренние причины.
Менеджер проекта должен хорошо справляться с оценкой и управлени-
ем рисками, возникающими при разработке программ. Управление рисками,
равно как анализ возникающих рисков и непрерывное планирование, охва-
тывает весь жизненный цикл разработки, вплоть до сдачи проекта. Риски
анализируются, определяются их приоритеты с учетом недельного графика
работ, и текущий список рисков из «первой десятки» оглашается на ежене-
дельном собрании, на котором рассматривается текущее состояние проекта.
Единственная возможность смягчения степени влияния рисков заключается в
их отработке участниками команды разработчиков проекта.
4.1. Качественные и количественные методики оценки риска
Для анализа рисков применяют как традиционные, так и новые инст-
рументы и методики. В первой группе можно выделить следующие методи-
ки:
«мозговой штурм»:
а) идеи по анализу рисков предлагаются без обсуждения или оценки;
б) построения выполняются на основе предложенных идей;
в) процесс повторяется до тех пор, пока не исчерпаются все идеи;
метод Delphi:
а) выделяется группа экспертов (изолированных друг от друга и незна-
комых между собой);
б) подготавливается и распространяется перечень вопросов, относя-
щихся к рискам;
в) проводится опрос экспертов по поводу различных подходов к обра-
ботке рисков и других аспектов этой темы;
г) среди членов группы распределяются отклики и статистические дан-
ные, полученные при осуществлении обратной связи;
д) процесс повторяется до тех пор, пока эксперты не достигнут консен-
суса.
Среди новых методик можно отметить следующие:
анализ, базирующийся на чувствительности:
а) выбирается несколько переменных, играющих важную роль в рас-
сматриваемом аспекте;

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-42-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С ВЫПОЛНЕНИЕМ ПРОЕКТА
4.1. Качественные и количественные методики оценки риска
б) определяется приемлемый диапазон вариации;
в) проводится оценка эффекта, возникающего в результирующем про-
екте при изменении диапазона;
вероятностный анализ аналогичен анализу, базирующемуся на чувст-
вительности. Добавляется вероятностное распределение для каждой пере-
менной, что уменьшает возможный оптимизм;
имитация по методу Монте-Карло аналогична вероятностному анали-
зу. Добавляются следующие действия:
а) каждой переменной присваиваются случайные значения;
б) имитация выполняется несколько раз для получения вероятностного
распределения результата;
в) формируется диапазон вероятностных значений для результата.
4.2. Контроль рисков, проявляющихся при разработке программного
обеспечения
Приведем примеры ключевых рисков и угроз при разработке ПО и спо-
собы их контроля.
1. Нереальный бюджет и график.
С п о с о б к о н т р о л я:
а) проследите все оценки и реалии; оцените уровень профессионализма
команды;
б) получите ясное представление о том, чем заполнено рабочее время
разработчиков: в любой организации имеются резервы рабочего времени;
в) не позволяйте клиенту уговаривать вас принять нереальные оценки
для сроков и объемов бюджета.
2. Недостатки имеющегося персонала.
С п о с о б к о н т р о л я:
а) запланируйте обучение в тех областях, которые необходимы для вы-
полнения данного проекта;
б) установите обучающий шаблон для разработчиков на время выпол-
нения проекта;
в) культивируйте такие взаимоотношения в команде, которые способ-
ствуют обучению персонала, приветствуйте разделение коллектива на груп-
пы по рабочим интересам.
3. Внедрение ошибочных направлений.
С п о с о б к о н т р о л я:
а) настаивайте на встрече с заказчиком;
б) используйте прототип и демонстрируйте планируемые подходы.
Проект плана управления рисками содержит все идентифицированные
риски и, в случае необходимости, планы по их смягчению. При генерирова-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-43-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С ВЫПОЛНЕНИЕМ ПРОЕКТА
4.2. Контроль рисков, проявляющихся при разработке программного обеспечения
нии откликов на риск идентифицированные риски могут обрабатываться
тремя способами:
принять – ничего не делать. Одобрение последствий как в активной,
так и в пассивной форме;
передача. Перекладывайте потери на третьи организации как на кон-
трактной основе, так и с помощью санкций или приобретения страховки;
смягчение. Уменьшайте влияние или вероятность риска с помощью
непрерывного планирования или используйте резерв, попытайтесь устранить
причину, применяя альтернативные стратегии разработки ПО.
Управление откликами на риск предполагает регулярную экспертную
оценку всех рисков с целью отражения происшедших изменений. Информа-
ция о десяти наиболее важных рисках пересматривается, как минимум, еже-
недельно.
4.3. Категории риска
План управления проектными рисками моделирует 12 категорий по-
тенциального риска для определенного проекта.
Задачи и цели. Каждый одобренный проект должен занимать соответ-
ствующее место среди целей и задач организации. Те проекты, которые
не соответствуют реальным целям организации, создают напряжение,
влияющее на все проекты. Например, потребуем, чтобы существовала орга-
низация, в задачи которой входила бы разработка ПО для внутреннего кор-
поративного производства. Цель – создание наиболее эффективного заказно-
го ПО для организации. Если организация приступит к выполнению проекта
по созданию пакета ПО общей направленности и на коммерческой основе,
это будет рискованным мероприятием, противоречащим текущим задачам
и целям организации.
Организационный менеджмент. Каждый из выбранных проектов
должен вписываться в текущую или планируемую организационную струк-
туру. Если организация не обладает подобной структурой или же еще не соз-
дана, трудно рассчитывать на успешную реализацию программного проекта.
Примером подобных рискованных формирований являются торговые орга-
низации, прекращающие разработку проектов без дотаций со стороны испол-
няющих организаций. Проект «перебрасывается на поле» организации по
разработке, поскольку нет подходящей команды и отсутствует процесс фор-
мирования типа системы торговли.
Заказчик. Все проекты должны иметь постоянную обратную связь
с заказчиком. Проект разработки ПО требует обширных вводных данных, ко-
торые могут представить заказчики и конечные пользователи. Без подобного
ввода данных самый удачный процесс разработки приведет к формированию
только отлично функционирующей системы, не отвечающей реальным за-
просам конечных пользователей. Сокрытый здесь риск состоит в привлече-
нии
в команду неопытных сотрудников, не обладающих адекватным

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-44-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С ВЫПОЛНЕНИЕМ ПРОЕКТА
4.3. Категории риска
опытом по разрешению проблем, связанных с предметной областью. Такие
сотрудники не смогут удовлетворять технические запросы разработчиков
ПО.
Бюджет/стоимость. Именно данная категория риска обычно привле-
кает наиболее пристальное внимание и оказывает влияние на все другие ка-
тегории потенциального риска. Менеджеры проектов сосредотачивают вни-
мание на бюджете и объемах затрат, поскольку именно эти рычаги позволя-
ют задействовать широкий спектр возможностей, приводящих проект к ус-
пешному завершению. Для уменьшения риска, относящегося к этой катего-
рии, следует четко представлять размеры проекта, располагать достоверной
предысторией о работе над подобными проектами, а также иметь достаточно
полное представление о внешних влияниях, например о технологии.
График. Самый большой риск состоит в том, что команде разработчи-
ков навязываются слишком тесные временные рамки графика. Если разра-
ботчики не могут оказывать влияние на формирование графика и даты клю-
чевых этапов проекта, довольно велика вероятность того, что график выпол-
няться не будет. Команды разработчиков ПО должны принимать участие в
разработке проектных графиков и иметь возможность вносить в них измене-
ния.
Содержание проекта. Все проекты генерируют те или иные особенно-
сти, которые дополняют проект и образуют промежуточные продукты. Од-
ним из основных компонентов является документация, содержащая требова-
ния, сведения о проектировании, и целевая программная система. Если эта
информация отсутствует, могут появиться ошибки либо резко и непредска-
зуемо возрастет риск потери сведений, содержащихся в проекте. Также мо-
жет
нарушиться график или существенно пострадает содержимое про-
дукта.
Выполнение. Этот фактор риска относится к особому периоду – этапу
практических испытаний разработанной системы. Однако именно этот фак-
тор риска является ключевым критерием при разработке ПО. Некоторые из
основных областей риска относятся к функционированию системы во время
тестирования. Критическое значение имеет возможность полного тестирова-
ния всех модулей и их интерфейсов. Неадекватное тестирование ведет к сбо-
ям при выполнении проекта.
Управление проектом. Эта категория риска относится как к процес-
сам управления проектом, так и к компетенции менеджера проекта. Риск су-
ществует не только из-за недостатков и неадекватной трактовки процессов
менеджмента, но может быть также следствием предыдущего опыта работы
менеджера проекта. Менеджеры проектов должны иметь опыт работы
с предметной областью и иметь представления о процессах проектного
менеджмента.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-45-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С ВЫПОЛНЕНИЕМ ПРОЕКТА
4.3. Категории риска
Процессы разработки. Эта категория риска охватывает процессы,
которые уменьшают общий риск и улучшают качество производимого
продукта. К процессам разработки не относятся специфические инструмен-
ты, такие как языки программирования, построители или генераторы кода.
Рассматриваемые процессы охватывают процессы конфигурационного
менеджмента, практику страховки качества и анализ альтернатив.
Среда разработки. Данная категория риска относится к физической
среде возможностей, аппаратным платформам и инструментам по разработке
ПО. Риск возникает не только из-за несовершенства адекватных инструмен-
тов, но и вследствие отсутствия адекватных возможностей. Если команда
не подобрана специально для решения конкретной задачи, отсутствует долж-
ное пространство для выработки соглашений, пространство для поддержки
интервью с заказчиком и рабочие комнаты, риск существенно возраста-
ет.
Персонал. Эта категория риска является единственной, где существен-
ное уменьшение риска достигается за счет набора опытной и высокопроизво-
дительной команды разработчиков ПО. Разработчики, обладающие высокой
рабочей эффективностью, могут в 10 и даже в 25 раз продуктивнее работать,
чем обычная команда. Неуверенность в возможностях команды или в опыт-
ности ее членов в сочетании с некоторыми особенностями проблемных
предметных областей способствует фиксации консервативного подхода к
факторам риска из этой категории.
Поддержка как категория риска позволяет количественно оценивать
риск, связанный с ПО, после поставки программного продукта. Команда раз-
работчиков проекта часто несет ответственность за поддержку программного
обеспечения в течение определенного периода после поставки продукта. Ес-
ли же это не так, а неопытные пользователи пытаются фиксировать ошибки
в программном обеспечении, проектный риск существенно возрастает. Инст-
рументы, применяемые для разработки, должны быть доступны и на этапе
поддержки. Поддержка поставщика после выпуска продукта характеризуется
наличием риска выпуска, если отсутствует план или бюджет для реализации
инструментария непрерывной поддержки.
4.4. Пример этапов разработки плана управления рисками
Разработка плана управления рисками представляет собой несложный
процесс, состоящий из пяти этапов. Предварительно произведя указанное
разбиение на 12 категорий рисков, необходимо выполнить ранжирование
и отсортировать риски таким образом, чтобы ими можно было управлять.
Затем рассматриваемый план появится в результате процесса идентификации
рисков, введения категорий риска и установления приоритетов.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-46-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С ВЫПОЛНЕНИЕМ ПРОЕКТА
4.4. Пример этапов разработки плана управления рисками
Этап 1. Используя описанные категории рисков, создайте таблицу этих
категорий. Команда разработчиков может воспользоваться этой таблицей для
просмотра категорий рисков данного проекта, а также получить информацию
о наборе факторов риска для их изучения. Таблица категорий рисков должна
содержать сведения о том, какие факторы рисков более реальны и сколь они
наглядны. Данная таблица является отправной точкой при идентификации
определенных рисков в каждом проекте. Пример оценки рисков приведен
в табл. 4.1.
Этап 2. Проводится анализ факторов рисков, связанных с выполнением
проекта, по следующим категориям (табл. 4.1):
1) факторы риска и области. В каждой категории в этом столбце таб-
лицы перечисляются факторы категории риска;
2) вероятность возникновения фактора риска. Этот столбец характе-
ризует данный фактор относительно вероятности риска для проекта (интер-
вал от 0 до 1);
3) степень влияния фактора риска на проект. Определяется уровень
фактора риска, применимый для данного проекта (интервал от 0 до 10);
4) оценка фактора риска. Проводится умножение вероятности возник-
новения фактора риска (второй столбец) на степень влияния фактора риска
на проект (третий столбец) – получается итоговая оценка рассматриваемого
фактора риска;
5) комментарии. Отражается информация об особенностях проекта,
которая позволяет соблюдать выбранный рейтинг.
Этап 3. Проводится сортировка таблицы рисков по итоговой оценке
в порядке их убывания. Ключевыми будут являться риски, расположенные
в начале списка таблицы. Идентифицируйте средства для контроля над каж-
дым ключевым риском, устанавливая ответственного за эти действия и дату
их выполнения.
Таблица 4.1
Пример оценки рисков
Фактор риска
Использование
новой среды раз-
работки
Сотрудник с уни-
кальными навы-
ками
Вероятность Степень Оценка
           возникновения влияния фактора
                                             на проект риска
0,2 4 0,8
0,1 3 0,3
Комментарий
Этап 4. Установите формат отчета по контролю регулярного риска.
Этот отчет заслушивается на еженедельных встречах, где рассматривается
состояние проекта. Как минимум, отражайте состояние «верхней» десятки
и изменения в ранжировании для каждого риска за последнюю неделю.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-47-
4. ОЦЕНКА РИСКОВ, СВЯЗАННЫХ С ВЫПОЛНЕНИЕМ ПРОЕКТА
4.4. Пример этапов разработки плана управления рисками
Этап 5. На заключительном этапе следует удостовериться, что управ-
ление рисками является непрерывным процессом в рамках управления про-
ектами. Отслеживание и контроль рисков, включенных в список, должны
выполняться на регулярной основе. Менеджер проекта и все члены команды
должны обращать пристальное внимание на поведение идентифицированных
рисков, а также контролировать процессы их определения. Новые риски
должны идентифицироваться в первую очередь, и для них нужно определить
приоритеты. Риски с высоким приоритетом следует обрабатывать в соответ-
ствии с общим планом проекта.
Контрольные вопросы
1. Что собой представляет процесс управления рисками?
2. На каких этапах ведется анализ возникающих рисков?
3. Каким рискам должно уделяться внимание?
4. Какие существуют методики оценки риска?
5. Что включает в себя план управления рисками?
6. Перечислите категории потенциального риска для проекта.
7. Из каких этапов состоит план управления рисками?

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-48-
5. ОЦЕНКА ПАРАМЕТРОВ ПРОЕКТА
5.1. Оценка трудоемкости разработки программной системы
При составлении плана проекта программной системы необходимо
оценить три показателя до начала проектирования: длительность (продолжи-
тельность) разработки, требуемые усилия (трудозатраты), количество спе-
циалистов (штат разработчиков). Эти показатели позволяют определить
стоимость разработки проекта. Кроме того, должны быть спрогнозированы
необходимые ресурсы (программные и технические), которые потребуются
для разработки проекта, и потенциальные риски при выполнении работ.
О каждом проекте нужно собирать и хранить следующую информа-
цию:
трудозатраты (в человеко-часах);
стоимость разработки (в соответствующей валюте);
объем написанных программ (в строках исходного кода);
численность разработчиков (человек);
объем документации (в страницах);
количество ошибок.
В результате обработки этих данных, собранных по многим проектам,
может быть получен, кроме основных, ряд производных базовых метрик,
позволяющих проводить впоследствии оценки средней производительности
труда разработчиков, стоимости разработки одной строки кода, относитель-
ного числа страниц документации на тысячу строк кода и т. д. Перечислен-
ные метрики позволяют прогнозировать трудоемкость и стоимость разработ-
ки новых проектов.
Для оценки программного проекта можно использовать подход, осно-
ванный на знаниях о предыдущих проектах, – метод оценки трудозатрат
функциональных блоков.
5.2. Метод оценки трудозатрат функциональных блоков
Для получения оценки программного проекта на основе метода оценки
трудозатрат функциональных блоков выполняются следующие шаги:
1. На основе предварительного анализа требований должны быть опре-
делены основные функциональные подсистемы (блоки) будущего программ-
ного продукта.
2. Для каждого типа функционального блока определяется количество
типов элементов и производится оценка сложности каждого типа элемента
относительно друг друга (в том случае, если прежде такая оценка не произ-
водилась).

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-49-
5. ОЦЕНКА ПАРАМЕТРОВ
5.2. Метод оценки трудозатрат функциональных блоков
3. Для каждого функционального блока определяется количество эле-
ментов каждого типа.
4. Выполняется вычисление оценки трудозатрат для каждого функцио-
нального блока разрабатываемой системы.
5. В результате суммирования данных по всем блокам получают оцен-
ки трудозатрат и стоимости разработки всей системы.
5.2.1. Функциональная декомпозиция системы
Разрабатываемая система делится на основные подсистемы. Деление
про-изводится по принципу обобщения набора функций системы или вариан-
тов использования в единый по смыслу блок, который и называется подсис-
темой. Например подсистема авторизации, подсистема формирования отче-
тов, подсистема ведения справочных данных и т. п.
Оценка для каждого типа элемента
No
Тип элемента
п/п
1 Простой объект
2 Средний объект
3 Сложный объект
4 Простая транзакция
5 Средняя транзакция
6 Сложная транзакция
7 Простой журнал
Оценка
сложности, %
3,85
7,69
11,54
3,85
7,69
19,23
7,69
8
Средний журнал
15,38
9
Сложный журнал
23,08
Таблица 5.2
Критерии
Количество простых и составных полей
менее 15
Количество простых и составных полей
более 15, но менее 50
Количество простых и составных полей
более 50
Выборка данных посредством SQL-запро-
са или хранимой процедуры
Выполнение нескольких SQL-запросов
и/или хранимых процедур
Реализация математического алгоритма
Таблица, состоящая из простых полей, для
создания которой используется один
несложный SQL-запрос
Таблица, состоящая как из простых полей,
так и из опциональных и/или списочных.
Для создания таблицы используется один
или несколько простых SQL-запросов
Таблица, состоящая из простых полей
и/или опциональных и списочных полей.
Для фильтрации данных в таблице исполь-
зуются дополнительные поля на форме.
Для загрузки данных в таблицу использу-
ются один или несколько сложных SQL-
запросов (хранимые процедуры)
Для каждой подсистемы (или функционального блока) необходимо
знать количество единиц функционального блока, которые делятся на типы

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-50-
5. ОЦЕНКА ПАРАМЕТРОВ
5.2. Метод оценки трудозатрат функциональных блоков
k
сложности Ei , j (где k – номер выполненного проекта; і – номер функцио-
k
нального блока; j – номер типа сложности) и трудозатраты Ti , использован-
ные на разработку і-го функционального блока в k-м проекте.
Функциональные блоки могут выделяться и по другому принципу.
Введем следующие определения:
объект функционального блока – это совокупность простых и состав-
ных полей, образующих некоторую сущность, которая представляется в сис-
теме как единое целое на отдельной форме, закладке, в разделе и т. п. Над
объектом могут совершаться стандартные операции сохранения, изменения
и удаления;
транзакция функционального блока – это набор действий пользователя
и/или системы, выполняющихся по событию на форме и приводящих к опре-
деленному результату. Например, транзакцией можно назвать реализацию
некоторого математического алгоритма или выборку данных для отчета;
журнал – это таблица с набором простых и составных полей, позво-
ляющая выполнять стандартные действия над записями (сортировка, фильт-
рация по столбцам, настройка таблицы). В табл. 5.1 представлены оценки
сложности для каждого типа элементов и критерии для определения этих
элементов.
5.2.2. Оценка функциональных блоков системы
Очевидно, что от проекта к проекту объем (или содержание) одной
и той же подсистемы может различаться. Обычно руководителю проекта
k
известны трудозатраты Ti , использованные на разработку функционального
блока в целом, а не отдельных его частей. В связи с этим необходимо оцени-
вать соотношения типов сложности элементов σі, j для каждого функциональ-
ного блока. При оценке сложности необходимо учитывать следующее огра-
ничение:
∑ σ i, j = 1 для ∀i .
(5.1)
j
Основываясь на данных о предыдущих проектах, можно рассчитать
трудозатраты, необходимые на разработку j-го типа элементов в k-м проекте
для i-го функционального блока:
=
Ti kj
,
σi , j Eik, j
∑
σi , j Eik, j
⋅ Ti k .
(5.2)
j
Основываясь на полученных трудозатратах, можно рассчитать наибо-
лее предпочтительное значение трудозатрат разработки одного элемента j-го

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-51-
5. ОЦЕНКА ПАРАМЕТРОВ
5.2. Метод оценки трудозатрат функциональных блоков
типа. Для этого эксперт должен оценить значимость (вес) каждого проекта,
используемого для оценки βik , для которого должно выполняться условие
∑ βik = 1 для ∀i .
(5.3)
k
В некоторых проектах могут отсутствовать данные по количеству раз-
работанных элементов j-го типа, т. е. Eik, j = 0. Тогда для расчета трудозатрат
на один элемент каждого типа нужно перераспределить вес данного проекта
по остальным проектам пропорционально их весам. Если для проекта k′
Eik, ′j = 0, то
β ik
β ik
для ∀k .
=
1 − β ik ′
(5.4)
Трудозатраты на один элемент каждого типа будут рассчитываться по
следующей формуле:
Ti0j
,
=∑
βik
k
Т ik, j
Eik, j
,
(5.5)
k
где Ei , j ≠ 0 для ∀i, j.
Для оценки трудоемкости аналогичного функционального блока в ре-
зультате анализа требований необходимо получить количество элементов j-
оц
го типа i-го функционального блока Ei, j в оцениваемом проекте. После этого
можно рассчитать значение трудозатрат, необходимых для разработки i-го
функционального блока:
Tiоц = ∑ Ti0j Eiоц .
,
,j
(5.6)
j
5.2.3. Пример оценки трудоемкости проекта
В данном примере будут оценены трудозатраты на разработку подсис-
темы ведения справочных данных (i = 1).
1. Определяем типы сложности элементов или сами элементы подсис-
темы ведения справочных данных, если они не были определены ранее
и не хранятся в базе данных о выполненных проектах. Для подсистемы веде-
ния справочных данных выделим три типа элементов:
j = 1 – простые справочники. Все поля имеют простые типы данных
(целое, строка и т. п.);
j = 2 – составные справочники. Cостоят из любого количества простых
полей и любого количества полей, которые принимают значения других
справочников;

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-52-
5. ОЦЕНКА ПАРАМЕТРОВ
5.2. Метод оценки трудозатрат функциональных блоков
j = 3 – сложные справочники. Для любой записи такого справочника
существует определенный набор записей из другого справочника.
2. Оцениваем сложность каждого элемента подсистемы σі,j:
σ1,1 = 0,1; σ1,2 = 0,3; σ1,3 = 0,6.
3. Получаем данные из других проектов о количестве элементов Eik, j
в оцениваемой подсистеме и трудозатратах Ti k , использованных на разработ-
ку этих подсистем. Предположим, что у нас есть данные по двум проектам
(k = 2):
1 1 1 T11 = 150 чел.-ч ;]
E1,1 = 5; E1,2 = 5; E1,3 = 2; [
2 2 2 T12 = 350 [чел.-ч].
E1,1 = 20; E1,2 = 10; E1,3 = 10; 
4. Рассчитываем трудозатраты на разработку каждого типа элементов
для обоих проектов на основе количества этих элементов Eik, j и оценки
сложности σі, j в соответствии с формулой (5.2):
1 1 1
T1,1 = 23,44; T1,2 = 70,31; T1,3 = 56,25;
2 2 2
T1,1 = 63,64; T1,2 = 95,46; T1,3 = 191,00.
5. Определяем важность каждого проекта путем распределения весов βik :
β1 = 0,3;
1
2
β1 = 0,7.
6. Рассчитываем среднюю стоимость одного элемента каждого типа
в соответствии с формулой (5.5):
0
T1,1 = 3,62;
0
T1,2 = 10,90;
0
T1,3 = 21,80.
7. Выполняем оценку количества элементов каждого типа Eiоцj в созда-
,
ваемой подсистеме. Предположим, в создаваемой подсистеме будет следую-
щее количество элементов:
оц
E1,1 = 15;
оц
E1,2 = 10;
оц
E1,3 = 5.
8. Рассчитываем оценку трудозатрат данной подсистемы в соответст-
вии с формулой (5.6):
T1оц = 272,3.
Контрольные вопросы
1. Какие показатели необходимо оценить при составлении плана про-
екта программной системы?

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-53-
5. ОЦЕНКА ПАРАМЕТРОВ
5.2. Метод оценки трудозатрат функциональных блоков
2. Какую информацию о проектах нужно собирать и хранить?
3. Какие метрики позволяют прогнозировать трудоемкость и стоимость
разработки новых проектов?
4. В чем заключается метод оценки трудозатрат функциональных
блоков?
5. Какие шаги выполняются при получении оценки программного про-
екта на основе метода оценки трудозатрат функциональных блоков?
6. Что такое объект функционального блока?

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-54-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ
ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Составление плана проекта в общем виде заключается в описании за-
дач проекта, доступных ресурсов и определении взаимосвязей между ними
с помощью назначений. Но при составлении плана в MS Project количество
операций несколько увеличивается.
Планирование начинается с определения проекта, т. е. с описания его
ключевых характеристик. Затем составляется список фаз и задач, а также
список необходимых для их выполнения ресурсов. После этого в план вно-
сится дополнительная информация о задачах и ресурсах, которая будет ис-
пользоваться при определении назначений и в дальнейшем при проведении
работ по плану (при отслеживании плана). Наконец, осуществляются назна-
чения, после чего проект оптимизируется, если длительность (или бюджет)
оказывается больше ожидаемой.
6.1.1. Определение проекта
Составление плана работ невозможно без определения проекта, т. е. за-
дания его ключевых характеристик, таких как общая длительность, рабочее
время и методика планирования. Поэтому, прежде чем переходить к состав-
лению плана работ, необходимо научиться определять проект с помощью
MS Project.
Чтобы начать составлять план работ, нужно создать файл нового про-
екта. Это можно сделать, щелкнув по кнопке Создать в панели инструмен-
тов Стандартная, – откроется диалоговое окно Сведения о проекте, в ко-
тором можно определить большинство его характеристик (рис. 6.1). Чтобы
изменять параметры проекта в дальнейшем, это диалоговое окно можно вы-
звать
командой Проект ► Сведения о проекте.
6.1.2. Способ планирования и основные даты
Проект можно планировать двумя способами: от даты начала проекта
или от даты окончания. Если у проекта нет жесткой даты окончания, то при
планировании применяется первый способ: фиксируется дата, когда нужно
начать проект, и в ходе составления плана определяется дата его заверше-
ния.
Если же проект должен быть обязательно завершен к определенному
дню, то используется противоположный способ: фиксируется дата оконча-
ния, и в ходе составления плана определяется, когда проект должен быть на-
чат, чтобы все работы были закончены в срок.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-55-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Способ планирования выбирается в раскрывающемся списке Плани-
рование от, содержащем два пункта: даты начала проекта и даты окон-
чания проекта.
Даты начала и окончания проекта выбираются в списках Дата начала
и Дата окончания. Можно зафиксировать только одну из дат в соответствии
с выбранным способом планирования.
6.1.3. Рабочее время
Чтобы определить рабочее время, в рамках которого будут происхо-
дить работы, в раскрывающемся списке Календарь нужно выбрать один из
доступных календарей.
Календарем в MS Project называется набор параметров, определяющих
перечень рабочих и нерабочих дней, а также рабочее время в каждом из ра-
бочих дней. В стандартной поставке MS Project в этом списке есть только три
пункта: Стандартный, 24 часа и Ночная смена.
Очень часто входящие в поставку календари не подходят для проекта.
Если стандартные настройки календарей вам не подходят, то нужно изменить
их в существующем календаре либо создать новый календарь.
Когда все сотрудники работают в одном временнóм режиме, то проекту
нужен один общий календарь и вам понадобится лишь отредактировать на-
стройки одного из календарей, входящих в поставку MS Project. Но бывает,
что в проекте задействованы несколько подразделений с разным режимом
работы. В таком случае нужно решить, какая группа больше, и отредактиро-
вать существующий календарь в соответствии с ее режимом работы. Для
других групп нужно будет создать собственные календари.
Работа с календарями осуществляется в диалоговом окне Изменить
рабочее время (рис. 6.2). Открывается оно одноименной командой меню
Сервис.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-56-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Рис..7. Диалоговое окно ввода информации о проекте
Рис..8. Диалоговое окно настройки рабочего времени проекта

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-57-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Рис..9. Диалоговое окно создания нового календаря
Рис..10. Диалоговое окно настройки временных параметров в MS Project
В верхней части диалогового окна расположен список календарей.
Рядом с названием календаря, выбранного в диалоговом окне сведений о
проекте, в скобках указано, что он является проектным календарем, – Ка-
лендарь проекта. Все настраиваемые в диалоговом окне параметры отно-
сятся к календарю, выбранному в списке.
В центре диалогового окна находится элемент в виде традиционного
календаря, для каждого дня которого можно задать определенный набор
параметров. Дни календаря выделены цветом в соответствии с легендой:

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-58-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
рабочие дни обозначены белым цветом, нерабочие – серым, а дни с нестан-
дартным рабочим временем заштрихованы.
Для переключения между месяцами используется полоса прокрутки,
а чтобы выбрать нужный день, надо щелкнуть на нем мышью. Для того что-
бы выделить сразу несколько дней, нужно щелкать на них при нажатой кла-
више Ctrl, а чтобы выделить все одинаковые дни календаря (например, все
субботы), нужно щелкнуть на названии дня в верхней строке календаря.
Для создания нового календаря предназначена кнопка Создать. После
нажатия на нее открывается диалоговое окно (рис. 6.3), в котором нужно ука-
зать название нового календаря и определить, будет ли новый календарь соз-
дан на основе существующего или с нуля. В первом случае нужно установить
переключатель Создать копию календаря и выбрать соответствующий ка-
лендарь в списке. Во втором случае нужно установить переключатель Соз-
дать новый базовый календарь.
Кнопка Параметры отображает диалоговое окно с общими настрой-
ками календаря (рис. 6.4). Это диалоговое окно можно вызвать также коман-
дой Сервис ► Параметры.
Параметры, настраиваемые в этом диалоговом окне, не влияют на про-
ектный календарь или календари ресурсов и предназначены для других це-
лей.
6.1.4. Параметры календарного плана
Во время планирования объема работ требуется размещать задачи на
календарном плане проекта, определяя, в какой день начнется и закончится
выполнение той или иной задачи. В MS Project есть несколько параметров,
определяющих поведение программы при работе пользователя с календар-
ным планом. Эти параметры можно изменить на вкладке Планирование
в диалоговом окне Параметры. Открыть его можно с помощью команды
Сервис ► Параметры . Вкладка Планирование позволяет настроить
довольно много параметров (рис. 6.5).
Флажок Показывать сообщения о планировании определяет, будет
ли MS Project сообщать вам о несоответствиях в плане проекта (и давать по-
лезные подсказки по ходу составления плана). Этот флажок стоит устано-
вить, поскольку благодаря подобным сообщениям можно избежать многих
случайных ошибок.
Элементы для настройки отдельного файла проекта довольно много-
численны. Первый из них, список Новые задачи, определяет, какая дата
начала будет по умолчанию приписываться новой задаче. Это может быть
дата начала проекта – пункт Начинаются в день начала проекта или дата
создания задачи – пункт Начинаются в текущий день.
Ввод данных в файл проекта можно существенно ускорить, если ука-
зать, в каких единицах будут вводиться значения длительности задач и объе-
ма работ. В таком случае при заполнении в таблицах полей Длительность

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-59-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
и Трудозатраты, а также их вариантов вам потребуется указывать только
число единиц, а обозначения единиц будет подставлено автоматически.
Обычно длительность задач указывается в днях, и именно этот вариант
стоит выбрать в списке Длительность вводится. Время работы, как прави-
ло, учитывается в часах, поэтому в списке Tpyдозатраты вводятся следует
выбрать пункт Часы.
При редактировании проектного расписания часто приходится пере-
мещать задачи или группы задач. Флажок Автоматическое связывание
вставленных или перемещенных задач определяет, будут ли перемещен-
ные или вставленные между другими задачи автоматически связываться
с предыдущими или последующими. Этот флажок стоит оставить установ-
ленным, поскольку он существенно упрощает редактирование планов проек-
тов даже с небольшим количеством связей.
Рис..11. Диалоговое окно настройки временных параметров в MS Project
При составлении предварительного плана проекта указываются пред-
варительные длительности многих задач, которые в процессе согласования
плана утверждаются и затем становятся окончательными. Предварительные

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-60-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
длительности могут помечаться в плане вопросительным знаком, что делает
работу с графиком очень удобной: можно легко увидеть задачи с оконча-
тельно не установленной длительностью. Для того чтобы вопросительные
знаки отображались, необходимо оставить установленным флажок Показы-
вать наличие предварительных оценок длительности у задач.
Флажок Новые задачи имеют предварительные оценки длитель-
ности определяет, будет ли длительность новых задач помечаться как пред-
варительная или нет. Рекомендуется использовать именно первый режим.
После установки значений воспользуйтесь кнопкой По умолчанию для
применения их в последующих проектах.
6.1.5. Определение состава работ
Для создания уникального продукта или услуги (результата проекта)
нужно выполнить некоторую последовательность работ, или задач, в терми-
нологии MS Project. Планирование проекта заключается в том, чтобы воз-
можно точнее оценить сроки исполнения и стоимость этих работ. Чем точнее
оценка, тем выше качество плана проекта.
Чтобы дать точную оценку, нужно хорошо представлять состав работ
проекта, т. е. знать, какие именно работы нужно выполнить для получения
результата. Только после того, как составлен список проектных работ, оце-
нивается длительность каждой из них и выделяются ресурсы, необходимые
для их выполнения. И лишь затем можно оценить стоимость и сроки испол-
нения каждой задачи и, в результате сложения, общую стоимость и срок ис-
полнения всего проекта. Вот почему определение состава работ является
первым шагом при планировании проекта.
Определение состава проектных работ начинается с определения эта-
пов (или фаз) проекта. После того как состав фаз и их результаты определе-
ны, нужно определить последовательность этих фаз относительно друг друга
и крайние сроки их исполнения. Затем нужно выяснить, из каких работ состоят
фазы, в какой последовательности исполняются эти работы и в какие крайние
сроки нужно уложиться при их исполнении. То есть принципы планирования
задач внутри фаз повторяют принципы планирования фаз внутри проекта.
Определять состав работ удобно поэтапно. Сначала создается скелет
плана работ, состоящий из фаз, их результатов и нескольких основных задач.
Потом в план добавляются остальные задачи, определяются их длительности
и связи. Затем определяются ключевые даты проекта, которые включают
крайние сроки достижения результатов проекта и некоторые другие ограни-
чения по времени. Наконец, в план добавляется дополнительная информация
о задачах.
6.1.6 Скелетный план работ

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-61-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Создадим новый файл проекта и будем следовать методике планирова-
ния от даты начала. Используем стандартный календарь, а в качестве даты
начала проекта примем предлагаемую по умолчанию.
План работ лучше всего составлять в представлении Диаграмма
Ганта. Для добавления задачи в план проекта нужно установить курсор
в таблицу слева от диаграммы и ввести название задачи в поле Название
задачи. После этого символизирующий задачу отрезок появится на диаграмме.
Рис..12. Пример плана проекта с разбивкой на фазы
Добавление в план фазы не отличается от добавления задачи: любая за-
дача автоматически становится фазой, как только у нее появляется вложен-
ная задача, т. е. задача, находящаяся на следующем уровне структуры плана.
До тех пор пока у задачи нет вложенных задач, она не является фазой.
Чтобы поместить задачу на следующий (более низкий) уровень струк-
туры, нужно установить курсор в строку с задачей и на панели инструментов
Форматирование щелкнуть по кнопке с направленной вправо стрелкой (или
нажать сочетание клавиш Alt + Shift + →). Для перемещения задачи на пре-
дыдущий (более высокий) уровень структуры нужно щелкнуть по кнопке
с направленной влево стрелкой (или нажать сочетание клавиш Alt + Shift + ←).
На рис. 6.6 показан пример плана проекта с разбивкой на фазы.
6.1.7. Определение длительности задач
Длительность задач определяется значением, введенным в поле
Длительность. Вводить ее можно в часах, днях или неделях. Длительность
фаз вводить нельзя: она рассчитывается автоматически.
При создании задач MS Project автоматически задает им длительность
в один день, добавляя после обозначения единицы измерения вопроситель-
ный знак, который означает, что указанная длительность является приблизи-
тельной и требует дальнейшего уточнения. После того как вы отредактируете
значение, вопросительный знак пропадет. Если вы хотите пометить для себя,
что указанную длительность задачи стоит уточнить, то можете сами добавить

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-62-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
вопросительный знак. Например, если вы не уверены, что задача будет
выполняться два дня, то ее можно обозначить как 2д?.
После ввода длительности задачи MS Project пересчитывает дату ее окон-
чания, прибавляя к дате начала задачи длительность и выходные дни (в соот-
ветствии с календарем проекта). Однако некоторые задачи, начавшись, могут
выполняться круглосуточно и без выходных, например засыхание цементного
раствора или выполнение расчетов компьютерной программой. В таком слу-
чае для обозначения длительности задачи используется символ пд, соответст-
вующий термину «прошедшие дни». Например, для обозначения длительно-
сти
в 14 дней в поле Длительность нужно ввести символы 14пд. При вво-
де значений длительности для таких задач можно применять и вопроситель-
ный знак. Например, если вы не уверены, что цементный раствор высыхает за
16 часов и хотите уточнить это в дальнейшем, длительность можно указать
как 16пч?.
6.1.8. Определение связей между задачами
Связь между двумя задачами определяет, каким образом время начала
или завершения одной задачи влияет на время начала или завершения дру-
гой. Задача, влияющая на другую, называется предшественником, а задача,
зависящая от другой, называется последователем. Одна связь может объеди-
нять только две задачи, и при этом у одной задачи может быть несколько
связей
с другими задачами. Задача может иметь неограниченное число
предшествующих и последующих задач.
Связи могут объединять и фазы, при этом все принципы организации
связей между задачами применимы и к фазам. Кроме того, связи могут объе-
динять между собой и задачи, и фазы. Например, фаза может начинаться по
завершении задачи.
6.1.9 Типы связей задач
В MS Project есть четыре типа связей между задачами (рис. 6.7). Связь
типа Окончание-начало, или сокращенно ОН, – наиболее распространен-
ный тип зависимости между задачами, при которой задача В не может на-
чаться, пока не завершена задача А.
Связь типа Начало-начало, или сокращенно НН, обозначает зависи-
мость, при которой задача В не может начаться до тех пор, пока не началась
задача А. С помощью такой связи обычно объединяются задачи, которые
должны выполняться почти одновременно.
Связь типа Окончание-окончание, или сокращенно ОО, обозначает
зависимость, при которой задача В не может закончиться до тех пор, пока
не закончилась задача А. Обычно такой связью объединяются задачи, кото-
рые должны выполняться почти одновременно, но при этом одна не может
закончиться, пока не завершена другая. Например, сдача-приемка программы
идет одновременно с исправлением ошибок (найденных в процессе сдачи-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-63-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
приемки), и пока исправление ошибок не завершено, сдача-приемка тоже
не может завершиться.
Рис..13. Четыре типа связей между задачами
Связь типа Начало-окончание, или сокращенно НО, обозначает
зависимость, при которой задача В не может закончиться до тех пор, пока
не началась задача А. Обычно такая связь используется в том случае, когда А
является задачей с фиксированной датой начала, которую нельзя изменить.
В таком случае дата начала последующей задачи не изменяется при увеличе-
нии длительности предшествующей.
Связь создается перетаскиванием мышью одного отрезка диаграммы
Ганта на другой, при этом по умолчанию тип связи определяется как ОН.
Предшествующей задачей считается та, с которой началось перетаскивание,
а последующей – та, на которой перетаскивание закончилось (на последую-
щую задачу указывает стрелка в конце связи). Для удаления связи или изме-
нения ее типа нужно дважды щелкнуть на ней и произвести соответствую-
щие операции в открывшемся диалоговом окне.
6.1.10. Использование задержек и опережений
Часто в жизни зависимости между задачами бывают немного более
сложными, чем связи типа «окончание-начало». Например, между задачами
«покраска стен» и «развешивание картин» должен пройти день, чтобы краска
успела высохнуть. Для того чтобы описать такую зависимость между задача-
ми, в MS Project используется понятие запаздывания. Например, в случае
с покраской стен запаздывание между задачами должно составить один
день.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-64-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Запаздывание является свойством связи и может быть указано в поле
со счетчиком Запаздывание диалогового окна определения свойств связи.
Запаздывание можно вводить как длительность (например, один день) или
как процент от длительности предшествующей задачи. Например, если
предшествующая задача продолжается четыре дня, то запаздывание в 25 %
будет соответствовать одному дню.
Иногда для начала выполнения следующей задачи не нужно дожидать-
ся полного окончания предыдущей. Например, можно начинать клеить обои,
когда штукатурка положена хотя бы на некоторых стенах в доме, т. е. имеет
место опережение. Опережение вводится в то же поле диалогового окна оп-
ределения свойств связи, что и запаздывание, но с отрицательным знаком.
Например, опережение в один день указывается как -1д, а опережение в 50 %
(т. е. следующая задача начинается, когда предыдущая выполнена наполови-
ну) – как -50 %.
Удобно указывать запаздывания и опережения в процентах от длитель-
ности предшествующей задачи, так как при изменении длительности
MS Project автоматически перенесет дату начала последующей задачи.
6.1.11. Ограничения и крайние сроки
Привязывание задач к определенным датам в MS Project осуществляет-
ся при помощи ограничений. Используя ограничения, можно, например, ука-
зать, что задача должна начаться в определенный день или закончиться
не позднее определенной даты. Определяя длительности задач и связи между
ними, вы задаете программе гибкость при перерасчете плана проекта в слу-
чае изменения расписания. Введение ограничений понижает эту гибкость.
Использовать негибкие ограничения нужно тогда, когда задача обязательно
должна начаться или закончиться в определенный день (например, если срок
исполнения задачи обусловлен договором, который не может быть нару-
шен).
Крайний срок – это предельная дата исполнения задачи. Отличие край-
него срока от ограничений заключается в том, что наличие крайнего срока
никак не влияет на расчеты: на диаграмме Ганта отображается соответст-
вующая отметка, и если выполнение задачи не укладывается в этот срок,
то в поле Индикаторы появляется особый значок.
6.1.12. Суммарная задача проекта
Суммарные задачи представляют собой каркас плана проекта. Внутри
каждой суммарной задачи находятся простые задачи и могут располагаться
другие суммарные задачи. Как правило, одной суммарной задаче в плане
соответствует этап или фаза проекта. Так, самой главной суммарной задачей
является общая задача всего проекта в целом.
Чтобы увидеть суммарную задачу всего проекта, можно ее создать
и включить в нее уже существующие суммарные задачи. Но правильнее ото-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-65-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
бразить суммарную задачу проекта посредством включения соответствую-
щей опции в MS Project. Суммарная задача проекта отображается на диа-
грамме Ганта особым цветом, и MS Project особым образом работает с ней.
Чтобы отобразить суммарную задачу проекта, в общих настройках
проекта надо перейти на вкладку Вид и установить флажок Показывать
суммарную задачу проекта. Суммарная задача отобразится с названием,
взятым из поля Название окна свойств файла, которые можно редактировать
в диалоговом окне, открываемом командой меню Файл ► Свойства.
Если в этом диалоговом окне заполнено поле Заметки, то его содер-
жимое станет комментарием к суммарной задаче. При изменении названия
суммарной задачи или комментария к ней автоматически изменяются соот-
ветствующие свойства файла.
6.1.13. Планирование ресурсов и создание назначений
После того как определен состав задач, нужно определить, кто эти за-
дачи будет выполнять и какое оборудование будет использоваться. Для этого
нужно ввести в план проекта список ресурсов и информацию о них, а затем
распределить эти ресурсы между задачами.
Планирование ресурсов начинается с определения состава ресурсов,
т. е. с составления списка людей, оборудования и материалов, необходимых
для выполнения проектных работ. Работа со списком ресурсов осуществля-
ется в представлении Лист ресурсов. Для добавления нового ресурса в спи-
сок нужно установить курсор в поле Название ресурса и ввести его назва-
ние. Затем в раскрывающемся списке внутри поля Тип нужно выбрать один
из двух пунктов: Трудовой или Материальный. До тех пор пока не задано
значение этого поля, другие поля таблицы остаются недоступными, а после
того как значение выбрано, многие поля заполняются значениями, приняты-
ми по умолчанию.
После того как ресурсы добавлены в проект, нужно определить, в какое
время они могут работать. Например, некоторые из сотрудников работают
по совместительству и могут участвовать в проекте только в некоторые дни
недели или по полдня. Кроме того, некоторые сотрудники могут находиться
в отпуске в течение некоторого периода осуществления проекта. Всю ин-
формацию о режиме работы сотрудников нужно ввести в MS Project, с тем
чтобы программа помогла вам правильно распределить ресурсы и не дала за-
планировать использование сотрудника в то время, когда это будет невоз-
можно.
По умолчанию все сотрудники, которых вы добавляете в проект, счи-
таются доступными для участия в работах в течение всего проекта. Но часто
случается, что есть сотрудники, занятые в других проектах, и они могут быть
включены в ваш проект только тогда, когда закончат эту работу, а не прямо
с момента начала вашего проекта.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-66-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Рис..14. Настройка доступности ресурса
Кроме того, по умолчанию все сотрудники, которых вы добавляете для
участия в проекте, считаются доступными на 100 %, т. е. при планировании
MS Project будет считать, что они могут работать над исполнением проектных
задач полный рабочий день. Однако в жизни все бывает сложнее, и часто
один и тот же сотрудник одновременно задействован в нескольких проектах.
В таком случае нужно определить степень его максимальной загрузки в вашем
проекте. Например, если сотрудник может работать в вашем проекте не боль-
ше половины рабочего дня, то его максимальная загрузка составляет 50 %.
Если среди включенных в проект сотрудников есть те, кто не может уча-
ствовать в проекте на всем его протяжении, или те, кто не может тратить весь
свой рабочий день на выполнение работ по проекту, то для них нужно опреде-
лить время участия в проекте и процент максимальной загрузки. Это можно
сделать на вкладке Общие диалогового окна Сведения о ресурсе (рис. 6.8).
Определение назначений. При выборе ресурса для назначения можно
указать название нового ресурса, который будет создан вместе с назначени-
ем. Однако такой режим может повлечь и нежелательные последствия: если
вы допустите опечатку, программа создаст в проекте новый ресурс, а это мо-
жет не требоваться. Для того чтобы программа предупреждала вас о добав-
лении нового ресурса в проект, следует на вкладке Общие диалогового окна
Параметры, открываемого командой Сервис ► Параметры , сбросить
флажок Автоматически добавлять новые ресурсы и задачи.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-67-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Рис..15. Диалоговое окно выравнивания загрузки ресурсов
MS Project умеет равномерно распределять нагрузку ресурсов. При
включенном режиме автоматического выравнивания загрузки программа
не допустит того, чтобы трудозатраты сотрудников превышали их рабочее
время (например, если назначить сотрудника на две задачи, выполняемые
одновременно или пересекающиеся в некоторые дни). Но это может вызвать
и некоторые проблемы: так, если вы попытаетесь назначить сотрудника на
задачу, идущую одновременно с той, где он уже задействован, MS Project ав-
томатически перенесет ее исполнение на более поздний срок. Поэтому режим
автоматического выравнивания загрузки следует отключить и включить уже
после определения всех назначений.
Диалоговое окно Выравнивание загрузки ресурсов, предназначен-
ное для настройки параметров выравнивания загрузки ресурсов, показано на
рис. 6.9. Это окно открывается командой Сервис ► Выравнивание загрузки
ресурсов. В разделе Вычисления для выравнивания нужно установить
переключатель Выполнять вручную и щелкнуть по кнопке ОК. После этого
можно переходить к работе с назначениями.
Создание назначений. Для выбора ресурсов, обеспечивающих выпол-
нение задач, удобнее всего воспользоваться представлением Использование
задач.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-68-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Для создания назначения нужно дважды щелкнуть по задаче в списке
и в открывшемся диалоговом окне сведений о задаче перейти на вкладку
Ресурсы. Вкладка содержит таблицу, состоящую из двух колонок, в одной
из которых, Название ресурса, указывается название задействованных ре-
сурсов, а во второй, Единицы, – сколько ресурсов выделяется на задачу.
Использование нематериальных ресурсов измеряется в процентах или
десятичных числах, где под 100 %, или единицей, понимается полная задей-
ствованность ресурса в выполнении задачи (сотрудник будет заниматься ею
полный рабочий день). Если же назначается материальный ресурс, то в поле
Единицы вводится число, соответствующее единицам измерения данного
ресурса. После того как назначения созданы, программа определяет матери-
альные затраты и трудозатраты каждого из ресурсов для выполнения задачи
и планирует распределение этих затрат в каждый из дней на протяжении
всей ее длительности.
6.1.13. Планирование стоимости проекта
Есть несколько методик планирования стоимости проекта: по аналогии,
сверху вниз, по параметрам и снизу вверх.
Определение стоимости проекта по аналогии можно применять, когда
планируемый проект аналогичен ряду других, выполнявшихся в организации
ранее. В таком случае общая стоимость проекта определяется исходя из на-
копленного опыта, а затем общая стоимость распределяется между задачами.
Эта методика наименее точная, но ее применение занимает меньше
всего времени. Как правило, стоимость проекта оценивается таким образом
только на начальном этапе планирования, когда объем работ еще оконча-
тельно не определен, а потому нельзя использовать более точные методики.
Чтобы применить эту методику в MS Project, достаточно вручную заполнить
в таблице соответствующие поля.
Оценка стоимости проекта по параметрам – довольно популярная
методика. Типичным примером является оценка стоимости строящегося дома
по площади или стоимости изготовляемой мебели по погонным метрам.
Точность этой методики и, соответственно, трудозатраты на ее исполь-
зование зависят от числа оцениваемых параметров. Для небольших проектов,
особенно если накоплен определенный опыт их выполнения, достаточно
оценки нескольких параметров. Для масштабных проектов требуется оценка
большого числа параметров. В последнем случае точность этой методики
значительно выше, но и времени на ее применение нужно больше. Чтобы
оценить стоимость проекта по параметрам в MS Project, нужно воспользо-
ваться настраиваемыми полями и функциями.
Методика оценки стоимости проекта снизу вверх заключается в рас-
чете стоимости отдельных задач проекта и формировании общей стоимости
проекта исходя из суммарной стоимости всех работ. Именно эта методика
является наиболее точной, и именно на ее использование ориентирована про-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-69-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
грамма MS Project. Правда, для ее применения требуется больше всего вре-
мени, поскольку ее точность во многом зависит от степени детализации со-
става работ и ресурсов. Далее мы рассмотрим, как планировать стоимость
проекта, используя эту методику.
Прямо противоположной является методика определения затрат
сверху вниз, при которой определяются общие затраты на проект или фазу
и, исходя из этого, возможные затраты на составляющие проекта или фазы.
Обычно эта методика используется при ограничении проекта по бюджету
либо в сочетании с методикой оценки по аналогии.
Общая стоимость проекта складывается из фиксированной стоимости
ресурсов и задач и стоимости назначений, которая, в свою очередь, опреде-
ляется ставками ресурса, трудозатратами и стоимостью использования ре-
сурса. Для каждого ресурса проекта можно определить почасовую ставку или
стоимость за использование. Стоимость назначения определяется стоимо-
стью ресурса, умноженной на длительность назначения (при почасовой став-
ке), либо фиксированной стоимостью ресурса. При назначении ресурса на за-
дачу программа определяет его стоимость и стоимость задачи, складывая стои-
мость всех ее назначений и добавляя к ним фиксированную стоимость задачи,
если она указана. Суммарная стоимость задач определяет стоимость проек-
та в целом.
Рис..16. Определение стоимости ресурса

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-70-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Стоимость использования ресурса определяется на вкладке Затраты
диалогового окна сведений о ресурсе. На этой вкладке в разделе Таблицы
норм затрат расположены пять таблиц норм затрат с одинаковой структу-
рой, переключаться между которыми можно с помощью вкладок А, В, С, D
и Е, как показано на рис. 6.10.
В таблице можно указать стандартную ставку ресурса, ставку за сверх-
урочную работу и стоимость его использования. Первая указывается в поле
Стандартная ставка, вторая – в поле Ставка сверхурочных, третья –
в поле Затраты на использование. Ставки вводятся в формате
число/единица времени.
Иногда ставка ресурса (например, зарплата или плата за аренду мате-
риального ресурса) изменяется во время исполнения проекта. Чтобы преду-
смотреть изменения оплаты ресурса в плане проекта, таблица содержит поле
Дата действия. В нем можно указать дату, начиная с которой действитель-
ны
параметры оплаты выбранного ресурса, указанные в одной строке
с датой. Ставки, указанные в первой строке таблицы, действуют со дня нача-
ла
проекта, поэтому поле Дата действия в этой строке заполнить
нельзя.
6.1.15. Стоимость назначений
При назначении ресурса на задачу его стоимость определяется автомати-
чески путем умножения ставки ресурса на трудозатраты и прибавлением к
результату умножения затрат на использование ресурса. При этом данные о
ставке ресурса берутся из таблицы норм затрат по умолчанию, т. е. из табли-
цы А, расположенной на вкладке Затраты диалогового окна сведений о ре-
сурсе.
Изменить стоимость назначения можно, лишь указав другую таблицу
норм затрат для нужного ресурса. Например, если ресурс работает на выезде,
то у него могут быть особые командировочные ставки. В таком случае их
нужно поместить в одну из таблиц норм затрат и выбирать эту таблицу при
назначениях ресурса на задачи, связанные с командировками.
Таблица норм затрат указывается на вкладке Общие диалогового окна
сведений о назначении, вызываемого щелчком по названию назначения
в представлении Использование задач. Для выбора таблицы предназначен
раскрывающийся список Таблица норм затрат.
6.1.16. Стоимость задач
Стоимость задачи складывается из суммарной стоимости назначений
и ее фиксированных затрат.
Фиксированные затраты на задачу – это затраты, не связанные с ис-
пользованием проектных ресурсов. Например, для задачи подготовки проек-
та дома фиксированными затратами будут 1000 рублей, выделяемых на под-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-71-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
готовку брошюры с чертежами, предоставляемой заказчику после окончания
строительства.
Для ввода фиксированных затрат используется поле Фиксированные
затраты в таблице Затраты любого из представлений для работы с задача-
ми.
Иногда задачи имеют фиксированную стоимость независимо от числа
задействованных в них ресурсов и их ставок. В таком случае нужно указать
фиксированные затраты у задачи, а при создании назначений выбирать у ре-
сурсов те таблицы норм затрат, где в качестве ставок указаны нулевые зна-
чения.
6.1.17. Анализ и оптимизация плана проекта
После того как стоимость всех ресурсов определена, завершается фор-
мирование проектного треугольника. Однако создание рабочего проекта на
этом не заканчивается: прежде чем начинать исполнение работ по плану,
нужно проверить, что все стороны треугольника сбалансированы и соответ-
ствуют нашим ожиданиям.
План нужно проанализировать в нескольких аспектах. Во-первых,
необходимо убедиться в соответствии расписания потребностям: ведь в про-
цессе определения назначений длительности задач могли измениться.
Во-вторых, требуется проверить загрузку ресурсов: в процессе выделения ре-
сурсов мы могли перегрузить некоторых из них. В-третьих, нужно проверить
соответствие общей стоимости проекта, определившейся после назначений,
нашим ожиданиям: в процессе назначения ресурсов мы могли назначить на
задачи слишком много дорогостоящих ресурсов и тем самым превысить
ожидаемую стоимость. И наконец, нужно оценить риски выполнения проек-
та:
насколько велика вероятность не уложиться в расписание, не выпол-
нить все поставленные задачи, перерасходовать бюджет. Если в процессе
анализа
обнаруживаются проблемы, необходимо избавляться от них,
оптимизируя план соответствующим образом.
Анализ проекта не обязательно проводить в той же последовательно-
сти, в которой выполняются составляющие его задачи или используются за-
действованные в нем ресурсы. Обычно анализ начинается с того, что наибо-
лее
актуально для проекта. Мы рекомендуем начинать его с проверки за-
грузки ресурсов, поскольку риск срыва работ по плану, в котором изначально
заложена работа сотрудников сверх нормы, очень высок.
Чтобы определить равномерность загрузки ресурсов, нужно открыть
представление Лист ресурсов. В нем все ресурсы, загрузка которых превы-
шает их доступность, выделены красным цветом, а в поле Индикаторы ря-
дом с их названиями отображается специальный значок.
Превышение доступности ресурса заключается в том, что для выпол-
нения назначенной работы ресурсу требуется больше времени, чем у него
есть. Существует несколько причин, способных привести к этому. Самой
распространенной среди них является назначение ресурса на задачи, испол-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-72-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
нение
которых полностью или частично осуществляется одновременно.
Другой причиной может быть увеличение объема работ задачи, приведшее к
превышению допустимого уровня загрузки ресурса. Наконец, назначение ре-
сурса из-за изменений в плане может приходиться на дни, когда ресурс не-
доступен.
Выравнять загрузку ресурсов можно несколькими путями. Во-первых,
уменьшив объем работы перегруженных ресурсов, сократив некоторые зада-
чи или назначив других сотрудников на их выполнение. Во-вторых, изба-
вившись от пересечения задач, вставив в расписание перерывы в задачах или
назначениях либо изменив даты их начала и окончания. Наконец, учтя рабо-
ту, выполняемую ресурсом сверх нормы, как сверхурочную.
Для выравнивания загрузки ресурсов в Microsoft Project можно вос-
пользоваться средствами автоматизации или перераспределить загрузку
вручную. Как правило, используются оба способа, поскольку средства авто-
матизации обычно не обеспечивают выравнивания загрузки всех ресур-
сов.
6.1.18. Автоматическое выравнивание загрузки ресурсов
Диалоговое окно выравнивания загрузки ресурсов открывается с по-
мощью команды Сервис ► Выравнивание загрузки ресурсов. В разделе
Вычисления для выравнивания определяются общие параметры выравни-
вания загрузки. Переключатели Выполнять автоматически и Выполнять
вручную определяют, как будет осуществляться выравнивание: непосредст-
венно при создании назначений или при щелчке по кнопке Выравнять.
Раскрывающийся список Поиск превышений доступности определя-
ет временные рамки, в которых программа будет искать превышение доступ-
ности ресурсов. Например, если сотрудник назначен на две 4-часовые задачи,
начинающиеся в 8 утра, то при выборе в списке пункта По часам одна из за-
дач будет отложена на 4 часа, чтобы ни в одном из часов дня не было превы-
шения доступности. Если же в списке выбран пункт По дням, то расписание
не изменится, поскольку в пределах дня объем работы не превышает нормы.
При установленном флажке Очистка данных предыдущего вырав-
нивания перед новым выравниванием удаляются все изменения в распи-
сании, сделанные при предыдущем выравнивании. Этот флажок стоит
установить.
6.1.19. Анализ критического пути проекта
Критический путь – это задача (или последовательность задач), опре-
де-ляющая дату окончания проекта. Если увеличить длительность задачи,
лежащей на критическом пути, то длительность проекта тоже увеличится, а
если уменьшить ее длительность, то длительность проекта тоже уменьшится.
MS Project также относит к критическим те задачи, которые имеют
ограничения типа Фиксированное начало, Фиксированное окончание,
Как можно позже в проектах, планируемых от даты начала, и Как можно

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-73-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
раньше в проектах, планируемых от даты окончания. Кроме того, критиче-
скими считаются задачи, дата окончания которых превышает дату крайнего
срока или совпадает с ней.
Для отображения критического пути проекта на диаграмме Ганта нуж-
но воспользоваться Мастером диаграмм Ганта, вызываемым одноименной
командой меню Формат или контекстного меню диаграммы Ганта. На вто-
ром шаге мастера нужно установить переключатель Критический путь
и щелкнуть по кнопке Готово. После этого диаграмма Ганта перестроится.
Задачи, лежащие на критическом пути (критические задачи), и связи между
ними будут выделены красным цветом. После этого можно переходить к со-
кращению длительностей задач, причем начать стоит с задач, лежащих на кри-
тическом пути. При этом следует помнить, что сокращение длительности за-
дач может не только убрать их с критического пути, но и сделать критически-
ми другие задачи.
Для сокращения длительности задачи можно применить несколько
методов. Во-первых, можно сократить объем работы, требуемый для ее вы-
полнения. Во-вторых, можно добавить ресурсы для ускорения выполнения
работы при сохранении ее объема. Наконец, можно разбить задачу на подза-
дачи, выполняемые одновременно разными сотрудниками.
6.1.20.Использование нескольких базовых планов
MS Project позволяет сохранять для проекта 11 базовых планов, и при
анализе состояния проекта можно определить, какой из них использовать.
Предположим, что вы обсудили с руководством вопрос замены сотрудника
в проекте, и оно одобрило замену. После этого нужно сохранить новую вер-
сию базового плана и отслеживать проект уже в соответствии с ней.
В MS Project существует представление для анализа нескольких
базовых планов – Диаграмма Ганта с несколькими планами. В этой версии
диаграммы Ганта отображаются отрезки, соответствующие плану выпол-
нения задачи по каждому из существующих базовых планов.
6.1.21. Отчеты
После того как проект начал выполняться, руководитель должен с оп-
ределенной периодичностью предоставлять руководству и заказчику отчеты
о ходе проекта. MS Project содержит набор готовых отчетов, которые можно
использовать в этих случаях, и предлагает возможности по созданию собст-
венных отчетов.
Отчеты удобно использовать и самому руководителю проекта, по-
скольку с помощью некоторых из них можно получить данные, которые не-
возможно просмотреть в представлениях. Например, с помощью одного из
отчетов вы можете получить таблицу с описанием календаря проекта и всеми
днями
с особым режимом работы.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-74-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Отчет – это средство представления проектных данных, предназна-
ченных для распечатки. В MS Project входит набор предопределенных
отчетов, которые можно использовать в готовом виде или настроить.
Диалоговое окно выбора отчета (рис. 6.11) вызывается с помощью команды
Вид ► Отчеты.
Это диалоговое окно содержит образцы групп отчетов, двойной щелчок
на которых позволяет просматривать отчеты выбранной группы. В диалого-
вом окне просмотра отчетов группы (рис. 6.12) для перехода к просмотру от-
чета нужно дважды щелкнуть на его образце, а для его настройки – щелкнуть
по кнопке Изменить. Щелчок по кнопке Закрыть вернет нас к диалоговому
окну с образцами групп отчетов.
Для просмотра группы обзорных отчетов нужно щелкнуть на образце
Обзорные. Большинство отчетов этой группы, как и все отчеты других
групп, повторяют одно из представлений с включенным фильтром. Но в этой
группе есть два уникальных отчета – Сводка по проекту и Рабочие дни.
Рис..17. Диалоговое окно выбора группы отчетов
Рис..18. Список отчетов группы Обзорные

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-75-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
Одним из самых полезных для отслеживания проекта является отчет
Сводка по проекту. Удобство отчета заключается в том, что все основные
сводные показатели удобно сгруппированы, причем в отчете отображаются
данные и о задачах, и о ресурсах. В верхней части отчета выводится имя про-
екта, под ним — текущая дата. В первом разделе отчета содержатся данные
о сроках его начала (левая половина раздела) и окончания (правая половина
раздела). В первой строке раздела представлены данные текущего плана, за-
тем базового, затем фактические данные, а в последней строке – расхождение
текущего и базового планов.
Во втором разделе отчета отображаются данные о длительности проек-
та. Первая строка левой колонки раздела содержит значение длительности
проекта по текущему плану. Во второй строке представлена длительность
по базовому плану, а в третьей – расхождение между текущим и базовым
планами. В первой строке правой колонки отображаются данные об остав-
шейся длительности, во второй строке – о фактической длительности
и в третьей – процент завершения по длительности. Третий и четвертый раз-
делы отчета имеют ту же структуру, но в них отображаются данные
о трудозатратах и затратах. В третьей строке правой колонки третьего разде-
ла отображаются данные о проценте завершения по трудозатратам, а в чет-
вертом разделе эта строка не отображается.
Если в окне свойств проекта заполнено поле Заметки, то его содержи-
мое отображается в последнем разделе отчета.
6.1.22. Создание новых отчетов
Для создания отчета в диалоговом окне выбора группы нужно щелк-
нуть на значке Настраиваемые – открывается диалоговое окно со списком
всех отчетов, входящих в различные группы.
Создать новый отчет можно как на основе одного из существующих
отчетов (кроме двух уникальных), так и с нуля. Для этого нужно щелкнуть
по кнопке Создать справа от списка отчетов. После этого откроется окно
определения нового отчета, в котором следует выбрать его тип (рис. 6.13).
Рис..19. Определение нового отчета

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-76-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.1 Планирование проекта в Microsoft Project
После выбора типа отчета нужно нажать кнопку ОК для перехода к его
настройке. Состав параметров в диалоговом окне настройки нового отчета
зависит от выбранного типа отчета.
6.2. Выбор способа организации
совместной работы в группе
Обмен информацией – важнейшая составляющая эффективного управ-
ления проектами. Организация эффективного двустороннего потока инфор-
мации может предотвратить возникновение многих проблем. В коммуника-
ционном плане оговариваются все ключевые аспекты поддержки информа-
ционного потока и описываются методы его организации. В Microsoft Project
2003 имеется ряд мощных функций для обеспечения совместной работы
в группе проекта на предприятии.
Допустим, что вы начинаете работу над проектом, цель которого –
вывести на рынок абсолютно новый продукт. По собственному опыту
и исходя из особенностей проекта вы знаете, что для реализации такого про-
екта, как никогда, важна эффективная совместная работа в группе. По мере
продвижения проекта возникнет необходимость в новых идеях, методах и ре-
сурсах. Чтобы все эти непредсказуемые изменения не приводили к хаосу
и в конечном счете к остановке работы, вам необходимо иметь постоянный
контакт с членами группы проекта. Те, в свою очередь, также должны непре-
рывно поддерживать связь друг с другом. Подобные проекты требуют особо
тесного сотрудничества, и большую помощь в этом может оказать Microsoft
Project 2003.
Выбор конкретного способа организации совместной работы зависит
от множества факторов, включая доступность определенного программного
обеспечения, наличие у сотрудников навыков работы с ним и характер
корпоративной сети. Иногда более простое решение может оказаться более
эффективным, поскольку позволяет войти в рабочий график с минимальны-
ми затратами времени на обучение.
Microsoft Project позволяет организовать совместную работу в группе
множеством способов, но три из них являются основными:
система электронной почты;
Microsoft Project Web Access в сочетании c Microsoft Project Server;
организация доступа к проектной информации (например, к спискам
вопросов или диаграммам Ганта) через сайт в интрасети с использованием
цифровой инструментальной панели, такой как SharePoint Team Services.
Каждый из методов имеет свои преимущества. В целом система элек-
тронной почты является наиболее простым средством, а Microsoft Project
Web Access – наиболее мощным.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-77-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.3. Совместная работа с использованием Microsoft Project Server и Microsoft Project Web Access
6.3. Совместная работа с использованием
Microsoft Project Server и Microsoft Project Web Access
Наиболее мощным решением для организации совместной работы
в группе проекта являются Microsoft Project Server и Microsoft Project Web
Access. Эти средства работают непосредственно с планом проекта и предос-
тавляют широкий спектр возможностей для оперативного обмена информа-
цией. Сервер Microsoft Project Server является местом хранения базы данных,
а Microsoft Project Web Access представляет собой интерфейс для членов
группы проекта и других заинтересованных лиц, которым необходимо
просматривать и пересылать проектную информацию. Цель такой системы
заключается в том, чтобы обеспечить бесперебойный поток информации
между планом проекта и членами группы.
С помощью Microsoft Project Web Access члены группы могут видеть
всю информацию о своих назначениях и другие относящиеся к ним сведения,
а также выполнять следующие действия:
обновлять информацию о задачах;
изменять задачи;
делегировать назначения;
пополнять список дел;
делать комментарии, которые затем будут добавлены в план проекта.
Изменения и обновления, исходящие от членов группы проекта, запи-
сываются изначально в базу данных сервера Microsoft Project Server. Как
руководитель проекта, вы можете принимать или отклонять предлагаемые
изменения. Если вы принимаете обновление, то можете сразу добавить его
в план проекта. Факт принятия обновлений будет отражен в файлах на серве-
ре Microsoft Project Server, и члены группы, просматривающие план проекта,
тут же смогут увидеть произведенные изменения.
Как таковой сайт Microsoft Project Web Access в интрасети весьма уни-
версален и содержит много информации, относящейся к проекту. Сотрудни-
ки могут видеть различные представления проектных данных, создавать от-
четы, обновлять задачи, отправлять информацию руководителю проекта,
просматривать назначения, суммарные данные о проекте, интересующие их
уведомления и многое другое. Каждый пользователь Microsoft Project Web
Access может индивидуально настроить содержание и формат информации
на сайте согласно личным предпочтениям.
6.4. Руководство группой проекта с использованием
Microsoft Project Web Access
Одной из основных обязанностей руководителя проекта является орга-
низация обмена информацией. Коммуникационный план проекта должен
включать цели, способы и средства связи, а также предполагаемую аудито-
рию и периодичность связи. Пожалуй, ключевую роль здесь играет обмен

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-78-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
информацией внутри группы проекта. Члены группы должны знать, что про-
исходит в настоящий момент и каковы темпы продвижения проекта.
6.4.1. Организация совместной работы в Microsoft Project
Оптимальным решением для организации совместной работы в группе
на базе Microsoft Project является Microsoft Project Server в сочетании с Mi-
crosoft Project Web Access, основное назначение которых – обеспечение опе-
ративного и всестороннего обмена информацией о проекте между руководи-
телем проекта, членами группы и другими заинтересованными лицами.
Для реализации совместной работы в группе с использованием Micro-
soft Project Server и Microsoft Project Web Access требуется наличие систем-
ного администратора проекта. Эту функцию может выполнять руководитель
проекта, однако эффективнее будет поручить установку, настройку и адми-
нистрирование Microsoft Project Server специально назначенному сотрудни-
ку.
6.4.1.1. Назначение задач
Имея настроенные Microsoft Project Server и Microsoft Project Web
Access, можно начать выкладывать на сайты Microsoft Project Web Access чле-
нов группы информацию об их назначениях и общую информацию по проек-
ту.
Рис..20. Параметры совместной работы

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-79-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
Прежде всего убедитесь, что для совместной работы в Microsoft Project
выбраны Microsoft Project Server и Microsoft Project Web Access. Для этого
выполните следующие действия:
1. В Microsoft Project выберите команду Совместная работа►
Параметры совместной работы. Появится диалоговое окно Параметры,
открытое на вкладке Совместная работа (рис. 6.14).
2. В группе Параметры совместной работы в списке Средство для
совместной работы выберите Microsoft Office Project Server.
3. В поле URL-адрес сервера Project Server введите URL вашего
сервера Microsoft Project Server.
4. Щелкните на кнопке Проверить подключение. При успешном
завершении теста появится соответствующее сообщение.
6.4.1.2. Рассылка назначений членам группы проекта
После установки и начальной настройки Microsoft Project Web Access
каждому ресурсу проекта посылается информация обо всех его назначениях
(в терминологии Microsoft Project этот процесс называется также публикацией
назначений). После этого необходимо будет посылать только обновления.
Для рассылки ресурсам первоначального набора назначений выполните
следующие действия:
1. Выведите диаграмму Ганта или какое-нибудь другое представление
листа задач.
2. Выделите задачи в списке задач.
3. В меню Совместная работа выберите команду Опубликовать ►
Новые и измененные назначения. Вы также можете воспользоваться
кнопкой Опубликовать новые и измененные назначения на панели инст-
рументов Совместная работа. Поскольку это первая публикация, каждое
назначение является новым.
4. Microsoft Project спросит вас, хотите ли вы продолжить после сохра-
нения проекта. Подтвердите свои намерения, щелкнув на кнопке OK. Поя-
вится диалоговое окно Публикация новых и измененных назначений.
5. В списке Опубликовать новые и измененные назначения выбе-
рите Всего проекта.
6.4.1.3. Принятие назначений членами группы
После публикации новых назначений члены группы проекта могут
просматривать их на сайтах Microsoft Project Web Access. Принятие или от-
клонение ими новых назначений отражается на сервере Microsoft Project
Server
и в плане проекта. Для опубликованных назначений в столбце
Индикаторы плана проекта на месте красного восклицательного знака появ-
ляется галочка, указывающая, что назначение было получено и принято или
отклонено
назначенным ресурсом.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-80-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
6.4.1.4.Принятие новых задач
С помощью Microsoft Project Web Access члены группы проекта могут
создавать новые задачи и высылать их на утверждение руководителю проек-
та. Утвержденные руководителем задачи включаются в план проекта.
Когда создается новая задача, на сайте руководителя проекта в Microsoft
Project Web Access появляется сообщение о наличии нового или измененного
назначения. На странице Задачи новая задача будет помечена знаком
«плюс».
Принятие новых задач происходит следующим образом:
1. Войдите в Microsoft Project Web Access. Чтобы сделать это быстро,
щелкните на кнопке Центр проектов на панели инструментов Совместная
работа.
2. Убедитесь в наличии сообщений о новых или измененных назначе-
ниях на вашем сайте в Microsoft Project Web Access. Щелкните на сообщении
о новой задаче и просмотрите информацию о ней, присланную членом груп-
пы.
3. Чтобы принять предложенную задачу и добавить ее в план проекта
в Microsoft Project, щелкните на кнопке Обновить.
6.4.1.5. Установка параметров назначений
Как руководитель проекта, вы должны знать обо всех действиях в рам-
ках проекта. В Microsoft Project Web Access имеется ряд функций, ускоряю-
щих информирование руководителя. Помимо утверждения новых задач
и обновлений и добавления их в план проекта вы также можете отклонять
предложенные задачи и назначать задачи.
Отклонить предлагаемые задачи вы можете на странице Задачи ваше-
го сайта в Microsoft Project Web Access.
Вы можете предоставить определенным членам команды право назна-
чать задачи в Microsoft Project. Для этого в меню Совместная работа выбе-
рите команду Параметры совместной работы и установите флажок
Ресурсы могут делегировать задачи с помощью сервера Project
Server.
6.4.2. Обновление информации о задачах
Связь с группой проекта через Microsoft Project Server и Microsoft
Project Web Access обеспечивает оперативное распространение полной и
точной информации об изменениях и дополнениях в плане проекта путем
рассылки обновленных сведений о ходе выполнения и отчетов о состоянии.
6.4.2.1. Параметры информирования о ходе выполнения и состоянии
Для настройки параметров совместной работы в Project Server нужно
выполнить следующие действия:

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-81-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
1. В Microsoft Project в меню Совместная работа выберите команду
Параметры совместной работы.
2. В группе При публикации новых и измененных назначений
назначения ресурсов обновляются в случае выберите переключатель
Любых изменений задач, если вы хотите, чтобы ресурсы получали об-
новленную информацию каждый раз, когда вы вносите какие-либо изме-
нения в задачу.
3. Если же вы хотите рассылать обновления только при изменении
критической задачи или графика, то выберите переключатель Изменение
начала, окончания, % выполнения или структуры.
4. В группе При каждом сохранении на сервере Project Server
публиковать укажите, какую информацию вы хотите автоматически пуб-
ликовать при сохранении проекта. Установите или сбросьте флажки Новые
и измененные назначения, Суммарные данные проекта и Включая
полный план проекта.
Благодаря предсказуемости и согласованности отчетов, представляе-
мых в таком порядке, руководитель постоянно обладает самой полной и точ-
ной информацией о положении дел в проекте. С помощью системного адми-
нистратора проекта руководитель может задать следующие параметры:
стандартный метод представления отчета о ходе выполнения;
общие требования к отчетам;
периоды времени, за которые представляются отчеты.
6.4.2.2. Рассылка обновлений сотрудникам
В повседневной работе обычной практикой являются многочисленные
изменения рабочего графика. Microsoft Project Server и Microsoft Project Web
Access облегчают процесс информирования сотрудников о произошедших
изменениях.
Когда некоторая задача в плане проекта претерпевает существенные
изменения, вы можете разослать сотрудникам обновленную информацию
о задаче следующим образом:
1. В меню Совместная работа выберите команду Опубликовать ►
Всю информацию или щелкните на кнопке Опубликовать всю информа-
цию на панели инструментов Совместная работа.
2. Появится окно с сообщением о том, что после публикации проект
будет сохранен. Щелкните на кнопке ОК.
Обновленная информация о задаче рассылается сотрудникам. На главных
страницах их сайтов в Microsoft Project Web Access появляется сообщение о но-
вом или измененном назначении. Просмотреть изменения можно на странице
Проект.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-82-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
6.4.2.3. Получение отчетов о ходе выполнения работ
Руководитель информирует сотрудников об изменениях, касающихся
назначенных им задач, а они, в свою очередь, должны информировать руко-
водителя о ходе работы по своим назначениям.
Договоритесь с сотрудниками о том, с какой периодичностью вы хоти-
те получать от них отчеты о фактическом ходе выполнения работ. Можно,
например, условиться, что эта информация будет отправляться вам каж-
дую пятницу. Внеочередные отчеты могут быть связаны со значительными
изменениями, о которых следует ставить в известность руководителя, или
с завершением важной вехи.
Находясь в Microsoft Project, отчет о ходе выполнения работ можно
запросить в любой момент. Для этого необходимо щелкнуть на кнопке
Запросить отчет о ходе выполнения на панели инструментов Совмест-
ная работа. Каждому члену группы будет отправлено извещение с просьбой
сообщить текущий процент завершения, оставшиеся трудозатраты или
другие данные о ходе выполнения работ по назначениям.
6.4.2.4. Обновление плана проекта
Когда сотрудник присылает отчет о ходе выполнения одной или
нескольких назначенных ему задач, то уведомление об этом появляется
на главной странице сайта руководителя в Microsoft Project Web Access.
Просмотреть отчет можно, щелкнув левой кнопкой мыши на тексте уведом-
ления. Если вы утверждаете отчет, щелкните на кнопке Обновить.
Открыв план проекта, вы можете увидеть напротив некоторых задач
индикатор ожидаемого обновления. Это означает, что имеются отправлен-
ные через Microsoft Project Web Access обновления, которые ожидают своего
включения в план проекта. Все отчеты о ходе выполнения, утвержденные
вами ранее в Microsoft Project Web Access, находятся на сервере, и связанные
с ними задачи отмечаются индикатором ожидаемого обновления. Чтобы
завершить процесс обновления, щелкните на кнопке Обновить ход проек-
та на панели инструментов Совместная работа. Утвержденные руководи-
телем обновления будут считаны с сервера и записаны в план проекта. Ин-
дикаторы ожидаемого обновления исчезнут.
6.4.2.5. Получение отчетов о состоянии проекта
Зачастую одних только отчетов о ходе выполнения работ и информа-
ции об изменениях назначений может оказаться недостаточно для получения
всеобъемлющего представления о положении дел в проекте. Есть еще один
вид отчетов – отчеты о состоянии. В них дается словесный обзор текущего
состояния проекта: какие цели были достигнуты, какие возникали трудности
в ходе работы, каковы ближайшие планы и т. д.
Запрос отчетов о состоянии производится следующим образом:
1. Щелкните на ссылке Отчеты о состоянии на главной странице
Microsoft Project Web Access.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-83-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
2. На странице Отчеты о состоянии щелкните на кнопке Запросить
отчет о состоянии.
3. Выберите, какой тип отчета требуется, кто должен его представлять
и с какой периодичностью он должен присылаться.
4. Отправьте запрос.
На странице Отчеты о состоянии вы можете просматривать отдель-
ные отчеты, а также группировать несколько отчетов в один комбинирован-
ный отчет. Команда Группировать отображает список отчетов с указанием
сотрудников, которые их представили, и периодов времени, к которым они
относятся. Чтобы просмотреть отчеты о состоянии за определенный период
времени, можно применить фильтр.
6.4.3. Публикация представлений проектов
на сервере Microsoft Project Server
Руководитель может публиковать на сервере Microsoft Project Server
различные представления проекта, доступные для просмотра членам группы
и другим заинтересованным лицам. Представления проекта могут оказаться
полезными для тех сотрудников, кто хочет увидеть общую картину, т. е.
получить представление о роли и месте конкретной задачи в контексте всего
проекта. Они исключительно важны для руководителей, а также для сотруд-
ников, ведающих конкретными аспектами проекта, например учетом или
снабжением, поскольку их интересует специфическая информация, которую
удобно представить с помощью специальных представлений.
Публиковать представления проекта можно автоматически при каждом
сохранении проекта или вручную, как описано ниже.
1. В меню Совместная работа выберите команду Опубликовать ►
План проекта.
2. В появившемся информационном окне щелкните на кнопке ОК.
3. Выберите тип публикуемой информации: План проекта и суммар-
ные данные или Только суммарные данные.
Чтобы опубликовать проект, можно также воспользоваться кнопкой Опуб-
ликовать план проекта на панели инструментов Совместная работа.
Публикуемые представления посылаются на сервер Microsoft Project
Server. Сотрудники могут просматривать эти представления на страницах
Центр проектов и Проект своих сайтов в Microsoft Project Web Access.
6.4.4. Работа с учетной записью руководителя
в Microsoft Project Web Access
У руководителя проекта имеется специальная учетная запись в Micro-
soft Project Web Access. Чтобы открыть ее, выполните следующие действия:
1. Откройте браузер Internet Explorer.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-84-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
2. В поле адреса введите URL-адрес Microsoft Project Web Access.
Щелкните на клавише Enter.
3. В зависимости от конфигурации вам, возможно, потребуется ввести
имя пользователя и пароль. После этого появится главная страница Microsoft
Project Web Access.
Учетная запись руководителя проекта в Microsoft Project Web Access
позволяет просматривать информацию о группе проекта и предоставляет еще
ряд дополнительных возможностей, благодаря которым руководитель может
постоянно быть в курсе событий и информировать сотрудников и заинтере-
сованных лиц о новых и изменившихся требованиях. На сайте руководителя
в Microsoft Project Web Access имеется Центр проектов, в котором можно
просматривать диаграммы планов проектов, и Центр ресурсов, содержащий
информацию о ресурсах и их назначениях. К этим страницам можно обра-
щаться непосредственно из Microsoft Project, щелкнув на кнопке Центр про-
ектов или Центр ресурсов на панели инструментов Совместная работа.
6.4.4.1. Страница Обновления
Страница Обновления Microsoft Project Web Access содержит инфор-
мацию о транзакциях, проведенных через Microsoft Project Server и Microsoft
Project Web Access, которые должны быть доведены до сведения руководите-
ля проекта. Здесь руководитель может проанализировать вновь возникшие
обстоятельства, просмотреть сообщения, приходящие от ресурсов, и опреде-
лить, на что необходимо обратить особое внимание. Если новая информация
отсутствует, на этой странице дается описание методов принятия обновлений
в группе проекта. Руководитель может просмотреть историю обновлений
и изменения в календаре ресурсов, добавить свои комментарии и выполнить
группировку или фильтрацию.
6.4.4.2. Просмотр расписания
На странице Задачи в Microsoft Project Web Access имеется представ-
ление Расписание. В верхней части представления находятся три вкладки:
на вкладке Параметры просмотра задаются различные параметры,
определяющие содержимое расписания и его форматирование;
на вкладке Фильтр, группировка, поиск настраивается расстановка
задач в расписании;
на вкладке Делегирование настраиваются параметры, связанные
с назначением задач.
6.4.4.2. Сбор комментариев от ресурсов
Комментарии, полученные от сотрудников, можно просматривать
в Microsoft Project. Те из них, которые касаются принятия и хода выполнения
задач, включаются в комментарии к назначениям. Если назначение имеет

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-85-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
комментарий, то оно будет помечено соответствующим индикатором в пред-
ставлении использования задач или ресурсов в Microsoft Project, сгруппиро-
ванном по задачам или ресурсам. Чтобы прочесть комментарий, дважды
щелкните на индикаторе.
6.4.5. Работа со средством отслеживания вопросов
Отслеживание вопросов является составной частью процесса управле-
ния проектом и совместной работы в группе, поскольку большинство
вопросов либо возникает в ходе выполнения некоторых задач, либо оказы-
вает влияние на их выполнение. Отслеживание вопросов, относящихся
к проекту, повышает уровень осведомленности и взаимодействия членов
группы и гарантирует, что поиск решения проблемы начнется до того, как
она вызовет кризис.
В зависимости от прав доступа руководитель и члены группы могут
создавать вопросы, устанавливать их приоритеты и назначать ответственных.
Для каждого вопроса отводится отдельная страница, на которой указан кон-
трольный срок разрешения вопроса, его обсуждение и фактическая дата раз-
решения. Вопросы могут связываться с задачами, документами в библиотеке
документов и другими вопросами.
Вы можете просматривать вопросы непосредственно с сайта Microsoft
Project Web Access. Для этого щелкните в меню Вопросы. Появится страни-
ца Вопросы, на которой можно добавлять, редактировать и удалять вопро-
сы.
Средство отслеживания вопросов доступно также из Microsoft Project.
Чтобы его вызвать, выберите в меню Совместная работа команду Вопро-
сы или щелкните на кнопке Вопросы на панели инструментов Совместная
работа.
6.4.6. Работа с библиотекой документов
Библиотека документов может быть превосходным местом хранения
всех документов, относящихся к проекту: описания области охвата, продук-
тов, контактной информации членов группы, плана реагирования на измене-
ния и многого другого. Наличие централизованного хранилища для открытой
проектной документации повышает эффективность управления проектом
и совместной работы в группе за счет того, что в распоряжении сотрудников
и других заинтересованных лиц имеется вся необходимая им информация.
В зависимости от прав доступа руководитель и члены группы могут
добавлять, просматривать и искать документы в библиотеке документов.
При добавлении нового документа указывается имя файла, местоположе-
ние документа, владелец и статус (например, Черновик, Промежуточная
редакция, Окончательная редакция и т. д.). При желании можно также
связать документ с конкретными задачами.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-86-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.4. Руководство группой проекта с использованием Microsoft Project Web Access
Вы можете просматривать документы непосредственно с сайта Micro-
soft Project Web Access. Для этого щелкните в меню Документы, после чего
появится одноименная страница.
Библиотека документов доступна также из Microsoft Project. Чтобы ее
вызвать, выберите в меню Совместная работа команду Документы или
щелкните на кнопке Документы на панели инструментов Совместная работа.
6.5. Обмен информацией в Microsoft Project Web Access
С помощью Microsoft Project Web Access члены и ведущие сотрудники
группы проекта, руководители ресурсов, руководители предприятий и другие
заинтересованные лица могут просматривать и редактировать содержащуюся
в плане проекта информацию, которая распространяется руководителем про-
екта. У каждой из перечисленных групп пользователей имеются свои задачи
и приоритеты для доступа к информации, и Microsoft Project Web Access пре-
доставляет широкий диапазон возможностей, отвечающих нуждам каждой
группы. Еще более сжатого представления информации можно достичь
посредством индивидуальной настройки Microsoft Project Web Access.
Некоторые возможности Microsoft Project Web Access предназначены
для определенных групп пользователей.
6.5.1. Просмотр и принятие задач
Войдя в Microsoft Project Web Access, на главной странице сайта вы
увидите уведомление о новых назначениях, если таковые имеются. Чтобы
просмотреть информацию о назначениях на странице Задачи, достаточно
просто щелкнуть на тексте уведомления.
На странице Задачи изображена диаграмма Ганта ваших назначений,
левая часть которой представляет собой таблицу со следующей информаци-
ей:
индикаторы задач, например индикатор нового назначения (красный
восклицательный знак);
название задачи;
назначенные трудозатраты, в часах;
процент завершения по трудозатратам;
фактически осуществленные трудозатраты, в часах;
оставшиеся трудозатраты, в часах.
Приведенный список представляет информацию, отображаемую по
умолчанию. В зависимости от требований конкретного проекта руководитель
проекта может менять состав сведений, отображаемых на этой странице.
В правой части диаграммы Ганта назначения представляются в виде
отрезков. В ней приведены:
четырехнедельный фрагмент шкалы времени с разбиением по дням;
текущая дата в виде вертикальной пунктирной линии;
отрезки суммарной задачи;

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-87-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.5. Обмен информацией в Microsoft Project Web Access
отрезки отдельных задач с линиями хода выполнения, если таковые
имеются.
6.5.2. Создание новых задач и их отсылка на утверждение руководителю
Допустим, вы выполняете какую-то значительную работу, которая
не подходит под определение ни одной из назначенных вам задач, но являет-
ся необходимой для завершения проекта и должна быть учтена. Чтобы по-
ставить об этом в известность руководителя проекта и обеспечить учет вы-
полненной вами работы, вы можете создать новую задачу и послать ее на ут-
верждение руководителю. Это делается на странице Задачи.
Чтобы создать новую задачу и отправить ее на утверждение руководи-
телю проекта, выполните следующие действия:
1. Перейдите на страницу Задачи, щелкнув в меню на одноименной ссылке.
2. В левой панели страницы щелкните на ссылке Создание новой задачи.
3. На странице Создание новой задачи укажите параметры создавае-
мой задачи:
проект, для которого предназначается новая задача;
уровень новой задачи в структуре (например, она может являться под-
задачей некоторой суммарной задачи);
название задачи;
заметки к задаче;
дата начала выполнения задачи;
планируемые трудозатраты в часах или днях.
4. Выбрав параметры задачи, щелкните на кнопке Сохранить новые
задачи.
6.5.3. Создание списка дел
В ходе выполнения назначенных вам задач у вас может быть намечен
ряд небольших действий, не настолько значительных, чтобы их можно было
назвать задачами. Такие действия можно внести в список дел, воспользовав-
шись ссылкой Создание нового личного или общего списка дел на стра-
нице Проекты.
Список дел – это действия, выполняемые в ходе работы по назначени-
ям, о которых вы хотите получать напоминания (например: «Подписать у ди-
ректора запрос на внесение изменений к 30 апреля»). Списки дел хранятся
только на вашем персональном сайте Microsoft Project Web Access и не
включаются в общий план проекта.
6.5.4. Делегирование задач
Причины, по которым может возникнуть необходимость в делегирова-
нии задачи, различны, однако это право должно быть предоставлено ограни-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-88-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.5. Обмен информацией в Microsoft Project Web Access
ченному кругу лиц, чтобы избежать трудностей с выполнением графика или
даже остановки работ.
Руководитель проекта должен определить четкие обоснования и проце-
дуры делегирования работ и твердо придерживаться их в своей деятельности.
Делегирование задач осуществляется следующим образом:
1. Перейдите на страницу Задачи, щелкнув на одноименной ссылке
в меню.
2. В левой панели щелкните на ссылке Делегирование задач.
3. Выберите задачу или группу задач, которую вы хотите делегировать,
и щелкните на кнопке Делегировать задачу. Появится Мастер делегиро-
вания задач.
4. Укажите ресурс, которому вы хотите делегировать задачу. Укажите
также, предполагаете ли вы взять на себя руководство выполнением этой за-
дачи и хотите ли продолжить отслеживать ее в вашем расписании. Щелкните
по кнопке Далее.
5. Подтвердите внесенные изменения и щелкните на кнопке Отправить,
чтобы отослать информацию об этих изменениях руководителю проекта.
6.5.5. Отправка обновленной информации о задачах
Назначенные вам задачи отображаются на странице Задачи сайта
Microsoft Project Web Access. Для просмотра и обновления задач можно
пользоваться представлениями Диаграмма Ганта или Расписание. В пред-
ставлении Расписание можно вводить конкретные данные о количестве ра-
бочих и нерабочих часов за неделю.
Чтобы обновить информацию о задаче и отослать обновленные данные
руководителю проекта, выполните следующие действия:
1. Перейдите на страницу Задачи, щелкнув на одноименной ссылке
в меню.
2. В левой панели щелкните на ссылке Диаграмма Ганта или Распи-
сание, чтобы отобразить назначенные задачи в нужном вам виде.
3. Обновите информацию в следующих полях:
процент завершения по трудозатратам;
фактически осуществленные трудозатраты, в часах;
оставшиеся трудозатраты, в часах.
4. Завершив ввод информации, щелкните на кнопке Обновить все, или
Обновить выделенные строки, или Сохранить изменения. Различия ме-
жду ними состоят в следующем:
кнопка Обновить все посылает информацию об измененных назначе-
ниях на сервер Microsoft Project Server, а затем руководителю проекта;
кнопка Обновить выделенные строки посылает обновленную
информацию только о выбранных вами задачах;
кнопка Сохранить изменения сохраняет сделанные вами изменения,
но не отправляет их руководителю проекта. Это удобно, если вы еще не пол-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-89-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.5. Обмен информацией в Microsoft Project Web Access
ностью ввели нужную информацию или если руководитель принимает об-
новления по определенным дням недели.
6.5.6. Создание и отправка отчетов о состоянии
Отчеты о состоянии полезны для членов группы, ведущих сотрудников
проектов и руководителей ресурсов, обменивающихся информацией и мне-
ниями о ходе выполнения проекта. Часто требования к отчетам о состоянии
содержатся в коммуникационном плане, и все сотрудники должны четко
понимать эти требования.
Чтобы создать отчет о статусе, щелкните на ссылке Отчеты о состоя-
нии в меню. На открывшейся странице можно задать способ отсылки и адре-
сата и написать текстовые отчеты, касающиеся разных аспектов вашей рабо-
ты в проекте. Вы также можете добавить комментарии.
Заполнив все текстовые поля, отправьте отчет руководителю проекта
или просто сохраните его, не отправляя. В последнем случае отчет будет дос-
тупен для дальнейшего редактирования.
6.6. Просмотр информации в Microsoft Project Web Access
вия:
Чтобы увидеть подробный план проекта, выполните следующие дейст-
1. Щелкните на ссылке Проекты в меню.
2. В левой панели страницы Проекты щелкните на ссылке Просмотр
проектов в Центре проектов. Откроется страница, содержащая как подроб-
ную, так и общую информацию о проекте.
Содержимое страницы Центр проектов можно настраивать в соответ-
ствии с предпочтениями пользователя, его ролью в группе проекта и правами
доступа, устанавливаемыми системным администратором и руководителем
проекта. Например, если вы являетесь руководителем предприятия, то лучше
всего использовать эту страницу для отображения суммарной информации
и высокоуровневых данных по всем проектам, находящимся в вашем ведении.
А если вы просто член группы проекта, то уместнее будет исчерпывающее,
детализированное представление вашего индивидуального плана проекта.
Возможность просматривать весь проект в целом доступна всем поль-
зователям Microsoft Project Web Access, но руководителям ресурсов и веду-
щим сотрудникам групп она требуется чаще, чем руководителям предпри-
ятия. Зачастую на странице Центр проектов одновременно отображается
суммарная информация по нескольким связанным проектам и полная инфор-
мация по одному из проектов. Тем самым достигается необходимая ясность
информации без потери ее контекста. Представление данных аналогично
диаграмме Ганта на странице Задачи.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-90-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.7. Управление информацией в Microsoft Project Web Access
6.7.1. Работа со страницей Обновления
Страница Обновления содержит различного рода входящую и исхо-
дящую информацию. К входящей информации относятся, в частности, уве-
домления и назначения, а к исходящей – отчеты о состоянии и предлагаемые
или делегируемые задачи. Эта страница помогает вам быть в курсе обмена
информацией, который происходит через ваш сайт в Microsoft Project Web
Access, и напоминает вам о задачах, которые должны быть завершены,
о запросах, ожидающих ответа, и проблемах, требующих решения.
6.7.2. Просмотр расписания
Расписание является неотъемлемой частью системы Microsoft Project
Server и Microsoft Project Web Access. Оно содержит данные о рабочем гра-
фике и трудозатратах, идущие непосредственно в план проекта вашей груп-
пы, и дает точную и своевременную информацию о ходе выполнения работ,
необходимую для эффективного руководства проектом.
Для просмотра и обновления расписания выполните такие действия:
1. Щелкните на ссылке Задачи в меню. Появится страница Просмотр
моих задач.
2. На левой панели щелкните на ссылке Расписание.
3. Чтобы перейти к той неделе в расписании, для которой вы хотите
ввести информацию, воспользуйтесь стрелками в верхнем правом углу рас-
писания (Переход к предыдущему периоду и Переход к следующему
периоду).
4. Щелкните в ячейке нужного поля, например % завершения или
Фактические трудозатраты, и введите обновленную информацию, исполь-
зуя соответствующие единицы.
5. Щелкните на одной из кнопок в верхней части страницы: Обновить
все, Обновить выделенные строки или Сохранить изменения. Если вы
выберете одну из кнопок Обновить, то данные будут отправлены руководи-
телю проекта через сервер Microsoft Project Server.
6.8. Корпоративные возможности
Корпоративные возможности Microsoft Project Professional расширяют
сферу применения программы за пределы отдельных групп проектов до
средних и больших предприятий, ведущих множество проектов одновремен-
но. Эти возможности доступны в Microsoft Project Professional и функциони-
руют как надстройка над Microsoft Project. Они обеспечивают доступ к ин-
формации о десятках проектов и тысячах ресурсов за счет централизованного

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-91-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.8. Корпоративные возможности
хранения данных множества планов проектов, созданных с использованием
Microsoft Project Professional. С их помощью становится возможным получение
информации о каждом проекте и каждом ресурсе в масштабах всей компа-
нии. Корпоративные возможности реализованы на базе Microsoft Project Pro-
fessional, Microsoft Project Server, Microsoft Project Web Access и SQL Server.
Для любой фирмы, работающей со множеством проектов, использова-
ние корпоративных возможностей дает огромные преимущества. Руководители,
владельцы предприятия и топ-менеджеры могут просматривать и анализиро-
вать информацию обо всех проектах, ведущихся организацией, и всех имею-
щихся в распоряжении ресурсах, что позволяет получить исчерпывающее
представление о характере и ходе деятельности на всем предприятии. Корпо-
ративные возможности также помогают руководителям отдельных проектов
планировать и контролировать деятельность, связанную с проектом, в кон-
тексте функционирования организации в целом.
6.8.1. Стандартизация проектов на предприятии
Ключевым фактором эффективности систем управления и контроля яв-
ляется стандартизация. Цель стандартизации заключается в обеспечении
идентичности базовых правил деятельности для всех проектов. Во многих
организациях различные фазы проектов и виды работ оформляются по спе-
циальным шаблонам, форматы которых стандартизированы. Главным пре-
имуществом согласованных и стандартизированных планов проектов являет-
ся то, что все проекты могут оцениваться по одним и тем же правилам. Изме-
рение производительности отдельных частей предприятия, таких как отделы
или функциональные единицы, для использования результатов при принятии
управленческих решений называется применением метрик (metrics). Обычно
с помощью управленческих метрик отслеживаются такие характеристики
производительности, как затраты, соблюдение графика и использование че-
ло-веческих ресурсов. Метрики имеют смысл и являются адекватными сред-
ствами оценки тогда, когда имеются стандартизированные процедуры. Оцен-
ка ситуации становится более адекватной, а эффективность руководства по-
вышается, когда решения могут приниматься на основе известных руково-
дящих принципов.
Корпоративные возможности Microsoft Project обеспечивают стандар-
тизацию планирования проектов и, соответственно, использование стандар-
тизированных управленческих метрик. Проводя анализ информации о дея-
тельности всего предприятия с использованием корпоративных возможно-
стей Microsoft Project Professional, руководитель может быть уверен, что
структура и элементы планов всех проектов построены по единому стандар-
ту. Таким образом, у руководителя есть гарантия, что сравниваемые величи-
ны действительно поддаются сравнению, методики и данные, применяемые в
Microsoft Project для оценки хода выполнения проекта, согласованы между
собой,
и в результирующих отчетах используются одни и те же мет-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-92-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.8. Корпоративные возможности
рики. Эта предсказуемость и ясность содержимого являются главным пре-
имуществом
стандартизации.
6.8.2. Управление ресурсами предприятия
В больших организациях, особенно тех, которые имеют несколько фи-
лиалов, управление ресурсами может представлять трудную задачу. Выделе-
ние и использование ресурсов может осуществляться множеством способов
в зависимости от практики, принятой в данной организации, но возможность
получения информации о ресурсах в масштабах всего предприятия является
ключевой составляющей их эффективного управления. Отсутствие квалифи-
цированного работника на какой-то должности может привести к серьезным
задержкам или даже потере клиентов, так же как использование ресурсов
не в полном объеме может приводить к ненужным расходам и снижению
прибылей.
Microsoft Project Professional может предоставить ценную информацию об
использовании, выделении и доступности ресурсов на всем предприятии. Хотя
эта программа не предназначена специально для управления человеческими ре-
сурсами, корпоративные возможности тем не менее помогают руководителям
и топ-менеджерам эффективно использовать ее, отображая информацию обо
всех ресурсах, задействованных в проектах предприятия. Вот некоторые из
корпоративных возможностей, помогающих в управлении ресурсами:
мастер построения групп;
корпоративный пул ресурсов;
мастер замены ресурсов;
универсальные ресурсы;
графики доступности ресурсов.
Используя полученную с помощью этих средств информацию, сотруд-
ники, ответственные за принятие решений, могут предотвращать снижение
производительности из-за неэффективного использования ресурсов.
6.8.3. Портфели проектов
Ключевым преимуществом использования корпоративных возможно-
стей Microsoft Project Professional являются так называемые портфели проек-
тов, которые обеспечивают представление информации о множестве проек-
тов в четкой и понятной форме в едином месте. Руководители могут опера-
тивно просматривать весь свой портфель проектов, оценивать текущий ход
работ
и сравнивать проекты между собой.
Руководитель может также использовать средство анализа портфеля
для анализа информации о проектах и ресурсах в своей организации. С по-
мощью этого инструмента руководитель может найти доступные ресурсы,
сравнить затраты по проектам, увидеть ведущуюся в настоящий момент ра-
боту и просмотреть данные по всем проектам предприятия, представленные
множеством различных способов. Главным средством для анализа информа-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-93-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.8. Корпоративные возможности
ции
о проектах и ресурсах являются OLAP-кубы (OnLine Analytical
Processing – аналитическая обработка данных в реальном времени). Они пре-
доставляют пользователю возможность осуществлять извлечение данных
предприятия
на предмет определенной информации, собранной со всей
организации.
Пользователи корпоративных возможностей Microsoft Project Profes-
sional могут настраивать портфели на отображение информации по избран-
ным проектам или по всем проектам компании. Во взаимодействии с систем-
ным администратором проекта пользователи могут осуществлять индивиду-
альную настройку своих портфелей. Информация о проектах в портфеле
дается в обобщающей форме, что облегчает изучение и сравнение данных
нескольких проектов.
6.9. Реализация корпоративных проектов
Достигнуть более адекватного понимания того, что и как позволяют
делать корпоративные возможности, можно, уяснив, как они реализованы
и какова их роль и место в системе управления проектами Microsoft Project
Professional.
6.9.1. Работа с корпоративными проектами
Корпоративные проекты, выполняемые в организации на платформе
MS Project, хранятся в соответствии с архитектурой, приведенной на рис.
6.15.
Процесс работы с несколькими проектами на предприятии можно опи-
сать таким образом:
1. Системный администратор проекта настраивает глобальный корпо-
ративный шаблон – общий шаблон планов проектов для данного предпри-
ятия. Этот шаблон содержит всю стандартизированную информацию, на-
страиваемые поля, представления, формулы и другие типы индивидуальной
информации, относящиеся к данной организации.
2. Руководители проектов всей организации используют глобальный
корпоративный шаблон в Microsoft Project Professional для составления
и ведения планов своих проектов.
3. Руководители проектов используют корпоративный пул ресурсов
для поиска в организации ресурсов с набором специализаций и параметрами
доступности, соответствующими требованиям проекта.
4. Руководители могут просматривать информацию о нескольких
проектах с помощью представления портфеля в Microsoft Project Web Access.
Руководитель может также напрямую войти в Microsoft Project Server
и с помощью MS Project Web Access просмотреть данные о проекте и ресур-
сах. Работая со средством анализа портфеля, руководители могут получать

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-94-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
высокоуровневую суммарную информацию о проектах предприятия, вклю-
чая данные о соблюдении графика, затратах, ресурсах и многом другом. Ис-
пользуя средство моделирования портфеля, руководители предприятия и от-
дельных проектов могут проигрывать сценарии «что, если...» с учетом раз-
личных потенциальных факторов, относящихся к графику, бюджету, ресур-
сам
и области охвата проекта.
Можно преобразовать существующий план проекта в корпоративный
проект, импортировав его на сервер Microsoft Project Server, либо создать
корпоративный проект с нуля. В обоих случаях корпоративные проекты бази-
руются на глобальном корпоративном шаблоне. После создания корпоратив-
ного проекта его можно извлекать с сервера Microsoft Project Server и воз-
вращать обратно на сервер.
MS Project Server
MS SQL Server
БД MS Project
Server
MS Project
Professional
MS Project
Web Access
БД MS Project
Server
Рис..21. Корпоративная система управления проектами
Системный администратор проекта, советуясь с руководителями про-
ектов всего предприятия, может создавать настраиваемые корпоративные по-
ля, которые становятся частью глобального корпоративного шаблона. Таким
образом, все корпоративные проекты используют одни и те же поля, что
гарантирует стандартизацию и адаптирует проекты к тем методам управле-
ния и анализа проектов, которые практикуются данной организацией.
6.9.2. Импорт плана проекта как корпоративного
Когда у вас имеется активная учетная запись на сервере Microsoft
Project Server, которая открывается при запуске Microsoft Project Professional,
вы можете импортировать существующие планы проектов как корпоративные.
Для этого выполните следующие действия:
1. В Microsoft Project Professional закройте проект, который вы хотите
импортировать в качестве корпоративного, и сохраните его в виде файла на
локальном диске.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-95-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
2. Откройте любой другой проект в Microsoft Project Professional.
3. В меню Сервис выберите команду Корпоративные параметры ►
Импорт проекта в корпоративное хранилище. Появится окно Мастер
импорта проектов.
4. На первой странице мастера щелкните на кнопке Далее. Появится
страница Импорт проекта. Выберите папку с файлом проекта, который вы
хотите импортировать. Щелкните на этом файле, а затем на кнопке Импорт.
5. На следующей странице мастера можно при необходимости изме-
нить параметры корпоративной стандартизации: имя, версию, тип, календарь,
настраиваемые корпоративные поля и их значения.
Имейте в виду, что эти параметры важны для конфигурирования
и управления документами на предприятии. Они все автоматически устанав-
ливаются мастером в стандартные корпоративные значения. Для поддержа-
ния корпоративной стандартизации лучше всего оставить в этих полях
значения, предложенные мастером.
6. Щелкните на кнопке Далее.
7. На третьей странице мастера, если необходимо, сопоставьте имена
ресурсов. Это требуется только тогда, когда вы импортируете в проект, кото-
рый ранее был возвращен на сервер. В этом случае все новые ресурсы
должны быть сопоставлены ресурсам из корпоративного пула. Для пер-
вичного импорта это не требуется. Щелкните на кнопке Далее.
8. На четвертой странице мастера щелкните на полях, которые вы хоти-
те импортировать в качестве настраиваемых корпоративных полей. Щелк-
ните на кнопке Далее.
9. На следующей странице появится отчет о ходе выполнения импорта.
Внесите необходимые коррективы. По завершении щелкните на кнопке
Импорт.
10. Появится последняя страница мастера, извещающая о том, что
процесс импорта завершен. Если вы хотите импортировать другие проек-
ты, то щелкните на кнопке Импорт других проектов. В противном случае
щелкните на кнопке Готово.
6.9.3. Обновление данных корпоративного проекта
Открывая корпоративный проект, вы извлекаете его из сервера. Анало-
гичным образом, сохраняя проект как корпоративный, вы возвращаете его на
сервер. Можно иметь несколько различных версий опубликованного корпо-
ративного проекта. При необходимости можно работать автономно.
6.9.4. Извлечение и возврат корпоративных проектов
Когда вы работаете с извлеченным корпоративным проектом, доступ
к этому проекту закрыт для всех остальных владельцев корпоративных
учетных записей.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-96-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
После того как вы сохраните и вновь возвратите проект на сервер, он
становится доступным для других обладателей корпоративных учетных
записей. Выполнив возврат проекта, система сообщает, что календари ва-
шего проекта будут сохранены вместе со стандартными корпоративными
календарями.
6.9.5. Работа с опубликованными версиями корпоративных проектов
Когда вы возвращаете проект на сервер Microsoft Project Server, к его
имени автоматически добавляется слово «опубликован». Быть может, вы
существенно изменили план вашего проекта, назначили новый базовый план
или даже переконфигурировали работу, чтобы привести ее в соответствие
с директивами компании. В таких ситуациях необходимо создать новую
версию проекта. Контроль версий очень важен для корпоративных проектов
и настраивается системным администратором проекта. Это необходимо для
того, чтобы избежать появления нескольких версий одного и того же проекта
и предотвратить потерю связи между проектом, получившим новую версию,
и другими зависящими от него проектами.
Системный администратор проекта может архивировать, удалять и до-
бавлять версии планов проектов, а также определять и разрывать связи меж-
ду ними. Если вам нужно опубликовать новую версию проекта, обратитесь
к системному администратору вашего проекта. Обычно замененная версия
отправляется в архив, так что просматривать ее и работать с ней по-
прежнему можно, но нельзя сохранить на сервере Microsoft Project Server.
Новая версия будет помещена на сервер, ей будет дано новое имя, и все
ссылки на другие на проекты будут установлены заново. Для вас различие
может отразиться
в том, что у вашего проекта появится «опублико-
ван2».
6.9.6. Работа с корпоративными проектами в автономном режиме
При необходимости можно сохранить корпоративный проект и рабо-
тать с ним автономно. Это удобно, если вы находитесь далеко от сети или
хотите опробовать какие-нибудь неожиданные сценарии на корпоративном
проекте. Когда вы снова будете готовы подключиться, просто войдите на
сервер, откройте файл вашего корпоративного проекта и сохраните его. По-
скольку вы снова в сети и соединены с системой, ваш файл будет возвращен,
когда вы его сохраните.
Работа с Microsoft Project Professional в автономном режиме удобна
во многих ситуациях и обеспечивает большую мобильность. Возможность
впоследствии восстановить соединение представляет собой неоценимое пре-
имущество.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-97-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
6.9.7. Работа с корпоративным пулом ресурсов
Благодаря корпоративным возможностям эффективное управление
ресурсами во всей организации может быть составляющей процесса руковод-
ства проектом. Это обеспечивает корпоративный пул ресурсов, который
может содержать ресурсы, задействованные во всех проектах предприятия.
При использовании корпоративного пула ресурсов можно легко
определить доступность, квалификацию, роли и использование ресурсов.
Руководители могут видеть, где существует нехватка персонала или не пол-
ностью использованные ресурсы. Они также могут просматривать основные
данные по всем ресурсам проектов, сконцентрированные в одном месте.
Кроме того, руководители проектов могут планировать потребность
в персонале, имея точную и актуальную информацию о ресурсах всего
предприятия, а не только своей команды или группы. Такие преимущества
многопроектного пула ресурсов, как совместное использование ресурсов
руководителями нескольких проектов, умножаются, если их использовать
применительно к предприятию в целом.
Руководителям ресурсов корпоративные возможности помогут более
точно и уверенно подобрать персонал, спланировать работы и рассчитать
бюджет. Они могут просматривать имеющиеся ресурсы по их уровню ква-
лификации, названию, доступности и положению в организационной
иерархии. Кроме того, они могут помогать руководителям проектов удов-
летворять их текущие и ожидаемые потребности в ресурсах, анализировать
базу данных ресурсов предприятия. Во взаимодействии с руководителями
проектов руководители ресурсов могут работать с универсальными ресур-
сами в корпоративном пуле ресурсов, планировать и анализировать не-
предвиденные обстоятельства.
С помощью Мастера замены ресурсов руководитель проекта или
ресурсов может быстро найти и заменить ресурсы, необходимые для работ
по конкретному проекту или переводимые в другое подразделение. Разуме-
ется, необходимо следовать политике компании в отношении допуска
к работе при назначении ресурсов из других отделов.
В рамках отдельного проекта Microsoft Project Web Access также хоро-
шо интегрируется с корпоративным пулом ресурсов. Руководители ресурсов
уровня проекта, лидеры и члены групп проектов могут планировать потреб-
ность в ресурсах, возможности по назначению и доступность во взаимодей-
ствии с руководителем проекта.
6.9.8. Импорт информации о ресурсах в корпоративный пул
Руководители проектов во всей организации изначально импортируют
ресурсы на сервер Microsoft Project Server в процессе преобразования инди-
видуальных планов проектов в корпоративные. После того как импортирова-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-98-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
но много планов проектов и списков ресурсов, вы можете добавить дополни-
тельные ресурсы из нескольких других планов, выполнив следующие шаги:
1. Если вы извлекли корпоративный проект, то выберите в меню
Сервис команду Корпоративные параметры
► Импорт ресурсов
в корпоративный пул.
2. Появится окно Мастер импорта ресурсов. На первой странице
мастера щелкните на кнопке Далее.
3. Появится страница Открыть с сервера Microsoft Project Server.
Выберите имя проекта, ресурсы из которого вы хотите импортировать, затем
щелкните на кнопке Открыть.
4. На следующей странице сопоставьте ресурсы исходного проекта
и соответствующие корпоративные ресурсы. Если у вас нет ресурсов, кото-
рые нужно сопоставлять с корпоративными, то не щелкайте в таблице.
Щелкните на кнопке Далее.
5. На открывшейся странице вы увидите полный список ресурсов ва-
шего проекта. Если флажки напротив ресурсов еще не установлены, то
щелкните на кнопке Выделить все/Снять выделение, чтобы указать ре-
сурсы, которые вы хотите импортировать. Если флажки уже установлены,
щелкните на кнопке Далее.
6. На странице Импорт завершен щелкните на кнопке Импорт других
ресурсов, если вы хотите импортировать ресурсы из других корпоративных
проектов или проектов, сохраненных в виде файлов на вашем локальном
компьютере. Это удобный способ включить все ваши ресурсы в корпоратив-
ный пул. По завершении щелкните на кнопке Готово.
6.9.9. Создание группы проекта
Вы, как руководитель проекта, можете использовать возможности
управления корпоративными ресурсами для создания группы проекта. Корпора-
тивный пул ресурсов поможет увидеть все ресурсы, которые вы потенциально
можете использовать.
6.9.10. Универсальные ресурсы
Универсальный ресурс – это обычно ресурс, определяемый набором
ролей или специализаций, например «эксперт по VB-программированию».
В Microsoft Project можно добавлять в план проекта универсальные ресурсы.
Имея достаточные полномочия, можно также добавлять универсальные
ресурсы в корпоративный пул ресурсов. Эти универсальные ресурсы руково-
дители проектов, ресурсов и всей организации могут затем использовать для
планирования или анализа непредвиденных ситуаций. Поскольку областью
охвата универсальных ресурсов является вся компания, лучше предваритель-
но убедиться, что ваше описание приемлемо и понятно для всех. Также по-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-99-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
лезно просмотреть пул ресурсов, чтобы удостовериться, что в нем нет такого
же универсального ресурса, как тот, который вы собираетесь создать.
Универсальные ресурсы не имеют состояния доступности. Их функ-
ция – быть заменителем конкретного содержимого. Они могут многократно
извлекаться из корпоративного пула ресурсов руководителями разных проек-
тов. Можно также создавать универсальные ресурсы непосредственно в сво-
ем плане проекта. Затем с помощью Мастера замены ресурсов можно
просмотреть корпоративный пул на предмет наличия ресурсов, квалифика-
ция и доступность которых соответствует характеристикам ваших универ-
сальных ресурсов.
6.9.11. Замена ресурсов
Корпоративный пул ресурсов представляет для руководителей замеча-
тельное средство поиска квалифицированного персонала, соответствующего
заданным требованиям, в рамках всей организации. Когда руководитель
находит ресурс, не входящий в группу какого-либо проекта, он может задей-
ствовать этот ресурс.
Компания должна устанавливать руководящие принципы и правила
совместного использования ресурсов и допуска к работам. Обычно, чтобы
получить для проекта некоторый ресурс, необходимо обсудить это с менед-
жером ресурсов. Прежде чем заменить ресурсы, обязательно определите,
какой ресурс вашего проекта будет заменен. Зачастую лучший способ это
сделать – создать универсальный ресурс с графиком доступности, соответст-
вующим необходимому вам ресурсу.
Чтобы произвести замену ресурса, выполните следующие действия.
1. Войдите на сервер Microsoft Project Server с корпоративной учетной
записи.
2. Откройте в Microsoft Project Professional проект, планирование ре-
сурсов в котором вы производите.
3. Выберите в меню Сервис команду Замена ресурсов. Откроется
окно Мастер замены ресурсов.
4. На первой странице щелкните на кнопке Далее.
5. На странице Выбор проектов выберите проекты, замену ресурсов
в которых вам необходимо осуществить. Этот список включает все активные
корпоративные проекты, не извлеченные в данный момент. Щелкните на
кнопке Далее.
6. На странице Выбор ресурсов выберите рабочие ресурсы, которые
вы хотите назначить на ваши задачи.
7. На странице Выбор связанных проектов выберите все прочие про-
екты, которые, по вашему мнению, должны быть приняты во внимание при
замене ресурсов. Введите необходимые данные о связанных проектах, на-
пример имя и связь с вашим проектом. Щелкните на кнопке Далее.
8. На странице Выбор параметров планирования определите пара-
метры, которые вы хотите применить. По умолчанию параметр Приоритет

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-100-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
устанавливается в значение 500, а Параметр планирования настроен так,
чтобы использовать все ресурсы вашего проекта. Можно установить более
высокий приоритет планирования, например 700, если это требуется для
нужд вашего проекта. Щелкните на кнопке Далее.
9. На странице Замена ресурсов проверьте конфигурации, основы-
вающиеся на выбранных вами параметрах, и щелкните на кнопке Выполнить.
10. Щелкните на кнопке Далее. На странице Проверка результатов
проверьте результаты замены. Для найденных ресурсов на этой странице
показываются:
задачи;
профили квалификации;
назначенные ресурсы;
запрошенные ресурсы;
статус запроса/затребованности.
Вы можете сортировать, фильтровать и группировать элементы этого
списка, чтобы лучше видеть необходимые вам ресурсы. Если ресурсов, соот-
ветствующих вашим критериям, найдено не было, то все поля будут показа-
ны, но таблица будет пустой. Щелкните на кнопке Далее.
11. На странице Выбор параметров обновления выберите, следует
ли обновлять другие проекты, используя результаты работы мастера, или
следует сохранить результаты запроса в заданной вами папке. Щелкните на
кнопке Далее.
12. На странице Готово даны напоминания о том, что необходимо сде-
лать для завершения всего процесса замены ресурсов. Щелкните на кнопке
Готово.
6.9.12. Работа с построителем групп
Работа с построителем групп представляет собой эффективный способ
использования корпоративного пула ресурсов для создания группы проек-
та, пока проект еще находится на стадии планирования. Построитель групп
можно запустить и после того, как план будет создан, но наиболее эффекти-
вен он на стадии начального планирования. Использование этой функции
становится возможным при наличии соответствующих полномочий, предос-
тавленных вам системным администратором проекта.
Работа с построителем групп состоит из следующих шагов.
1. Выберите в меню Сервис команду Создать корпоративную группу.
Если вы в первый раз используете эту функцию, то увидите информацион-
ное окно с напоминанием о том, что необходимо использовать стандартные
корпоративные календари. Кроме того, если в корпоративной базе данных
насчитывается более 1000 ресурсов, то вам будет предложено отфильтровать
этот список по кодам структуры. Затем появится начальная страница
построителя групп. В ее левой панели будет отображен полный список кор-
поративных ресурсов, а в правой – список открытых ресурсов проекта. Если

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-101-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
вы создаете группу для нового проекта, то правая панель (ресурсы группы)
может не содержать никаких ресурсов.
2. Если требуется сузить список корпоративных ресурсов, предлагае-
мых для выбора, то выберите один из фильтров в группе Фильтрация кор-
поративных ресурсов. Вы также можете создавать собственные фильтры.
3. Когда ваш список ресурсов примет желаемый вид, сопоставьте
ресурсы, используя один из следующих методов:
а) выберите корпоративные ресурсы и добавьте их в группу вашего
проекта с помощью кнопки Добавить;
б) выберите те ресурсы в вашем проекте, которые вам не понадобятся,
и переместите их в корпоративный список, щелкнув на кнопке Удалить;
в) выберите определенный корпоративный ресурс и ресурс опреде-
ленной группы проекта и произведите замену, щелкнув на кнопке Заме-
нить;
г) выберите универсальный ресурс в группе Ресурс группы и узнайте,
имеется ли подходящий ресурс в корпоративной базе данных, щелкнув на
кнопке Сопоставить. Затем выберите ресурс и щелкните на кнопке Под-
робности для получения подробной информации об этом ресурсе. Далее вы-
берите ресурс и щелкните на кнопке Графики, чтобы увидеть график дос-
тупности этого ресурса. Эта функция – один из способов предсказать по-
требности в ресурсах и их доступность. Она позволяет быстро определить,
располагает ли ресурс временем для работы по требуемой вами программе.
Закончив выбор и добавление ресурсов, щелкните на кнопке ОК. Груп-
па вашего проекта создана.
6.9.13. Просмотр и обновление информации о ресурсах
При наличии корпоративных ресурсов в планах проектов корпоратив-
ные возможности позволяют выбирать множество различных способов пред-
ставления информации о ресурсах.
6.9.14. Просмотр графиков доступности ресурсов
Просмотр графиков доступности корпоративных ресурсов возможен
с помощью построителя групп и через представление на сервере Microsoft
Project Server при наличии соответствующих полномочий, предоставленных
системным администратором проекта. Эти графики также можно просмот-
реть в Microsoft Project Professional, в диалоговом окне Назначение ресур-
сов. Графики доступности ресурсов позволяют увидеть:
повременные назначения одного или нескольких ресурсов;
повременную и оставшуюся доступность одного или нескольких ресур-
сов;
повременные данные о ресурсах, сгруппированные по проектам.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-102-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
6.9.15. Анализ нескольких проектов
с использованием портфеля проектов
Одной из наиболее важных корпоративных возможностей Microsoft
Project Professional является функция отображения информации обо всех
проектах, ведущихся организацией. В больших организациях, а также в орга-
низациях, имеющих большое число активных проектов, обычно оказывается
непрактичным просматривать подробную информацию о каждом проекте.
Однако возможность просматривать высокоуровневую итоговую информа-
цию по всем задачам, графикам, затратам и использованию ресурсов в проек-
тах становится большим преимуществом. Также полезна возможность сведе-
ния воедино информации по нескольким проектам и проведения сравнения
между ними.
Используя Microsoft Project Professional с корпоративными возможно-
стями, обзор, анализ и обработку высокоуровневой итоговой информации
можно производить средствами Microsoft Project Server.
В Microsoft Project Web Access можно создать персональный портфель,
состоящий только из тех корпоративных проектов, которые вы хотите анали-
зировать. Системный администратор вашего проекта настраивает полномо-
чия и выбирает проекты и детали для вашего портфеля. Это напоминает на-
стройку Центр проектов в Microsoft Project Web Access, но с возможностью
выбора из гораздо большего количества проектов. Обладание таким крупным
и тщательно настроенным портфелем увеличивает мощь корпоративных
возможностей.
Кроме того, для руководителей предприятия на сервере Microsoft
Project Server может быть создано представление портфеля, которое выдает
итоговую информацию в трех форматах:
сводная таблица;
диаграмма (например, реберный граф);
комбинация этих двух форматов.
Анализ портфеля — ценное средство для старших менеджеров и ру-
ководителей предприятия, которым требуется специальная оценка и анализ
корпоративных проектов и ресурсов. Если вы работаете в Microsoft Project
Professional и хотите быстро переключиться на Анализ портфеля, щелкните
на пиктограмме Анализ портфеля на панели инструментов Совместная
работа.
Аналогичным образом можно открыть Моделирование портфеля –
щелчком на пиктограмме Моделирование портфеля на панели инструмен-
тов Совместная работа.
OLAP-куб – аналитическое средство, предназначенное для избиратель-
ного поиска и организации данных о задачах или ресурсах, полученных

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-103-
6. ОРГАНИЗАЦИЯ ПРОЦЕССА ВЫПОЛНЕНИЯ ПРОЕКТА
6.9. Реализация корпоративных проектов
с сервера Microsoft Project Server. В контексте корпоративных возможностей
Microsoft Project Server они спроектированы как средства для избирательного
исследования различных аспектов баз данных.
Для определения куба используются такие элементы, как диапазоны
данных и поля ресурсов. Можно создавать OLAP-кубы для данных о проекте,
о ресурсах или о том и другом вместе. OLAP-кубы представляют собой
способ анализа данных, а не пользовательский интерфейс. Пользовательский
интерфейс – это страница представления Анализ портфеля на сервере
Microsoft Project Server.
Контрольные вопросы
1. В чем заключается составление плана проекта?
2. Какие существуют способы планирования в зависимости от основ-
ных дат проекта?
3. Каким образом в MS Project организована работа с календарями?
4. С чего начинается определение состава проектных работ?
5. Какие существуют типы связей?
6. Для чего используются задержки и опережения?
7. Что такое суммарная задача проекта?
8. Какие существуют методики планирования стоимости проекта?
9. Какие аспекты нужно проанализировать при оптимизации плана
проекта?
10. Для чего предназначены Microsoft Project Server и Microsoft Project
Web Access?
11. Какова последовательность действий при публикации проекта на
сервере?
12. Какие возможности по обмену информацией существуют в Micro-
soft Project Web Access?
13. Для чего предназначены корпоративные возможности Microsoft
Project Professional?
са?
сов?
14. Что такое универсальный ресурс?
15. С помощью какого инструмента можно произвести замену ресур-
16. Какая информация отражается на графиках доступности ресур-

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-104-
ЗАКЛЮЧЕНИЕ
Последовательно осваивая материал настоящего учебного пособия,
студенты, изучающие курс «Технология разработки программного обеспече-
ния», могут самостоятельно выполнить курсовой проект по данной дисцип-
лине.
В результате выполнения курсового проекта формируются навыки са-
мостоятельного управления группой разработчиков программного обеспече-
ния, оценки рисков, связанных с выполнением проекта, оценки трудоемкости
разработки программной системы, отслеживания и управления ходом выпол-
нения работ по проекту с помощью программных комплексов Microsoft
Project и Microsoft Project Server.
Особое внимание в данном пособии уделено планированию работы
команды над проектом. Этот процесс является важнейшим компонентом при
управлении проектами. В программной инженерии процесс планирования
является трудно формализуемой задачей из-за большого количества неиз-
вестных и существенно отличается от классического процесса планирования
в проектах других типов.
Очень часто в небольших командах разработчиков программных сис-
тем применяются гибкие технологии, например экстремальное программиро-
вание, где процесс планирования сводится к перечню основных функций
системы и ежедневному распределению работ внутри команды.
Для крупных компаний такой подход неприемлем и требуется более
тщательное и точное планирование, которое, в свою очередь, требует исполь-
зования методик оценки трудоемкости программных систем и методик
управления рисками. Такой подход и был взят за основу при написании дан-
ного учебного пособия для выполнения студентами курсового проекта.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-105-
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1. Арчибальд, Р. Управление высокотехнологичными программами
и проектами / Рассел Д. Арчибальд ; пер. с англ. Е. В. Мамонтова ; под ред.
А. Д. Баженова, А. О. Арефьева. – 3-е изд., перераб. и доп. – М. : ДМК Пресс
; Компания «АйТи», 2006. – 472 с.
2. Басс, Л. Архитектура программного обеспечения на практике /
Л. Басс, П. Клементс, Р. Кацман. – 2-е изд. – СПб. : Питер, 2006. – 575 с.
3. Бек, К. Экстремальное программирование: разработка через тестиро-
вание / К. Бек. – СПб. : Питер, 2003. – 224 с. – (Биб-ка программиста).
4. Бенькович, Е. С. Практическое моделирование динамических систем /
Е. С. Бенькович, Ю. Б. Колесов, Ю. Б. Сениченков. – СПб. : БХВ-Петербург,
2002. – 464 с.
5. Благодатских, В. А. Стандартизация разработки программных
средств : учеб. пособие / В. А. Благодатских, В. А. Волнин, К. Ф. Поскакалов
; под ред. О. С. Разумова. – М. : Финансы и статистика, 2003. – 288 с.
6. Бобровский, С. Технологии Пентагона на службе российских програм-
мистов. Программная инженерия / С. Бобровский. – СПб. : Питер, 2003. – 222 с.
7. Богданов, В. В. Управление проектами в Microsoft Project 2002 :
учеб. курс / В. В. Богданов. – СПб. : Питер, 2003. – 640 с.
8. Брауде, Э. Технология разработки программного обеспечения /
Э. Брауде. – СПб. : Питер, 2004. – 655 с.
9. Брукс, Ф. Мифический человеко-месяц, или Как создаются про-
граммные системы / Ф. Брукс. – СПб. : Символ-Плюс, 2001. – 304 с.
10. Войнов, И. В. Моделирование экономических систем и процессов.
Опыт построения ARIS-моделей : монография / И. В. Войнов, С. Г. Пудовки-
на, А. И. Телегин. – Челябинск: Изд-во ЮУрГУ, 2002. – 392 с.
11. Приемы объектно-ориентированного проектирования. Паттерны
проектирования / Э. Гамма, Э. Джонсон, Р. Хелм, Дж. Влиссидес. – СПб. :
Питер, 2003. – 368 с.
12. Грибачев, К. Г. Delphi и Model Driven Architecture. Разработка при-
ложений баз данных / К. Г. Грибачев. – СПб. : Питер, 2004. – 348 с.
13. Джалота, П. Управление программным проектом на практике /
П. Джалота. – М. : Изд-во «Лори», 2005. – 223 с.
14. Иванова, Г. С. Технология программирования : учеб. для вузов /
Г. С. Иванова. – М. : Изд-во МГТУ им. Н. Э. Баумана, 2002. – 320 с.
15. Камаев, В. А. Технологии программирования / В. А. Камаев,
В. В. Костерин. – М. : Высш. шк., 2005. – 359 с.
16. Кантор Мари. Управление программными проектами. Практическое
руководство по разработке программного обеспечения / Мари Кантор. – М. :
Издательский дом «Вильямс», 2002. – 176 с.
17. Керцнер, Г. Стратегическое планирование для управления проекта-
ми с использованием модели зрелости / Г. Керцнер. – М. : ДМК Пресс, 2003.
– 320 с.
18. Константайн, Л. Разработка программного обеспечения / Л. Кон-
стантайн, Л. Локвуд. – СПб. : Питер, 2004. – 592 с.

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-106-
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
19. Кратчен, Ф. Введение в Rational Unified Process / Ф. Кратчен. –
2-е изд. – М. : Издательский дом «Вильямс», 2002. – 240 с.
20. Кролл, П. Rational Unified Process – это легко. Руководство по RUP
для практиков / П. Кролл, Ф. Кратчен. – М. : КУДИЦ-ОБРАЗ, 2004. – 432 с.
21. Макконелл, С. Остаться в живых. Руководство для менеджера про-
граммных проектов / С. Макконелл. – СПб. : Питер, 2006. – 240 с. – (Биб-ка
программиста).
22. Орлов, С. А. Технологии разработки программного обеспечения :
учеб. пособие / С. А. Орлов. – 2-е изд. – СПб. : Питер, 2003. – 480 с.
23. Паулк М. Модель зрелости процессов разработки программного
обеспечения / М. Паулк, Б. Куртис, М. Хриссис и др. – М. : Богородский
печатник, 2002. – 256 с.
24. Разработка программных проектов на основе Rational Unified
Process (RUP) / Г. Полис, Л. Огастин, К. Лоу, Д. Мадхар. – М. : ООО «Бином-
Пресс», 2005. – 256 с.
25. Ройс У. Управление проектами по созданию программного обеспе-
чения. Унифицированный подход / У. Ройс. – М. : Изд-во «Лори», 2002. – 424
с.
26. Садердинов, А. А. Построение комплексных программно-технических
проектов интегрированных систем организационного управления (обобще-
ние теории и практики проектирования) / А. А. Садердинов, В. А. Трайнев. –
М. : Издательско-книготорговый центр «Маркетинг», 2001. – 287 с.
27. Соммервилл, И. Инженерия программного обеспечения / И. Сом-
мервилл. – 6-е изд. – М. : Издательский дом «Вильямс», 2002. – 624 с.
28. Сухомлин, В. А. Введение в анализ информационных технологий :
учеб. для вузов / В. А. Сухомлин. – М. : Горячая линия-Телеком, 2003. – 427
с.
29. Томсетт, Р. Радикальное управление ИТ-проектами / Р. Томсетт. –
М. : Изд-во «Лори», 2005. – 291 с.
30. Шафер, Д. Управление программными проектами: достижение оп-
ти-мального качества при минимуме затрат / Д. Шафер, Р. Фатрелл, Л. Ша-
фер. – М. : Издательский дом «Вильямс», 2003. – 1136 с.
31. Якобсон, А. Унифицированный процесс разработки программного
обеспечения / А. Якобсон, Г. Буч, Дж. Рамбо. – СПб. : Питер, 2002. – 496 с.
32. Якунин, Ю. Ю. Технологии разработки программного обеспечения :
лаб. практикум / Ю. Ю. Якунин, И. С. Почекутов, С. В. Якунина. – Красно-
ярск : ИПК СФУ, 2008. – 162 c. – (Технологии разработки программного
обеспечения : УМКД No 183-2007 / рук. творч. коллектива Ю. Ю. Якунин).

Технологии разработки программного обеспечения. Учеб. пособие по курсовому проектированию
-107-

